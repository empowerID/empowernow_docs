"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[1569],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(96540);const r={},l=s.createContext(r);function o(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(l.Provider,{value:n},e.children)}},29524:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"source_content/mcp_virtual_views","title":"mcp_virtual_views","description":"Loopback MCP Virtual Views and Pagination","source":"@site/docs/source_content/mcp_virtual_views.md","sourceDirName":"source_content","slug":"/source_content/mcp_virtual_views","permalink":"/empowernow_docs/docs/source_content/mcp_virtual_views","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/mcp_virtual_views.md","tags":[],"version":"current","frontMatter":{}}');var r=i(74848),l=i(28453);const o={},c=void 0,t={},d=[{value:"Loopback MCP Virtual Views and Pagination",id:"loopback-mcp-virtual-views-and-pagination",level:3},{value:"Where the configuration lives",id:"where-the-configuration-lives",level:2},{value:"YAML format",id:"yaml-format",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"Fallback views and hot\u2011reload",id:"fallback-views-and-hotreload",level:3},{value:"Structured logging",id:"structured-logging",level:3},{value:"Pagination",id:"pagination",level:2},{value:"Examples (direct to CRUDService)",id:"examples-direct-to-crudservice",level:3},{value:"Via BFF (recommended)",id:"via-bff-recommended",level:2},{value:"Router tools (optional)",id:"router-tools-optional",level:2},{value:"Operational notes",id:"operational-notes",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"loopback-mcp-virtual-views-and-pagination",children:"Loopback MCP Virtual Views and Pagination"}),"\n",(0,r.jsx)(n.p,{children:'This guide explains how to expose filtered subsets of the CRUDService MCP tool catalog as "virtual" servers on distinct API paths, and how to use pagination for large catalogs.'}),"\n",(0,r.jsx)(n.h2,{id:"where-the-configuration-lives",children:"Where the configuration lives"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default path: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/mcp_virtual_servers.yaml"})]}),"\n",(0,r.jsxs)(n.li,{children:["Override via env: ",(0,r.jsx)(n.code,{children:"MCP_VIRTUAL_SERVERS_FILE=/absolute/or/relative/path/to/mcp_virtual_servers.yaml"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The config is loaded at process start and is also hot\u2011reloaded on demand: when a request references an unknown view, the service attempts to reload the views file and, if needed, derives fallback views automatically (see below). After reloading the views index, the internal ",(0,r.jsx)(n.code,{children:"ConfigLoader"})," caches are invalidated so changes to ",(0,r.jsx)(n.code,{children:"mcpInstance"})," and system YAML are immediately reflected in tool generation."]}),"\n",(0,r.jsx)(n.h2,{id:"yaml-format",children:"YAML format"}),"\n",(0,r.jsxs)(n.p,{children:["The file contains a list of view definitions. Each definition creates two endpoints: ",(0,r.jsx)(n.code,{children:"/mcp/{view}/tools/list"})," and ",(0,r.jsx)(n.code,{children:"/mcp/{view}/jsonrpc"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Allowed filter keys map directly to tool fields and annotations:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"source"}),": one of ",(0,r.jsx)(n.code,{children:"system"}),", ",(0,r.jsx)(n.code,{children:"workflow"})," (matches tool source)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"provider"}),": matches ",(0,r.jsx)(n.code,{children:"annotations.provider"})," or ",(0,r.jsx)(n.code,{children:"metadata.provider"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"instance"}),": matches ",(0,r.jsx)(n.code,{children:"annotations.instance"})," or ",(0,r.jsx)(n.code,{children:"metadata.instance"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"system"}),": matches ",(0,r.jsx)(n.code,{children:"metadata.system"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"object_type"}),": matches ",(0,r.jsx)(n.code,{children:"metadata.object_type"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"action"}),": matches ",(0,r.jsx)(n.code,{children:"metadata.action"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name_prefix"}),": string prefix to match the final tool name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tags_include"}),": array; tool must include at least one of these tags"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tags_exclude"}),": array; tool must not include any of these tags"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- name: "entra"\r\n  path_prefix: "/entra"\r\n  filters:\r\n    provider: ["entra"]\r\n    tags_include: ["directory"]\r\n\r\n- name: "systems"\r\n  path_prefix: "/systems"\r\n  filters:\r\n    system: ["svc"]\r\n\r\n- name: "workflows"\r\n  path_prefix: "/workflows"\r\n  filters:\r\n    source: ["workflow"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path_prefix"})," must be a single segment under ",(0,r.jsx)(n.code,{children:"/mcp"}),", e.g., ",(0,r.jsx)(n.code,{children:"/entra"}),", ",(0,r.jsx)(n.code,{children:"/workflows"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Health tools (",(0,r.jsx)(n.code,{children:"system.health"}),", ",(0,r.jsx)(n.code,{children:"system_health"}),") are always included for connectivity checks."]}),"\n",(0,r.jsxs)(n.li,{children:["Duplicate ",(0,r.jsx)(n.code,{children:"path_prefix"})," values are not allowed; resolve conflicts in your YAML."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,r.jsx)(n.p,{children:"Once configured, each view is available under:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["REST discovery: ",(0,r.jsx)(n.code,{children:"GET /mcp/{view}/tools/list"})]}),"\n",(0,r.jsxs)(n.li,{children:["JSON-RPC: ",(0,r.jsx)(n.code,{children:"POST /mcp/{view}/jsonrpc"})," with methods ",(0,r.jsx)(n.code,{children:"tools/list"}),", ",(0,r.jsx)(n.code,{children:"tools/invoke"})," (or ",(0,r.jsx)(n.code,{children:"tools/call"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Behavior within a view:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tools/list"})," only returns tools that match the view filters (health tools always included)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tools/invoke"})," only executes tools present in that view. Invoking a tool outside the view returns JSON-RPC error ",(0,r.jsx)(n.code,{children:"-32601"})," (not found in this view)"]}),"\n",(0,r.jsxs)(n.li,{children:["Pagination parameters (",(0,r.jsx)(n.code,{children:"limit"}),", ",(0,r.jsx)(n.code,{children:"cursor"}),") apply per view; health tools are prepended and excluded from page counts."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fallback-views-and-hotreload",children:"Fallback views and hot\u2011reload"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"mcp_virtual_servers.yaml"})," is missing or a requested view isn\u2019t defined, fallback views are synthesized:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"workflows"})," with ",(0,r.jsx)(n.code,{children:'filters: { source: ["workflow"] }'})," and ",(0,r.jsx)(n.code,{children:"include_router: false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Provider\u2011based views (e.g., ",(0,r.jsx)(n.code,{children:"entra"}),", ",(0,r.jsx)(n.code,{children:"ldap"}),", ",(0,r.jsx)(n.code,{children:"auth0"}),") with ",(0,r.jsx)(n.code,{children:"filters: { provider: [<provider>] }"})," and ",(0,r.jsx)(n.code,{children:"include_router: true"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"When an unknown view is requested, the service reloads the views index and logs structured events. If still unknown, it attempts fallback derivation."}),"\n",(0,r.jsxs)(n.li,{children:["After reload, ",(0,r.jsx)(n.code,{children:"ConfigLoader.invalidate_caches()"})," is called to ensure the generator sees fresh system/workflow state."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"structured-logging",children:"Structured logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Discovery emits JSON logs (keys shown for filtering):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp_views_candidate_paths"})," \u2013 base dir and candidate locations scanned"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp_views_file_loaded"})," \u2013 path and count of loaded views"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp_views_file_not_found"})," \u2013 hint to create the file or set env"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp_view_fallback_created"})," \u2013 name and filters of the synthesized view"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp_unknown_view"})," \u2013 a request referenced a non\u2011existent view"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pagination",children:"Pagination"}),"\n",(0,r.jsxs)(n.p,{children:["Both REST and JSON-RPC ",(0,r.jsx)(n.code,{children:"tools/list"})," support pagination via ",(0,r.jsx)(n.code,{children:"limit"})," and ",(0,r.jsx)(n.code,{children:"cursor"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Sorting: tools are sorted by final ",(0,r.jsx)(n.code,{children:"name"})," ascending"]}),"\n",(0,r.jsx)(n.li,{children:"Health tools are prepended and are not part of pagination calculations"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"limit"}),": maximum number of tools per page (integer). If omitted, default is ",(0,r.jsx)(n.code,{children:"MCP_MAX_TOOLS"})," or 80"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cursor"}),": base64 URL-safe encoded last tool name from the previous page"]}),"\n",(0,r.jsxs)(n.li,{children:["Response field ",(0,r.jsx)(n.code,{children:"nextCursor"})," is present when more items are available; pass it back as ",(0,r.jsx)(n.code,{children:"cursor"})," to continue"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Env controls:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_MAX_TOOLS"}),": default global page size if ",(0,r.jsx)(n.code,{children:"limit"})," is not provided (default ",(0,r.jsx)(n.code,{children:"80"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_MAX_TOOLS_PER_PAGE"}),": maximum per-page cap regardless of requested ",(0,r.jsx)(n.code,{children:"limit"})," (optional)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_VIRTUAL_SERVERS_FILE"}),": override views file path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_ENABLE_ROUTER"}),": include optional short\u2011name router tools in views that set ",(0,r.jsx)(n.code,{children:"include_router: true"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_DUPLICATE_POLICY"}),": duplicate name handling (",(0,r.jsx)(n.code,{children:"fail|keep_first|keep_last|drop"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_TOOL_NAME_CAP"}),": cap for generated tool names to satisfy client UI limits"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples-direct-to-crudservice",children:"Examples (direct to CRUDService)"}),"\n",(0,r.jsx)(n.p,{children:"REST discovery (first page):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" \\\r\n  "https://<crud-host>/mcp/systems/tools/list?limit=50"\n'})}),"\n",(0,r.jsx)(n.p,{children:"JSON-RPC discovery (with pagination):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  https://<crud-host>/mcp/systems/jsonrpc \\\r\n  -d \'{\r\n    "jsonrpc":"2.0",\r\n    "id":"1",\r\n    "method":"tools/list",\r\n    "params": {"limit": 50, "cursor": null}\r\n  }\'\n'})}),"\n",(0,r.jsx)(n.p,{children:"Invoke a tool within the view:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  https://<crud-host>/mcp/systems/jsonrpc \\\r\n  -d \'{\r\n    "jsonrpc":"2.0",\r\n    "id":"2",\r\n    "method":"tools/invoke",\r\n    "params": {"name": "<tool_name>", "arguments": {"k": "v"}}\r\n  }\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"via-bff-recommended",children:"Via BFF (recommended)"}),"\n",(0,r.jsx)(n.p,{children:"Matching proxy routes are available on the BFF:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/crud/mcp/{view}/tools/list"})," \u2192 CRUD ",(0,r.jsx)(n.code,{children:"/mcp/{view}/tools/list"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /api/crud/mcp/{view}/jsonrpc"})," \u2192 CRUD ",(0,r.jsx)(n.code,{children:"/mcp/{view}/jsonrpc"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/crud/mcp/{view}/jsonrpc"})," (SSE bridge for streamable-http clients, proxied to upstream POST)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Security notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["MCP paths are bearer-token only at the BFF; CSRF and DPoP are exempted for ",(0,r.jsx)(n.code,{children:"PREFIX:/api/crud/mcp"})]}),"\n",(0,r.jsxs)(n.li,{children:["Required scopes on CRUDService: ",(0,r.jsx)(n.code,{children:"mcp.tools.discovery"})," (list), ",(0,r.jsx)(n.code,{children:"mcp.tools.invoke"})," (invoke)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"router-tools-optional",children:"Router tools (optional)"}),"\n",(0,r.jsx)(n.p,{children:"If you want a collapsed surface across provider/instance variants, enable:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_ENABLE_ROUTER=true"})," (aggregated router tools will be included in discovery)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"operational-notes",children:"Operational notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Views are resolved at application import time; restart the CRUDService to reload the views file"}),"\n",(0,r.jsx)(n.li,{children:"Tool names follow the selected naming strategy and may be namespaced; use discovery results to obtain the exact name to invoke"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
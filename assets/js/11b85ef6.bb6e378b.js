"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5685],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const r={},o=s.createContext(r);function t(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}},57926:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"services/experience/cicd-cookbook","title":"CI/CD Cookbook (Experience Plugins)","description":"End-to-end pipeline examples for building bundles, computing integrity, updating plugins.yaml, reloading BFF, smoke testing, and rollback.","source":"@site/docs/services/experience/cicd-cookbook.md","sourceDirName":"services/experience","slug":"/services/experience/cicd-cookbook","permalink":"/empowernow_docs/docs/services/experience/cicd-cookbook","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/experience/cicd-cookbook.md","tags":[],"version":"current","frontMatter":{"title":"CI/CD Cookbook (Experience Plugins)","sidebar_label":"CI/CD Cookbook","description":"End-to-end pipeline examples for building bundles, computing integrity, updating plugins.yaml, reloading BFF, smoke testing, and rollback."},"sidebar":"tutorialSidebar","previous":{"title":"Authorization","permalink":"/empowernow_docs/docs/services/experience/authorization"},"next":{"title":"TypeScript Types","permalink":"/empowernow_docs/docs/services/experience/developer-types"}}');var r=i(74848),o=i(28453);const t={title:"CI/CD Cookbook (Experience Plugins)",sidebar_label:"CI/CD Cookbook",description:"End-to-end pipeline examples for building bundles, computing integrity, updating plugins.yaml, reloading BFF, smoke testing, and rollback."},l=void 0,c={},p=[{value:"GitHub Actions (example)",id:"github-actions-example",level:2},{value:"Azure DevOps (snippet)",id:"azure-devops-snippet",level:2},{value:"Atomic deploy pattern",id:"atomic-deploy-pattern",level:2},{value:"Smoke tests (curl)",id:"smoke-tests-curl",level:2}];function a(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"github-actions-example",children:"GitHub Actions (example)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'name: plugin-deploy\r\non:\r\n  workflow_dispatch:\r\n  push:\r\n    branches: [ main ]\r\n    paths:\r\n      - \'plugins/hello/**\'\r\n\r\njobs:\r\n  build-and-deploy:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v4\r\n      - uses: actions/setup-node@v4\r\n        with: { node-version: \'20\' }\r\n      - name: Build ESM bundle\r\n        working-directory: plugins/hello\r\n        run: |\r\n          npm ci\r\n          npm run build # produces dist/index.esm.js\r\n          npm run sbom || true # optional CycloneDX\r\n      - name: Compute integrity\r\n        run: |\r\n          mkdir -p ServiceConfigs/BFF/plugins/hello/1.0.0\r\n          cp plugins/hello/dist/index.esm.js ServiceConfigs/BFF/plugins/hello/1.0.0/index.esm.js\r\n          echo "sha256-$(sha256sum ServiceConfigs/BFF/plugins/hello/1.0.0/index.esm.js | cut -d\' \' -f1)" > integrity.txt\r\n      - name: Update plugins.yaml\r\n        run: |\r\n          INTEGRITY=$(cat integrity.txt)\r\n          yq -i \\\r\n            \'(.tenants["experience.ocg.labs.empowernow.ai"][0].bundle.file) = "/app/plugins/hello/1.0.0/index.esm.js" |\r\n             (.tenants["experience.ocg.labs.empowernow.ai"][0].bundle.integrity) = strenv(INTEGRITY)\' \\\r\n            ServiceConfigs/BFF/config/plugins.yaml\r\n      - name: Commit config\r\n        run: |\r\n          git config user.name "ci"\r\n          git config user.email "ci@example"\r\n          git add ServiceConfigs/BFF/**\r\n          git commit -m "chore(plugins): deploy hello 1.0.0 with integrity"\r\n          git push\r\n      - name: Reload manifests\r\n        run: |\r\n          curl -sS -X POST https://experience.ocg.labs.empowernow.ai/api/plugins/refresh --cookie "bff_session=${{ secrets.BFF_SESSION }}"\r\n      - name: Smoke tests\r\n        run: |\r\n          set -e\r\n          curl -sS https://experience.ocg.labs.empowernow.ai/api/plugins/manifests --cookie "bff_session=${{ secrets.BFF_SESSION }}" | jq .\r\n          curl -sS -I "https://experience.ocg.labs.empowernow.ai/api/plugins/bundle?entry=hello&id=hello" --cookie "bff_session=${{ secrets.BFF_SESSION }}" | tee headers.txt\r\n          grep -E "^ETag:|^Cache-Control:|^X-Content-Type-Options:|^Cross-Origin-Resource-Policy: same-origin" headers.txt\r\n      - name: Rollback on failure\r\n        if: failure()\r\n        run: |\r\n          curl -sS -X POST https://experience.ocg.labs.empowernow.ai/api/plugins/quarantine/hello --cookie "bff_session=${{ secrets.BFF_SESSION }}"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"azure-devops-snippet",children:"Azure DevOps (snippet)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'trigger:\r\n  branches: { include: [ main ] }\r\npool: { vmImage: ubuntu-latest }\r\nsteps:\r\n  - task: NodeTool@0\r\n    inputs: { versionSpec: \'20.x\' }\r\n  - script: |\r\n      npm ci && npm run build && npm run sbom || true\r\n    workingDirectory: plugins/hello\r\n  - script: |\r\n      mkdir -p ServiceConfigs/BFF/plugins/hello/1.0.0\r\n      cp plugins/hello/dist/index.esm.js ServiceConfigs/BFF/plugins/hello/1.0.0/index.esm.js\r\n      echo "sha256-$(sha256sum ServiceConfigs/BFF/plugins/hello/1.0.0/index.esm.js | cut -d\' \' -f1)" > integrity.txt\r\n      INTEGRITY=$(cat integrity.txt)\r\n      yq -i "(.tenants[\\"experience.ocg.labs.empowernow.ai\\"][0].bundle.integrity) = strenv(INTEGRITY)" ServiceConfigs/BFF/config/plugins.yaml\r\n    displayName: "Place bundle & set integrity"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"atomic-deploy-pattern",children:"Atomic deploy pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Stage new version\r\ncp dist/index.esm.js ServiceConfigs/BFF/plugins/hello/.staged/1.0.1/index.esm.js\r\n# Flip symlink atomically\r\nln -sfn /app/plugins/hello/.staged/1.0.1 /app/plugins/hello/1.0.1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"smoke-tests-curl",children:"Smoke tests (curl)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -sS https://experience.../api/plugins/manifests --cookie "bff_session=..."\r\ncurl -sS -I "https://experience.../api/plugins/bundle?entry=hello&id=hello" --cookie "bff_session=..."\n'})}),"\n",(0,r.jsxs)(n.p,{children:["See also: Ops Runbook ",(0,r.jsx)(n.code,{children:"./ops-runbook"}),", Monitoring & Alerts ",(0,r.jsx)(n.code,{children:"./monitoring-alerts"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5392],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>t});var o=i(96540);const r={},s=o.createContext(r);function l(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(s.Provider,{value:n},e.children)}},98063:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"services/bff/explanation/llm-dynamic-model-routing","title":"Dynamic AI Model Routing \u2014 How It Works","description":"Overview","source":"@site/docs/services/bff/explanation/llm-dynamic-model-routing.md","sourceDirName":"services/bff/explanation","slug":"/services/bff/explanation/llm-dynamic-model-routing","permalink":"/empowernow_docs/docs/services/bff/explanation/llm-dynamic-model-routing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/explanation/llm-dynamic-model-routing.md","tags":[{"inline":true,"label":"service:bff","permalink":"/empowernow_docs/docs/tags/service-bff"},{"inline":true,"label":"area:llm","permalink":"/empowernow_docs/docs/tags/area-llm"},{"inline":true,"label":"feature:dynamic-model-routing","permalink":"/empowernow_docs/docs/tags/feature-dynamic-model-routing"}],"version":"current","frontMatter":{"title":"Dynamic AI Model Routing \u2014 How It Works","tags":["service:bff","area:llm","feature:dynamic-model-routing"]},"sidebar":"tutorialSidebar","previous":{"title":"Golden Path","permalink":"/empowernow_docs/docs/services/bff/explanation/golden-path"},"next":{"title":"Security Model","permalink":"/empowernow_docs/docs/services/bff/explanation/security-model"}}');var r=i(74848),s=i(28453);const l={title:"Dynamic AI Model Routing \u2014 How It Works",tags:["service:bff","area:llm","feature:dynamic-model-routing"]},t=void 0,a={},d=[{value:"Overview",id:"overview",level:2},{value:"How it works (v1)",id:"how-it-works-v1",level:2},{value:"Key properties",id:"key-properties",level:2},{value:"Real scenarios",id:"real-scenarios",level:2},{value:"Algorithm details (v1)",id:"algorithm-details-v1",level:2},{value:"Roadmap (v2)",id:"roadmap-v2",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Dynamic Model Routing lets the BFF transparently select an allowed, affordable LLM model when the requested model is disallowed by policy or unaffordable given live budgets. v1 covers model selection within one provider (OpenAI); v2 adds provider switching."}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works-v1",children:"How it works (v1)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["BFF receives a chat request with ",(0,r.jsx)(n.code,{children:"model"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["PDP returns ",(0,r.jsx)(n.code,{children:"constraints"})," (model/tokens/egress) and optional ",(0,r.jsx)(n.code,{children:"spend_snapshot"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Preflight applies prompt guard, masking, token clamps."}),"\n",(0,r.jsx)(n.li,{children:"Budget hold based on estimated cost."}),"\n",(0,r.jsxs)(n.li,{children:["If denied (policy/budget), BFF tries allowed candidates cheapest-first, re-evaluating PDP with ",(0,r.jsx)(n.code,{children:"estimated_cents"})," until one is allowed."]}),"\n",(0,r.jsx)(n.li,{children:"Egress is re-pinned; request proceeds; receipt emitted."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-properties",children:"Key properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PDP-first: BFF never bypasses policy"}),"\n",(0,r.jsx)(n.li,{children:"Budget-aware: evaluates candidates against live budgets"}),"\n",(0,r.jsxs)(n.li,{children:["Transparent: ",(0,r.jsx)(n.code,{children:"x-aria-model-selected"}),", ",(0,r.jsx)(n.code,{children:"x-aria-model-rerouted"})," headers"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"real-scenarios",children:"Real scenarios"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Hit monthly cap on ",(0,r.jsx)(n.code,{children:"gpt-4.1"})," \u2192 reroute to ",(0,r.jsx)(n.code,{children:"gpt-4o-mini"})]}),"\n",(0,r.jsxs)(n.li,{children:["Tenant allows only ",(0,r.jsx)(n.code,{children:"gpt-4o-mini"})," \u2192 requests for ",(0,r.jsx)(n.code,{children:"gpt-4.1"})," are routed to ",(0,r.jsx)(n.code,{children:"gpt-4o-mini"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"algorithm-details-v1",children:"Algorithm details (v1)"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\r\n  A[Request model M0] --\x3e B{PDP allow M0?}\r\n  B -- Yes --\x3e C[Preflight + Egress]\r\n  B -- No --\x3e D{Budget/Policy?}\r\n  D -- Policy Only --\x3e Z[403]\r\n  D -- Budget or Combined --\x3e E[Candidates = allow \u2229 known]\r\n  E --\x3e F[Sort by estimated cost]\r\n  F --\x3e G{Loop candidates}\r\n  G --\x3e|allow| H[Select; Preflight + Egress]\r\n  G --\x3e|deny| F\r\n  H --\x3e I[Budget HOLD]\r\n  I --\x3e|ok| J[Call]\r\n  I --\x3e|no| F"}),"\n",(0,r.jsx)(n.h2,{id:"roadmap-v2",children:"Roadmap (v2)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provider switching (OpenAI \u21c4 Anthropic \u21c4 Ollama) with PDP Search shortlist, ranking, and receipts."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"See also: Tutorials \u2192 LLM Routing Quickstart; Reference \u2192 LLM Routing Config, LLM Routing PDP."})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7172],{26653:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"source_content/mcp_brief","title":"Model\xa0Context\xa0Protocol (MCP) Integration \u2013 Technical & Patentability Brief","description":"This brief describes CRUDService\u2019s MCP integration layer which simultaneously provides:","source":"@site/docs/source_content/mcp_brief.md","sourceDirName":"source_content","slug":"/source_content/mcp_brief","permalink":"/empowernow_docs/docs/source_content/mcp_brief","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/mcp_brief.md","tags":[],"version":"current","frontMatter":{}}');var i=r(74848),s=r(28453);const o={},a="Model\xa0Context\xa0Protocol (MCP) Integration \u2013 Technical & Patentability Brief",l={},c=[{value:"1\xa0High\u2011Level Capability",id:"1highlevel-capability",level:2},{value:"2\xa0Key Modules &amp; Flow",id:"2key-modules--flow",level:2},{value:"2.1\xa0Client\u2011Side Sequence \u2013 Auto\u2011generate Connector",id:"21clientside-sequence--autogenerate-connector",level:3},{value:"2.2\xa0Server\u2011Side Architecture (from final gateway)",id:"22serverside-architecture-from-final-gateway",level:3},{value:"2.3\xa0USB\u2011C Analogy \u2013 CRUDService as Universal Hub",id:"23usbc-analogy--crudservice-as-universal-hub",level:3},{value:"3\xa0Problem Statement",id:"3problem-statement",level:2},{value:"4\xa0Inventive Concept",id:"4inventive-concept",level:2},{value:"5\xa0Draft Claimable Features",id:"5draft-claimable-features",level:2},{value:"6\xa0Core Algorithms (Simplified)",id:"6core-algorithms-simplified",level:2},{value:"6.1\xa0Metadata Harvest \u2192 YAML",id:"61metadata-harvest--yaml",level:3},{value:"6.2\xa0On\u2011Behalf\u2011Of Token Validation",id:"62onbehalfof-token-validation",level:3},{value:"6.3\xa0Gateway Authorization Step",id:"63gateway-authorization-step",level:3},{value:"7\xa0Alternative Embodiments",id:"7alternative-embodiments",level:2},{value:"8\xa0Advantages Over Prior Art",id:"8advantages-over-prior-art",level:2}];function d(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"modelcontextprotocol-mcp-integration--technical--patentability-brief",children:"Model\xa0Context\xa0Protocol (MCP) Integration \u2013 Technical & Patentability Brief"})}),"\n",(0,i.jsxs)(n.p,{children:["This brief describes CRUDService\u2019s ",(0,i.jsx)(n.strong,{children:"MCP integration layer"})," which simultaneously provides:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.strong,{children:"MCP\xa0Connector (client)"})," that discovers any remote MCP\u2011compliant server, harvests its declared ",(0,i.jsx)(n.em,{children:"tools / prompts / resources"}),", and auto\u2011generates CRUDService ",(0,i.jsx)(n.strong,{children:"System Definition YAML"})," + Graph\u2011workflow nodes \u2013 ",(0,i.jsx)(n.em,{children:"without writing code"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.strong,{children:"MCP\xa0Gateway (server)"})," exposing ",(0,i.jsx)(n.em,{children:"all"})," CRUDService system definitions, commands and workflows as MCP\u2011compatible tools, enabling secure, policy\u2011controlled API access for external AI agents."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1highlevel-capability",children:"1\xa0High\u2011Level Capability"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"Bidirectional operability"})," \u2013 the same engine can ",(0,i.jsx)(n.em,{children:"consume"})," and ",(0,i.jsx)(n.em,{children:"serve"})," MCP endpoints.",(0,i.jsx)(n.br,{}),"\n","\u2022 ",(0,i.jsx)(n.strong,{children:"Zero\u2011code connector generation"})," \u2013 remote capabilities are reverse\u2011engineered into YAML files then routed through existing ",(0,i.jsx)(n.code,{children:"CommandExecutor"})," / ",(0,i.jsx)(n.code,{children:"WorkflowExecutor"})," pipelines.",(0,i.jsx)(n.br,{}),"\n","\u2022 ",(0,i.jsx)(n.strong,{children:"User\u2011bound AI security"})," \u2013 leverages OBO delegation, PDP authorization, and Membership service to bind agents to human users.",(0,i.jsx)(n.br,{}),"\n","\u2022 ",(0,i.jsx)(n.strong,{children:"Dynamic discovery"})," \u2013 CRUDService server publishes a ",(0,i.jsx)(n.code,{children:".well\u2011known/mcp/metadata"})," endpoint with OpenAPI\u2011style schema; clients poll and hot\u2011reload changes.",(0,i.jsx)(n.br,{}),"\n","\u2022 ",(0,i.jsx)(n.strong,{children:"Unified observability"})," \u2013 OpenTelemetry spans and CAEP/Kafka events for every request & token lifecycle.\r\n\u2022 ",(0,i.jsx)(n.strong,{children:"Virtual views"})," \u2013 expose filtered, read\u2011only views of the tool catalog on distinct paths (e.g., ",(0,i.jsx)(n.code,{children:"/mcp/entra/tools/list"}),", ",(0,i.jsx)(n.code,{children:"/mcp/workflows/jsonrpc"}),") with pagination and health tools always included."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2key-modules--flow",children:"2\xa0Key Modules & Flow"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Module"}),(0,i.jsx)(n.th,{children:"Role"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"src/mcp/client/mcp_connector.py"})}),(0,i.jsx)(n.td,{children:"WebSocket/HTTP client that discovers remote metadata, negotiates schemas, and translates calls into CRUDService commands."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"src/mcp/server/gateway.py"})}),(0,i.jsxs)(n.td,{children:["FastAPI/WS gateway offering MCP endpoints; pipes incoming operations into ",(0,i.jsx)(n.code,{children:"CommandExecutor"}),"/",(0,i.jsx)(n.code,{children:"WorkflowExecutor"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AuthService"})}),(0,i.jsx)(n.td,{children:"Validates bearer/DPoP tokens, extracts user\u2011bound agent claims, supports OBO flows."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PDPServiceClient"})}),(0,i.jsx)(n.td,{children:"Attribute\u2011based authorization for each MCP operation using AuthZen PDP."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"MembershipServiceClient"})}),(0,i.jsx)(n.td,{children:"Verifies user\u2194agent relationships & fetches capabilities."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"TemplateRenderer"})," & ",(0,i.jsx)(n.code,{children:"SchemaMapper"})]}),(0,i.jsx)(n.td,{children:"Re\u2011used to synthesise YAML definitions from discovered tools."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"TokenBroker"}),", ",(0,i.jsx)(n.code,{children:"VerificationSvc"})]}),(0,i.jsx)(n.td,{children:"Redis\u2011based cache + invalidation listener for continuous token verification."})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"21clientside-sequence--autogenerate-connector",children:"2.1\xa0Client\u2011Side Sequence \u2013 Auto\u2011generate Connector"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant CRUD as CRUDService\xa0MCP\xa0Connector\r\n    participant Remote as Remote\xa0MCP\xa0Server\r\n    CRUD->>Remote: GET /.well-known/mcp/metadata\r\n    Remote--\x3e>CRUD: JSON list (tools, prompts, resources)\r\n    CRUD->>CRUD: build YAML system_definition.yml\r\n    CRUD->>ConfigLoader: register & hot\u2011reload\r\n    User->>CRUD: design workflow using new nodes\r\n    CRUD->>Remote: WS/HTTP invoke tool (authorized)"}),"\n",(0,i.jsx)(n.h3,{id:"22serverside-architecture-from-final-gateway",children:"2.2\xa0Server\u2011Side Architecture (from final gateway)"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart TD\r\n    subgraph LLM["LLM Agents"]\r\n        Agent1[AI Agent]\r\n    end\r\n    subgraph Gateway["CRUDService MCP\xa0Gateway"]\r\n        Auth[Auth Service]\r\n        AuthZ[Authorization]\r\n        Router[MCP Router]\r\n        WSManager[Session Manager]\r\n        TokenBroker\r\n        VerificationSvc\r\n    end\r\n    subgraph CRUD["CRUDService Core"]\r\n        CmdExec[CommandExecutor]\r\n        WFExec[WorkflowExecutor]\r\n        YAMLs[System\xa0Definitions]\r\n    end\r\n    Agent1 -- Token --\x3e Gateway\r\n    Gateway --\x3e Auth\r\n    Gateway --\x3e AuthZ\r\n    Router --\x3e CmdExec\r\n    CmdExec --\x3e WFExec\r\n    WFExec --\x3e YAMLs\r\n    Gateway --\x3e|Expose tools| Agent1\r\n\r\n### Virtual Views \u2013 Selection Layer\r\nViews are configured in `mcp_virtual_servers.yaml` (or derived when missing) and constrain discovery/invocation to a filtered subset by `provider`, `instance`, `tags`, or `source`. JSON\u2011RPC requests to `/mcp/{view}/jsonrpc` only execute tools within that view.'}),"\n",(0,i.jsx)(n.h3,{id:"23usbc-analogy--crudservice-as-universal-hub",children:"2.3\xa0USB\u2011C Analogy \u2013 CRUDService as Universal Hub"}),"\n",(0,i.jsxs)(n.p,{children:["Think of MCP as ",(0,i.jsx)(n.strong,{children:"\u201cUSB\u2011C for AI.\u201d"}),"\xa0Just like a modern laptop exposes a single port that adapts to monitors, storage or power, CRUDService presents one interface (MCP) that:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accepts"})," any upstream capability \u2013 raw REST endpoints, databases, or another MCP server \u2013 by converting them into internal YAML definitions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Provides"})," the exact same universal interface outward so downstream AI agents can plug\u2011in and use those capabilities securely."]}),"\n"]}),"\n",(0,i.jsx)(n.mermaid,{value:'graph LR\r\n    subgraph Upstream Systems\r\n        API1["REST\xa0API"]\r\n        DB[(Database)]\r\n        RemoteMCP["Remote\xa0MCP\xa0Server"]\r\n    end\r\n    Hub[[CRUDService<br/>\u201cUSB\u2011C\u201d\xa0Hub]]\r\n    Agent["AI Agent"]\r\n\r\n    API1 -- YAML&nbsp;Definition --\x3e Hub\r\n    DB -- YAML&nbsp;Definition --\x3e Hub\r\n    RemoteMCP -- MCP\xa0Connector --\x3e Hub\r\n    Hub -- MCP\xa0Gateway --\x3e Agent'}),"\n",(0,i.jsxs)(n.p,{children:["CRUDService is thus a ",(0,i.jsx)(n.strong,{children:"bidirectional adapter"}),": whatever plugs in on the left becomes instantly available on the right \u2013 with authorization, observability and workflow orchestration layered in automatically."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3problem-statement",children:"3\xa0Problem Statement"}),"\n",(0,i.jsx)(n.p,{children:"AI tools are fragmented: each vendor surfaces bespoke JSON schemas and security models.  Integrating them requires custom code for discovery, auth, and request translation.  Conversely, exposing internal workflows to AI agents safely demands heavy gateway engineering."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4inventive-concept",children:"4\xa0Inventive Concept"}),"\n",(0,i.jsxs)(n.p,{children:["We introduce a ",(0,i.jsx)(n.strong,{children:"dual\u2011mode MCP layer"})," that:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Automatically ",(0,i.jsx)(n.strong,{children:"discovers"})," remote MCP metadata and ",(0,i.jsx)(n.strong,{children:"materialises"})," it into YAML System Definitions + workflow nodes, reusing CRUDService\u2019s existing low\u2011code pipeline."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Publishes"})," every local command/workflow as an MCP tool with no additional coding \u2013 merely ticking ",(0,i.jsx)(n.code,{children:"expose_mcp: true"})," in YAML."]}),"\n",(0,i.jsxs)(n.li,{children:["Enforces ",(0,i.jsx)(n.strong,{children:"user\u2011bound agent OBO flows"}),", combining IdP token validation, Membership lookup, and PDP authorization in a single gateway span."]}),"\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.strong,{children:"deterministic naming and per\u2011instance identity"})," (",(0,i.jsx)(n.code,{children:"mcpInstance"}),") to avoid collisions across providers/tenants; optional Router surface exposes short names with strict ",(0,i.jsx)(n.code,{children:"oneOf"})," input schemas."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5draft-claimable-features",children:"5\xa0Draft Claimable Features"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"A connector that ingests MCP metadata and programmatically generates executable, type\u2011checked system definition files for an integration engine."}),"\n",(0,i.jsx)(n.li,{children:"The system of claim\xa01 wherein discovered tools are directly invokable as workflow nodes without manual code deployment."}),"\n",(0,i.jsx)(n.li,{children:"A gateway that surfaces existing low\u2011/no\u2011code system definitions and workflows as MCP\u2011compatible tools in real time."}),"\n",(0,i.jsx)(n.li,{children:"The method of any preceding claim wherein every MCP request is authorised using a chain of token validation, user\u2011bound agent verification, and external PDP policy evaluation."}),"\n",(0,i.jsx)(n.li,{children:"The system of claim\xa03 wherein AI agents interact exclusively via WebSocket or HTTP while tokens are continuously re\u2011validated and revoked through an event\u2011driven verification service."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6core-algorithms-simplified",children:"6\xa0Core Algorithms (Simplified)"}),"\n",(0,i.jsx)(n.h3,{id:"61metadata-harvest--yaml",children:"6.1\xa0Metadata Harvest \u2192 YAML"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'meta = httpx.get(f"{url}/.well-known/mcp/metadata").json()\r\nfor tool in meta["tools"]:\r\n    yml = _tool_to_yaml(tool)\r\n    write_yaml(f"systems/{tool[\'name\']}.yml", yml)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"62onbehalfof-token-validation",children:"6.2\xa0On\u2011Behalf\u2011Of Token Validation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"ok,payload,_ = AuthService.validate_token(token)\r\nif payload and payload.act:\r\n    info = AuthService.extract_user_bound_agent_info(payload)\r\n    allowed = MembershipService.verify_user_bound_agent(info)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"63gateway-authorization-step",children:"6.3\xa0Gateway Authorization Step"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'allowed, reason = PDPService.authorize(\r\n    user_id=payload.sub,\r\n    agent_id=info.agent_id,\r\n    action=request.operation,\r\n    resource_type="system",\r\n    resource_id=request.operation,\r\n)\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7alternative-embodiments",children:"7\xa0Alternative Embodiments"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Edge MCP Proxy"})," \u2013 WASM filter at CDN edge embedding the same dual\u2011mode logic."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auto\u2011schema GraphQL"})," \u2013 convert MCP metadata into GraphQL SDL rather than YAML."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Offline sync"})," \u2013 periodic crawler producing YAMLs without live gateway calls."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"8advantages-over-prior-art",children:"8\xa0Advantages Over Prior Art"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Removes hand\u2011coded connectors \u2013 discovery \u2192 YAML in minutes."}),"\n",(0,i.jsx)(n.li,{children:"Unified security \u2013 OIDC + PDP + user\u2011bound agent controls in one flow."}),"\n",(0,i.jsx)(n.li,{children:"Dynamically exposes workflows as AI\u2011consumable tools, reducing integration friction."}),"\n",(0,i.jsx)(n.li,{children:"Event\u2011driven revocation ensures least\u2011privilege, realtime threat response."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Prepared for legal & technical review \u2013 now"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);
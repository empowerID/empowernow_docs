"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[2940],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var o=n(96540);const t={},r=o.createContext(t);function i(e){const s=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(r.Provider,{value:s},e.children)}},86247:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"services/bff/how-to/uploads-downloads-streaming","title":"Uploads, Downloads, and Streaming via the BFF","description":"What\u2019s supported (verified in routes)","source":"@site/docs/services/bff/how-to/uploads-downloads-streaming.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/uploads-downloads-streaming","permalink":"/empowernow_docs/docs/services/bff/how-to/uploads-downloads-streaming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/uploads-downloads-streaming.md","tags":[],"version":"current","frontMatter":{"title":"Uploads, Downloads, and Streaming via the BFF"},"sidebar":"tutorialSidebar","previous":{"title":"Update routes after restructure","permalink":"/empowernow_docs/docs/services/bff/how-to/update-routes-after-structure-change"},"next":{"title":"Executive overview","permalink":"/empowernow_docs/docs/services/bff/explanation/executive-overview"}}');var t=n(74848),r=n(28453);const i={title:"Uploads, Downloads, and Streaming via the BFF"},d=void 0,c={},a=[];function l(e){const s={code:"code",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"What\u2019s supported (verified in routes)"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Standard JSON GET/POST/PUT/DELETE across canonical ",(0,t.jsx)(s.code,{children:"/api/..."})," routes."]}),"\n",(0,t.jsxs)(s.li,{children:["Server-Sent Events (SSE) routes exist in ",(0,t.jsx)(s.code,{children:"routes.yaml"})," (e.g., ",(0,t.jsx)(s.code,{children:"crud-events"}),", ",(0,t.jsx)(s.code,{children:"crud-events-workflow-status"}),") with ",(0,t.jsx)(s.code,{children:"streaming: true"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Uploads"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"fetch"}),"/",(0,t.jsx)(s.code,{children:"apiClient"})," with ",(0,t.jsx)(s.code,{children:"FormData"})," and ",(0,t.jsx)(s.code,{children:"Content-Type"})," managed by the browser; cookies are sent automatically."]}),"\n",(0,t.jsxs)(s.li,{children:["Ensure a corresponding ",(0,t.jsx)(s.code,{children:"routes.yaml"})," route points to an upstream endpoint that accepts multipart."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Downloads"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"fetch"})," and read ",(0,t.jsx)(s.code,{children:"blob()"}),"; cookies are included for auth. The BFF will proxy binary responses transparently."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"SSE"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Use ",(0,t.jsx)(s.code,{children:"EventSource"})," against BFF ",(0,t.jsx)(s.code,{children:"/api/..."})," endpoints; when cross-origin, ensure CORS allows your UI origin. Cookies will be used by the browser as usual when same-origin."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"WebSockets"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["No explicit WebSocket routes are defined in ",(0,t.jsx)(s.code,{children:"routes.yaml"}),"; not documented as supported in this repo."]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[1942],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var r=i(96540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}},50716:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"services/crud-service/reference/mtls","title":"mTLS (Design & Guide)","description":"Production-grade inbound mTLS for CRUD Service: design, configuration, and end-to-end flow with optional PoP (sender-binding).","source":"@site/docs/services/crud-service/reference/mtls_design.md","sourceDirName":"services/crud-service/reference","slug":"/services/crud-service/reference/mtls","permalink":"/empowernow_docs/docs/services/crud-service/reference/mtls","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/reference/mtls_design.md","tags":[],"version":"current","frontMatter":{"id":"mtls","title":"mTLS (Design & Guide)","description":"Production-grade inbound mTLS for CRUD Service: design, configuration, and end-to-end flow with optional PoP (sender-binding).","sidebar_label":"mTLS (Design & Guide)","keywords":["mTLS","PoP","sender-binding","TLS","Traefik","Nginx","CRUD Service"]},"sidebar":"tutorialSidebar","previous":{"title":"mcp_tool_recipes","permalink":"/empowernow_docs/docs/services/crud-service/reference/mcp_tool_recipes"},"next":{"title":"CRUD Service Reference Overview","permalink":"/empowernow_docs/docs/services/crud-service/reference/overview"}}');var s=i(74848),l=i(28453);const t={id:"mtls",title:"mTLS (Design & Guide)",description:"Production-grade inbound mTLS for CRUD Service: design, configuration, and end-to-end flow with optional PoP (sender-binding).",sidebar_label:"mTLS (Design & Guide)",keywords:["mTLS","PoP","sender-binding","TLS","Traefik","Nginx","CRUD Service"]},d=void 0,c={},a=[{value:"Quick links",id:"quick-links",level:2},{value:"Mode selection (quick visual)",id:"mode-selection-quick-visual",level:3},{value:"At a glance",id:"at-a-glance",level:2},{value:"mTLS Implementation Guide",id:"mtls-implementation-guide",level:2},{value:"What we built",id:"what-we-built",level:3},{value:"How it works (at a glance)",id:"how-it-works-at-a-glance",level:3},{value:"Current state (deep assessment)",id:"current-state-deep-assessment",level:3},{value:"Goals",id:"goals",level:3},{value:"Trust boundaries and deployment options",id:"trust-boundaries-and-deployment-options",level:3},{value:"Target architecture",id:"target-architecture",level:3},{value:"Identity mapping (canonical and policy-driven)",id:"identity-mapping-canonical-and-policy-driven",level:3},{value:"Sender-binding and PoP enforcement",id:"sender-binding-and-pop-enforcement",level:3},{value:"Revocation checks and cert validation",id:"revocation-checks-and-cert-validation",level:3},{value:"Configuration (centralized, docker-compose-driven)",id:"configuration-centralized-docker-compose-driven",level:3},{value:"App changes (concrete)",id:"app-changes-concrete",level:3},{value:"Security hardening",id:"security-hardening",level:3},{value:"Rollout plan",id:"rollout-plan",level:3},{value:"Optional: direct app mTLS (only if needed)",id:"optional-direct-app-mtls-only-if-needed",level:3},{value:"Dev (Docker + Traefik) \u2013 concrete changes",id:"dev-docker--traefik--concrete-changes",level:3},{value:"Prod (Kubernetes)",id:"prod-kubernetes",level:3},{value:"Config, policy, and CA management",id:"config-policy-and-ca-management",level:3},{value:"What this gives you",id:"what-this-gives-you",level:3},{value:"Implementation To-Do (detailed)",id:"implementation-to-do-detailed",level:3},{value:"Per-path binding enforcement",id:"per-path-binding-enforcement",level:3},{value:"Kubernetes ingress snippets and CA rotation",id:"kubernetes-ingress-snippets-and-ca-rotation",level:3},{value:"Curl examples",id:"curl-examples",level:3},{value:"Config validation",id:"config-validation",level:3},{value:"Role-based quick guides and FAQs",id:"role-based-quick-guides-and-faqs",level:3},{value:"For Product Managers (non-technical)",id:"for-product-managers-non-technical",level:4},{value:"For DevOps (enable/operate)",id:"for-devops-enableoperate",level:4},{value:"For QA (verify/accept)",id:"for-qa-verifyaccept",level:4},{value:"Sequence: request flow",id:"sequence-request-flow",level:3},{value:"Flow: mode and PoP enforcement",id:"flow-mode-and-pop-enforcement",level:3},{value:"FAQs and troubleshooting",id:"faqs-and-troubleshooting",level:3},{value:"Trust boundary hardening (recommended)",id:"trust-boundary-hardening-recommended",level:3},{value:"Certificate identity mapping (cert_identity_mappings.yaml)",id:"certificate-identity-mapping-cert_identity_mappingsyaml",level:3}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"quick-links",children:"Quick links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["How\u2011to: Enable mTLS \u2192 ",(0,s.jsx)(n.a,{href:"/empowernow_docs/docs/services/crud-service/how-to/enable-mtls",children:"Enable mTLS for CRUD Service APIs"})]}),"\n",(0,s.jsxs)(n.li,{children:["Jump to: ",(0,s.jsx)(n.a,{href:"#flow-mode-and-pop-enforcement",children:"Flow: mode and PoP enforcement"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"mode-selection-quick-visual",children:"Mode selection (quick visual)"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n  S[Start] --\x3e MODE{INBOUND_AUTH_MODE}\n  MODE --\x3e|bearer| B[Accept JWT only]\n  MODE --\x3e|mtls| M[Cert only \u2192 map to canonical ARN]\n  MODE --\x3e|bearer_plus_mtls_optional| O[Use JWT; attach cert thumbprint if present]\n  MODE --\x3e|bearer_plus_mtls_required| R[Require JWT + Cert]\n  R --\x3e POP{JWT.cnf.x5t == cert x5t?}\n  POP --\x3e|yes| OK[Proceed]\n  POP --\x3e|no| E[401 sender_binding_mismatch]"}),"\n",(0,s.jsx)(n.h2,{id:"at-a-glance",children:"At a glance"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant Client\n  participant Proxy as Traefik/Nginx\n  participant App as CRUD Service\n  participant MW as ClientCert Middleware\n  participant AuthN as AuthN Service\n\n  Client->>Proxy: TLS handshake (present client cert)\n  Proxy->>Proxy: Verify cert (CA/OCSP/CRL)\n  Proxy->>App: HTTP + forwarded cert header (PEM)\n  App->>MW: Parse PEM \u2192 x5t#S256, SANs, DNs\n  MW--\x3e>App: request.state.mtls_thumbprint + metadata\n  App->>AuthN: authenticate_request(mode)\n  alt PoP required\n    AuthN->>AuthN: Check JWT.cnf.x5t == cert x5t\n    AuthN--\x3e>App: allow/401 sender_binding_mismatch\n  else PoP optional/mtls-only\n    AuthN--\x3e>App: allow\n  end"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"mtls-implementation-guide",children:"mTLS Implementation Guide"}),"\n",(0,s.jsx)(n.p,{children:"This guide explains what we built, how it works end-to-end, how to configure it (Docker/Kubernetes), and how to use and verify it."}),"\n",(0,s.jsx)(n.h3,{id:"what-we-built",children:"What we built"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Inbound mutual TLS (mTLS) at the edge (Traefik/Nginx) with the verified client certificate forwarded to the app via a trusted header."}),"\n",(0,s.jsxs)(n.li,{children:["FastAPI middleware parses the forwarded certificate, computes x5t#S256, and attaches identity details to ",(0,s.jsx)(n.code,{children:"request.state"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Authentication service supports modes: ",(0,s.jsx)(n.code,{children:"bearer"}),", ",(0,s.jsx)(n.code,{children:"mtls"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})," with PoP (sender-binding) enforcement using ",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Identity mapping produces canonical ARNs like ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{thumb}"})," or email SAN-based ARNs under policy."]}),"\n",(0,s.jsxs)(n.li,{children:["Identity mapping produces canonical ARNs like ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{thumb}"})," or email SAN-based ARNs under policy. For JWT-derived identities, the provider segment in ARNs prefers the IdP ",(0,s.jsx)(n.code,{children:"provider"})," alias (falls back to entry ",(0,s.jsx)(n.code,{children:"name"}),") so identities remain stable across audiences of the same issuer."]}),"\n",(0,s.jsx)(n.li,{children:"Vault secrets path enforces sender-binding and drift detection."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"how-it-works-at-a-glance",children:"How it works (at a glance)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Edge terminator verifies client cert (CA/OCSP/CRL) and forwards the PEM to the app."}),"\n",(0,s.jsxs)(n.li,{children:["Middleware trusts only configured proxy CIDRs, parses PEM, computes thumbprint, and sets ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"})," and other metadata."]}),"\n",(0,s.jsxs)(n.li,{children:["AuthN enforces mode and PoP: compares ",(0,s.jsx)(n.code,{children:"JWT.cnf.x5t#S256"})," to ",(0,s.jsx)(n.code,{children:"mtls_thumbprint"})," when required."]}),"\n",(0,s.jsxs)(n.li,{children:["VaultService binds secrets to the thumbprint (or ",(0,s.jsx)(n.code,{children:"cnf_jkt"}),") and detects drift across requests."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Key diagrams are further below in this document (sequence and flow)."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s a production-grade design to add inbound mTLS and certificate-based authentication, integrated cleanly with your existing auth flow and policies."}),"\n",(0,s.jsx)(n.h3,{id:"current-state-deep-assessment",children:"Current state (deep assessment)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authenticate_user"})," in ",(0,s.jsx)(n.code,{children:"src/services/authn_service.py"})," accepts only Bearer tokens; no client cert parsing or sender-binding checks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"workflow_routes.py"})," and ",(0,s.jsx)(n.code,{children:"execute_routes.py"})," rely on ",(0,s.jsx)(n.code,{children:"Depends(authorize_user)"})," \u2192 still Bearer-only."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"main.py"})," can run HTTPS but does not support client auth (no CA, no verify_mode)."]}),"\n",(0,s.jsxs)(n.li,{children:["No middleware parses ",(0,s.jsx)(n.code,{children:"X-Forwarded-Client-Cert"}),"/XFCC or attaches cert-derived identity. Only ",(0,s.jsx)(n.code,{children:"PrincipalHeadersMiddleware"})," exists."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"VaultService"})," already anticipates ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"}),"/",(0,s.jsx)(n.code,{children:"cnf_jkt"})," for secret policy binding, but nothing sets these today."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"goals",children:"Goals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Robust inbound mTLS for service-to-service/API-clients."}),"\n",(0,s.jsxs)(n.li,{children:["Cert-based identity and optional PoP binding to JWT (",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Zero-trust header handling (only trust proxy-provided cert headers)."}),"\n",(0,s.jsx)(n.li,{children:"FIPS-appropriate TLS policy and revocation handling."}),"\n",(0,s.jsx)(n.li,{children:"Clear modes: bearer-only, mtls-only, or strict \u201cbearer + mtls binding required\u201d."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"trust-boundaries-and-deployment-options",children:"Trust boundaries and deployment options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Edge-terminated mTLS at Traefik/Nginx and forward a trusted client-cert header to the app."}),"\n",(0,s.jsx)(n.li,{children:"Optional direct mTLS at the app (Uvicorn with client cert verification), but prefer proxy termination for standardization and revocation checks."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"target-architecture",children:"Target architecture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Reverse proxy (Traefik) enforces mTLS:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Require client certificate (RequireAndVerify)."}),"\n",(0,s.jsx)(n.li,{children:"Validate against trusted CA bundle (config-managed)."}),"\n",(0,s.jsxs)(n.li,{children:["Enable ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," to forward the peer cert via ",(0,s.jsx)(n.code,{children:"X-Forwarded-Tls-Client-Cert"})," (PEM) and optionally a SHA-256 thumbprint header."]}),"\n",(0,s.jsx)(n.li,{children:"Enforce TLS1.2+ (prefer TLS1.3 when available) and FIPS-approved ciphers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"App (CRUDService) adds:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ClientCertExtractionMiddleware"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Trusts cert headers only from known internal proxies."}),"\n",(0,s.jsx)(n.li,{children:"Parses forwarded PEM cert, computes SHA-256 thumbprint (DER), extracts subject DN, SANs, issuer, validity, policy OIDs."}),"\n",(0,s.jsxs)(n.li,{children:["Stores on ",(0,s.jsx)(n.code,{children:"request.state"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mtls_thumbprint"})," (base64url x5t#S256),"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"client_cert_subject_dn"}),", ",(0,s.jsx)(n.code,{children:"client_cert_sans"}),", ",(0,s.jsx)(n.code,{children:"client_cert_issuer_dn"}),","]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"client_cert_not_before"}),", ",(0,s.jsx)(n.code,{children:"client_cert_not_after"}),","]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"client_cert_policy_oids"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authn_service.authenticate_request"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["New ",(0,s.jsx)(n.code,{children:"INBOUND_AUTH_MODE"})," options: ",(0,s.jsx)(n.code,{children:"bearer"}),", ",(0,s.jsx)(n.code,{children:"mtls"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"mtls"})," or ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_*"}),", build a canonical identity from cert (see \u201cIdentity mapping\u201d)."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"}),", enforce ",(0,s.jsx)(n.code,{children:"token.cnf.x5t#S256 == mtls_thumbprint"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Set ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"}),", ",(0,s.jsx)(n.code,{children:"request.state.client_id"}),", and ",(0,s.jsx)(n.code,{children:"request.state.subject"})," so ",(0,s.jsx)(n.code,{children:"VaultService"})," and downstream components can apply sender-binding."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authorize_user"})," continues to work; it will see a ",(0,s.jsx)(n.code,{children:"unique_id"})," derived from cert when JWT is absent or both identities are present (config determines which wins)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"identity-mapping-canonical-and-policy-driven",children:"Identity mapping (canonical and policy-driven)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Canonical ARNs: use standard ",(0,s.jsx)(n.code,{children:"auth:account:{provider}:{subject}"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Certificate identities:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default provider: ",(0,s.jsx)(n.code,{children:"x509"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Subject resolution strategies (configurable):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Thumbprint-based: ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{x5t#S256}"})," (strongest/unique)."]}),"\n",(0,s.jsxs)(n.li,{children:["SAN e-mail: ",(0,s.jsx)(n.code,{children:"auth:account:x509:email:{addr}"})," when email SAN present and allowed."]}),"\n",(0,s.jsx)(n.li,{children:"SAN URI / DNS / UPN mapping rules."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Mapping policy file (config-managed, mounted at ",(0,s.jsx)(n.code,{children:"/app/config/cert_identity_mappings.yaml"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Static allowlist: specific thumbprints \u2192 principal ARNs."}),"\n",(0,s.jsx)(n.li,{children:"CA constraints: which CAs are allowed per endpoint group."}),"\n",(0,s.jsx)(n.li,{children:"Policy OIDs required (e.g., for device or hardware-token client certs)."}),"\n",(0,s.jsxs)(n.li,{children:["SAN/domain constraints (e.g., ",(0,s.jsx)(n.code,{children:"email SAN must end with @corp.tld"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Endpoint-level mode: which endpoints accept ",(0,s.jsx)(n.code,{children:"mtls"}),", require ",(0,s.jsx)(n.code,{children:"bearer+mtls"}),", or are ",(0,s.jsx)(n.code,{children:"bearer"})," only."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sender-binding-and-pop-enforcement",children:"Sender-binding and PoP enforcement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If mTLS and JWT present:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Verify ",(0,s.jsx)(n.code,{children:"JWT.cnf.x5t#S256 == request.state.mtls_thumbprint"}),"; otherwise 401 with explicit error."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"If DPoP is used instead of mTLS in some flows, keep your existing DPoP path. Prefer one PoP mechanism per client profile to reduce complexity."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"revocation-checks-and-cert-validation",children:"Revocation checks and cert validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Primary: enforce mTLS at Traefik with CRL/OCSP.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configure OCSP stapling and revocation at the proxy (preferred for performance and consistency)."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Secondary (defense-in-depth): app validates certificate fields from header against mappings (expiry, policy OIDs, SAN restrictions)."}),"\n",(0,s.jsx)(n.li,{children:"Optionally implement light OCSP/CRL verification in app for high-risk endpoints (cache responses, short TTLs) if the proxy cannot enforce revocation."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-centralized-docker-compose-driven",children:"Configuration (centralized, docker-compose-driven)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["New security section (single source of truth in mounted config):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Trusted proxies/CIDRs."}),"\n",(0,s.jsx)(n.li,{children:"Expected forwarded cert header names."}),"\n",(0,s.jsxs)(n.li,{children:["Mode per endpoint group: ",(0,s.jsx)(n.code,{children:"bearer"}),", ",(0,s.jsx)(n.code,{children:"mtls"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Allowed CAs (hashes or filenames), policy OIDs required, SAN constraints."}),"\n",(0,s.jsx)(n.li,{children:"Enable/disable PoP binding enforcement."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Traefik dynamic config:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TLS client auth (CA bundle path)."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"passTLSClientCert"})," with ",(0,s.jsx)(n.code,{children:"pem: true"})," and ",(0,s.jsx)(n.code,{children:"info.notAfter/notBefore/subject/issuer/sans"})," enabled as needed."]}),"\n",(0,s.jsx)(n.li,{children:"Strict TLS versions and FIPS-compliant ciphers."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"app-changes-concrete",children:"App changes (concrete)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add ",(0,s.jsx)(n.code,{children:"src/middleware/client_cert.py"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Verify caller is a trusted proxy (",(0,s.jsx)(n.code,{children:"remote_addr"})," in CIDRs or a shared internal mTLS), otherwise ignore/strip client-cert headers."]}),"\n",(0,s.jsxs)(n.li,{children:["Read ",(0,s.jsx)(n.code,{children:"X-Forwarded-Tls-Client-Cert"})," (PEM), parse via ",(0,s.jsx)(n.code,{children:"cryptography"}),", compute x5t#S256 (base64url of SHA-256 DER), extract SANs/DNs, set ",(0,s.jsx)(n.code,{children:"request.state.*"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Wire it in ",(0,s.jsx)(n.code,{children:"main.py"})," before ",(0,s.jsx)(n.code,{children:"PrincipalHeadersMiddleware"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Extend ",(0,s.jsx)(n.code,{children:"src/services/authn_service.py"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Load auth mode and mapping policies from config loader."}),"\n",(0,s.jsx)(n.li,{children:"Build identity from cert when configured; verify PoP binding when required."}),"\n",(0,s.jsxs)(n.li,{children:["If cert-only mode: bypass JWT introspection; set ",(0,s.jsx)(n.code,{children:"unique_identity"})," from cert mapping."]}),"\n",(0,s.jsx)(n.li,{children:"If bearer+mtls: keep JWT introspection, then enforce binding."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Extend error responses with clear troubleshooting (e.g., missing cert, untrusted CA, expired cert, PoP mismatch)."}),"\n",(0,s.jsxs)(n.li,{children:["Kafka audit:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["On cert-auth success/failure publish security event with minimal non-sensitive details: ",(0,s.jsx)(n.code,{children:"cert_thumbprint"}),", ",(0,s.jsx)(n.code,{children:"issuer_hash"}),", ",(0,s.jsx)(n.code,{children:"policy_oids"}),", endpoint, correlation_id."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Metrics:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Counters for ",(0,s.jsx)(n.code,{children:"mtls_auth_success"}),", ",(0,s.jsx)(n.code,{children:"mtls_auth_failure_{reason}"}),", ",(0,s.jsx)(n.code,{children:"mtls_pop_mismatch"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security-hardening",children:"Security hardening"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Strip any client-cert header from untrusted sources (defense-in-depth)."}),"\n",(0,s.jsx)(n.li,{children:"Enforce strict header names; reject multi-value tricks."}),"\n",(0,s.jsx)(n.li,{children:"Rate-limit cert-auth failures."}),"\n",(0,s.jsx)(n.li,{children:"Rotate CA bundles via mounted config; reload on SIGHUP or periodic watch."}),"\n",(0,s.jsx)(n.li,{children:"TLS policy: TLSv1.2+ (prefer TLSv1.3); FIPS-approved ciphers only."}),"\n",(0,s.jsxs)(n.li,{children:["No silent fallback between modes. If ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"}),", return 401 when cert missing or binding fails."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rollout-plan",children:"Rollout plan"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Phase 1 (observe): Deploy proxy mTLS termination and pass cert headers; add middleware in passive mode to parse/attach, but keep ",(0,s.jsx)(n.code,{children:"bearer"})," mode. Monitor."]}),"\n",(0,s.jsxs)(n.li,{children:["Phase 2 (optional binding): Switch to ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"})," and log binding success/failure; alert on mismatches."]}),"\n",(0,s.jsxs)(n.li,{children:["Phase 3 (enforce): Flip endpoints to ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})," or ",(0,s.jsx)(n.code,{children:"mtls"})," as needed."]}),"\n",(0,s.jsx)(n.li,{children:"Add runbooks for CA rotation and incident response (revocation, blocklists)."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optional-direct-app-mtls-only-if-needed",children:"Optional: direct app mTLS (only if needed)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Build ",(0,s.jsx)(n.code,{children:"ssl.SSLContext"})," with ",(0,s.jsx)(n.code,{children:"ssl.Purpose.CLIENT_AUTH"}),", ",(0,s.jsx)(n.code,{children:"verify_mode=CERT_REQUIRED"}),", ",(0,s.jsx)(n.code,{children:"load_verify_locations(ca)"}),", ",(0,s.jsx)(n.code,{children:"minimum_version=TLSv1_2"})," (or TLSv1_3), FIPS ciphers."]}),"\n",(0,s.jsxs)(n.li,{children:["Pass ",(0,s.jsx)(n.code,{children:"ssl=ctx"})," to uvicorn programmatically (instead of env-only run)."]}),"\n",(0,s.jsx)(n.li,{children:"Still keep proxy as preferred termination for simplicity and revocation."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If you want, I can implement:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ClientCertExtractionMiddleware"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Config schema changes (security section, mapping file)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"authenticate_request"})," updates with modes and PoP binding checks."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Traefik dynamic config snippet to enable mTLS and pass client cert safely."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Implementing this will also populate ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"}),", unlocking the sender-binding already recognized by ",(0,s.jsx)(n.code,{children:"VaultService"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"This design aligns with your canonical ARN format, avoids unsafe fallbacks, and keeps configuration centralized via the mounted config directory."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Summary"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Inbound mTLS terminated at Traefik with strict TLS and revocation; cert forwarded via trusted header."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"New FastAPI middleware parses cert, computes x5t#S256, and attaches identity details."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"authenticate_request"})," gains configurable modes (bearer, mtls, bearer+mtls with PoP binding)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Identity mapping from cert to canonical ARNs via policy file; strict enforcement, no silent fallback."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Full auditing and metrics; FIPS-appropriate TLS posture."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Yes. The design fits your current split: Docker + Traefik in dev, Kubernetes + ingress (Traefik or Nginx) in prod. Here\u2019s exactly how it maps to your ",(0,s.jsx)(n.code,{children:"docker-compose-authzen4.yml"})," and what to do in K8s."]}),"\n",(0,s.jsx)(n.h3,{id:"dev-docker--traefik--concrete-changes",children:"Dev (Docker + Traefik) \u2013 concrete changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Traefik already fronts all services in ",(0,s.jsx)(n.code,{children:"docker-compose-authzen4.yml"}),". Add mTLS and forward the client cert to the app."]}),"\n",(0,s.jsxs)(n.li,{children:["Use Traefik dynamic config (",(0,s.jsx)(n.code,{children:"CRUDService/traefik/dynamic.yml"}),") and the existing certs mount (",(0,s.jsx)(n.code,{children:"../IdP/certs \u2192 /certs"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Minimal dynamic config additions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# traefik/dynamic.yml\ntls:\n  options:\n    mtls:\n      minVersion: VersionTLS12\n      cipherSuites:\n        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n      clientAuth:\n        clientAuthType: RequireAndVerifyClientCert\n        caFiles:\n          - /certs/ca.crt\n\nhttp:\n  middlewares:\n    mtls-passcert:\n      passTLSClientCert:\n        pem: true\n        info:\n          subject: true\n          issuer: true\n          notBefore: true\n          notAfter: true\n          sans: true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Attach to your CRUD router (labels) so the cert is required and forwarded:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# in crud-service.labels (add/keep existing)\n- "traefik.http.routers.crud.tls=true"\n- "traefik.http.routers.crud.tls.options=mtls@file"\n- "traefik.http.routers.crud.middlewares=mtls-passcert@file,security-headers@file,rate-limit@file"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["App-side settings (env or config file under ",(0,s.jsx)(n.code,{children:"/app/config"}),"):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INBOUND_AUTH_MODE=bearer_plus_mtls_required"})," (or ",(0,s.jsx)(n.code,{children:"mtls"}),"/",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"})," per endpoint policy)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER=X-Forwarded-Tls-Client-Cert"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TRUSTED_PROXY_CIDRS=172.16.0.0/12,10.0.0.0/8"})," (Docker bridge)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"CERT_IDENTITY_MAPPINGS=/app/config/cert_identity_mappings.yaml"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The new ",(0,s.jsx)(n.code,{children:"ClientCertExtractionMiddleware"})," will:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Trust only Traefik (by ",(0,s.jsx)(n.code,{children:"TRUSTED_PROXY_CIDRS"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Parse ",(0,s.jsx)(n.code,{children:"X-Forwarded-Tls-Client-Cert"})," (PEM), compute x5t#S256, set ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"}),", SANs, DNs, validity."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"authenticate_request"})," will enforce PoP binding if configured and populate canonical identity. This automatically unlocks sender-binding in ",(0,s.jsx)(n.code,{children:"VaultService"})," (it already reads ",(0,s.jsx)(n.code,{children:"mtls_thumbprint"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"prod-kubernetes",children:"Prod (Kubernetes)"}),"\n",(0,s.jsx)(n.p,{children:"You can run either Traefik or Nginx. The app\u2019s middleware stays identical; only ingress config differs."}),"\n",(0,s.jsx)(n.p,{children:"Option A: Traefik (CRDs)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In your ",(0,s.jsx)(n.code,{children:"IngressRoute"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["reference a ",(0,s.jsx)(n.code,{children:"tls.options: mtls@file"})," with ",(0,s.jsx)(n.code,{children:"clientAuth"})," (mounted CA secret)"]}),"\n",(0,s.jsxs)(n.li,{children:["apply the same ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," middleware"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example fragment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: traefik.containo.us/v1alpha1\nkind: IngressRoute\nspec:\n  entryPoints: [ websecure ]\n  routes:\n    - match: Host(`crud.prod.example.com`)\n      kind: Rule\n      services:\n        - name: crud-service\n          port: 8000\n      middlewares:\n        - name: mtls-passcert\n  tls:\n    options:\n      name: mtls\n      namespace: traefik\n"})}),"\n",(0,s.jsx)(n.p,{children:"Option B: Nginx Ingress"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enable mTLS and forward the cert to upstream:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"\n    nginx.ingress.kubernetes.io/auth-tls-secret: "default/mtls-ca"   # CA bundle\n    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"\n    nginx.ingress.kubernetes.io/proxy-ssl-name: "crud.prod.example.com"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Configure the app to accept the Nginx header (e.g., ",(0,s.jsx)(n.code,{children:"ssl-client-cert"}),"); set ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER=ssl-client-cert"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"config-policy-and-ca-management",children:"Config, policy, and CA management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Keep all app settings in ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config"})," (mounted at ",(0,s.jsx)(n.code,{children:"/app/config"}),") per your standard."]}),"\n",(0,s.jsxs)(n.li,{children:["Store CA bundles/secrets in:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["dev: ",(0,s.jsx)(n.code,{children:"../IdP/certs"})," (already mounted to Traefik as ",(0,s.jsx)(n.code,{children:"/certs"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["prod: K8s ",(0,s.jsx)(n.code,{children:"Secret"})," referenced by Ingress (Traefik/Nginx)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Identity mapping file: ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/cert_identity_mappings.yaml"})," to constrain SAN/issuers/policy OIDs and map certs to canonical ARNs."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"what-this-gives-you",children:"What this gives you"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Dev and prod use the same application behavior; only the edge differs."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Traefik/Nginx terminate mTLS and forward the client cert. The app enforces PoP binding and builds cert-based identity. ",(0,s.jsx)(n.code,{children:"VaultService"})," sender-binding starts working immediately via ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"I can proceed to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["add ",(0,s.jsx)(n.code,{children:"ClientCertExtractionMiddleware"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["extend ",(0,s.jsx)(n.code,{children:"authenticate_request"})," with the modes and PoP-binding,"]}),"\n",(0,s.jsxs)(n.li,{children:["introduce new config keys and a sample ",(0,s.jsx)(n.code,{children:"cert_identity_mappings.yaml"}),","]}),"\n",(0,s.jsxs)(n.li,{children:["and leave Traefik dynamic config snippets ready in ",(0,s.jsx)(n.code,{children:"CRUDService/traefik/dynamic.yml"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The docker-compose and K8s specifics above ensure the design is fully aligned with your current architecture."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"implementation-to-do-detailed",children:"Implementation To-Do (detailed)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Prerequisites and decisions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Define trusted proxy CIDRs for dev/prod (Docker bridge, cluster CIDRs) and the exact forwarded cert header name per ingress:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dev (Traefik): ",(0,s.jsx)(n.code,{children:"X-Forwarded-Tls-Client-Cert"})," (PEM)"]}),"\n",(0,s.jsxs)(n.li,{children:["Nginx Ingress: ",(0,s.jsx)(n.code,{children:"ssl-client-cert"})," (PEM)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Prepare CA bundle(s) for client auth:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dev: place CA at ",(0,s.jsx)(n.code,{children:"../IdP/certs/ca.crt"})," (already mounted to Traefik as ",(0,s.jsx)(n.code,{children:"/certs"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Prod: create K8s Secret (e.g., ",(0,s.jsx)(n.code,{children:"default/mtls-ca"}),") with CA chain"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Decide inbound auth mode per endpoint group: ",(0,s.jsx)(n.code,{children:"bearer"}),", ",(0,s.jsx)(n.code,{children:"mtls"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"}),", ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})]}),"\n",(0,s.jsxs)(n.li,{children:["Author identity mapping rules and constraints (SAN, issuer, policy OIDs) in ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/cert_identity_mappings.yaml"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Reverse proxy (Dev \u2013 Traefik)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Update ",(0,s.jsx)(n.code,{children:"CRUDService/traefik/dynamic.yml"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add ",(0,s.jsx)(n.code,{children:"tls.options.mtls"})," with ",(0,s.jsx)(n.code,{children:"clientAuth.RequireAndVerifyClientCert"})," and ",(0,s.jsx)(n.code,{children:"caFiles: [/certs/ca.crt]"})]}),"\n",(0,s.jsxs)(n.li,{children:["Add middleware ",(0,s.jsx)(n.code,{children:"mtls-passcert"})," with ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," (",(0,s.jsx)(n.code,{children:"pem: true"}),", include subject/issuer/notBefore/notAfter/sans)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Update ",(0,s.jsx)(n.code,{children:"crud-service"})," labels in ",(0,s.jsx)(n.code,{children:"docker-compose-authzen4.yml"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Attach ",(0,s.jsx)(n.code,{children:"traefik.http.routers.crud.tls.options=mtls@file"})]}),"\n",(0,s.jsxs)(n.li,{children:["Append ",(0,s.jsx)(n.code,{children:"mtls-passcert@file"})," to the router ",(0,s.jsx)(n.code,{children:"middlewares"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Reload Traefik (compose restart) and verify dashboard shows TLS client auth enabled for ",(0,s.jsx)(n.code,{children:"crud"})," router"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Reverse proxy (Prod \u2013 Ingress)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If Traefik: create ",(0,s.jsx)(n.code,{children:"IngressRoute"})," referencing ",(0,s.jsx)(n.code,{children:"tls.options mtls"})," and apply ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," middleware; mount CA secret in Traefik"]}),"\n",(0,s.jsxs)(n.li,{children:["If Nginx Ingress: set annotations","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/auth-tls-secret: "<ns>/mtls-ca"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:'nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Document header name for app (",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER"}),") and ensure it matches ingress behavior"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"per-path-binding-enforcement",children:"Per-path binding enforcement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Set global mode to ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"})," and list paths that require PoP binding via ",(0,s.jsx)(n.code,{children:"BINDING_REQUIRED_PATHS"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"INBOUND_AUTH_MODE=bearer_plus_mtls_optional\nBINDING_REQUIRED_PATHS=/workflow/start,/workflow/resume,/execute\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Behavior:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Requests to listed paths must include a client cert (forwarded) and the JWT must contain ",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"})," matching the cert thumbprint. Otherwise 401."]}),"\n",(0,s.jsx)(n.li,{children:"Non-listed paths in optional mode accept bearer-only and will not enforce PoP."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kubernetes-ingress-snippets-and-ca-rotation",children:"Kubernetes ingress snippets and CA rotation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Traefik (CRDs) \u2013 mTLS options and passTLSClientCert middleware. Rotate CA by updating the Secret referenced in Traefik and reloading."}),"\n",(0,s.jsxs)(n.li,{children:["Nginx Ingress \u2013 ",(0,s.jsx)(n.code,{children:"auth-tls-verify-client: on"})," and ",(0,s.jsx)(n.code,{children:"auth-tls-secret: <ns>/mtls-ca"}),". Rotate CA by updating the Secret; upstream header is ",(0,s.jsx)(n.code,{children:"ssl-client-cert"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Runbook (rotation):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prepare new CA bundle Secret (ensure old + new overlap if needed)."}),"\n",(0,s.jsx)(n.li,{children:"Update Traefik/Nginx to reference new Secret; apply rollout."}),"\n",(0,s.jsx)(n.li,{children:"Verify with a canary client cert; then remove old CA from bundle."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"curl-examples",children:"Curl examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dev (Traefik mTLS):"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -sS https://crud.local/workflow/start \\\n  --cert client.pem --key client.key \\\n  -H "Authorization: Bearer $JWT" -d \'{"workflow_name":"demo","data":{}}\'\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PoP mismatch troubleshooting: check that ",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"})," in the JWT equals the SHA-256 DER thumbprint of the client cert; otherwise server returns 401."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"config-validation",children:"Config validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"On startup we warn (non-blocking) when:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INBOUND_AUTH_MODE"})," is unknown"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BINDING_REQUIRED_PATHS"})," contains malformed entries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"CERT_IDENTITY_MAPPINGS"})," points to a non-existent file"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["App config (centralized under ",(0,s.jsx)(n.code,{children:"/app/config"})," with env overrides)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Extend ",(0,s.jsx)(n.code,{children:"pdp.yaml"})," ",(0,s.jsx)(n.code,{children:"security"})," section or add ",(0,s.jsx)(n.code,{children:"security.mtls"})," with:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inbound_auth_mode"})," (default for endpoints), ",(0,s.jsx)(n.code,{children:"binding_required_paths"})," (optional per-path overrides)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"forwarded_client_cert_header"}),", ",(0,s.jsx)(n.code,{children:"trusted_proxy_cidrs"}),", ",(0,s.jsx)(n.code,{children:"identity_mappings_path"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Provide environment overrides in ",(0,s.jsx)(n.code,{children:"docker-compose-authzen4.yml"})," for dev:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INBOUND_AUTH_MODE=bearer_plus_mtls_optional"})," (Phase 2), later ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER=X-Forwarded-Tls-Client-Cert"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"TRUSTED_PROXY_CIDRS=172.16.0.0/12,10.0.0.0/8"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"CERT_IDENTITY_MAPPINGS=/app/config/cert_identity_mappings.yaml"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Middleware: ",(0,s.jsx)(n.code,{children:"src/middleware/client_cert.py"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Implement ",(0,s.jsx)(n.code,{children:"ClientCertExtractionMiddleware"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"remote_addr"})," not in ",(0,s.jsx)(n.code,{children:"TRUSTED_PROXY_CIDRS"}),", ignore/strip any client-cert headers"]}),"\n",(0,s.jsxs)(n.li,{children:["Read PEM from ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER"}),", parse via ",(0,s.jsx)(n.code,{children:"cryptography"})]}),"\n",(0,s.jsx)(n.li,{children:"Compute x5t#S256 (SHA-256 of DER, base64url, no padding)"}),"\n",(0,s.jsx)(n.li,{children:"Extract: subject DN, issuer DN, SANs (DNS, URI, RFC822), notBefore/notAfter, policy OIDs"}),"\n",(0,s.jsxs)(n.li,{children:["Set on ",(0,s.jsx)(n.code,{children:"scope['state']"})," and ",(0,s.jsx)(n.code,{children:"request.state"}),": ",(0,s.jsx)(n.code,{children:"mtls_thumbprint"}),", ",(0,s.jsx)(n.code,{children:"client_cert_*"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Defensive parsing: handle multi-line headers, large PEMs, malformed input; cap size"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Wire middleware in ",(0,s.jsx)(n.code,{children:"src/main.py"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add before ",(0,s.jsx)(n.code,{children:"PrincipalHeadersMiddleware"})," to ensure state is available to authn/authz:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"app.add_middleware(ClientCertExtractionMiddleware, ...)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Ensure order: iterator adapter outermost, then security headers/origin/cert extraction, then principal headers"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Identity mapping module: ",(0,s.jsx)(n.code,{children:"src/utils/cert_identity_mapper.py"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Load ",(0,s.jsx)(n.code,{children:"cert_identity_mappings.yaml"})," (fail-closed if ",(0,s.jsx)(n.code,{children:"mtls"}),"/",(0,s.jsx)(n.code,{children:"binding_required"})," mode and no mapping allows)"]}),"\n",(0,s.jsxs)(n.li,{children:["Produce canonical ARN: default ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{x5t}"}),"; allow SAN/issuer policy-based mappings"]}),"\n",(0,s.jsx)(n.li,{children:"Validate constraints: allowed issuers/roots, SAN domain allowlist, policy OIDs, validity window"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["AuthN changes: ",(0,s.jsx)(n.code,{children:"src/services/authn_service.py"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Read ",(0,s.jsx)(n.code,{children:"inbound_auth_mode"})," and per-path overrides from config"]}),"\n",(0,s.jsxs)(n.li,{children:["If mode is ",(0,s.jsx)(n.code,{children:"mtls"})," and cert present:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Build ",(0,s.jsx)(n.code,{children:"UniqueIdentity"})," from cert mapping; skip JWT introspection"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If mode is ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"})," and both present:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Prefer JWT identity but set ",(0,s.jsx)(n.code,{children:"request.state.mtls_thumbprint"})," for sender-binding"]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"binding_required_paths"})," match, enforce PoP (",(0,s.jsx)(n.code,{children:"token.cnf.x5t#S256 == mtls_thumbprint"}),")"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If mode is ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Require both JWT and cert; enforce PoP, else ",(0,s.jsx)(n.code,{children:"401 invalid_token"})," with troubleshooting"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Populate: ",(0,s.jsx)(n.code,{children:"request.state.subject"}),", ",(0,s.jsx)(n.code,{children:"request.state.client_id"}),", ",(0,s.jsx)(n.code,{children:"request.state.unique_identity"})," consistently for downstream"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["AuthZ: ",(0,s.jsx)(n.code,{children:"src/services/authz_service.py"})," (validate context only)"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No core changes; ensure normalized identity is used (cert ARN or JWT unique_id)"}),"\n",(0,s.jsx)(n.li,{children:"Log principal ARN, mtls thumbprint presence, and enforcement outcome for audit"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Secrets sender-binding: ",(0,s.jsx)(n.code,{children:"src/services/vault_service.py"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Confirm ",(0,s.jsx)(n.code,{children:"cnf_binding = mtls_thumbprint or cnf_jkt"})," path works"]}),"\n",(0,s.jsxs)(n.li,{children:["Add tests to ensure ",(0,s.jsx)(n.code,{children:"grant.cnf_binding"})," drift is detected when ",(0,s.jsx)(n.code,{children:"mtls_thumbprint"})," changes within TTL"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Observability and audit"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Metrics: add counters/histograms","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mtls_auth_success_total"}),", ",(0,s.jsx)(n.code,{children:"mtls_auth_failure_total{reason}"}),", ",(0,s.jsx)(n.code,{children:"mtls_pop_mismatch_total"})]}),"\n",(0,s.jsx)(n.li,{children:"Latency histograms for middleware parse and auth pipeline"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Kafka: publish security events on success/failure (mask sensitive fields, include thumbprint only)"}),"\n",(0,s.jsxs)(n.li,{children:["Structured logs: include ",(0,s.jsx)(n.code,{children:"correlation_id"}),", ",(0,s.jsx)(n.code,{children:"mtls_thumbprint_present"}),", ",(0,s.jsx)(n.code,{children:"binding_enforced"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Tests"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Unit","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Middleware: parse valid PEM, invalid PEM, no header, untrusted proxy, large header"}),"\n",(0,s.jsx)(n.li,{children:"Identity mapper: mapping precedence, constraint failures (issuer/SAN/policy/expiry)"}),"\n",(0,s.jsx)(n.li,{children:"AuthN modes: each mode with and without cert/JWT; PoP pass/fail"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Integration (dev via Traefik)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Compose with mtls enabled; hit CRUD endpoints using client cert; verify 200 vs 401 on PoP mismatch"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["E2E","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Critical flows on ",(0,s.jsx)(n.code,{children:"/workflow/*"})," and ",(0,s.jsx)(n.code,{children:"/execute"})," with mode permutations"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Runbook and rollout"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Phase toggles via env/config; start with ",(0,s.jsx)(n.code,{children:"bearer"})," \u2192 ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_optional"})," (observe) \u2192 ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})]}),"\n",(0,s.jsx)(n.li,{children:"CA rotation procedure (Traefik/Nginx + app policy reload)"}),"\n",(0,s.jsx)(n.li,{children:"Incident steps for revocation, thumbprint blocklisting (temporary deny-list in mappings)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Security hardening"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Strip client-cert headers from untrusted sources (always)"}),"\n",(0,s.jsx)(n.li,{children:"Enforce TLSv1.2+ (prefer TLSv1.3) and FIPS ciphers at proxy"}),"\n",(0,s.jsx)(n.li,{children:"Rate-limit cert-auth failures; alert on spikes"}),"\n",(0,s.jsx)(n.li,{children:"Validate that cert clock-skew handling is sane; apply small leeway only if required"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Documentation updates"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/cert_identity_mappings.yaml"})," example with comments"]}),"\n",(0,s.jsxs)(n.li,{children:["Update ",(0,s.jsx)(n.code,{children:"traefik/dynamic.yml"})," example and K8s ingress examples"]}),"\n",(0,s.jsxs)(n.li,{children:["Provide ",(0,s.jsx)(n.code,{children:"curl"})," examples for mTLS (dev) and PoP-mismatch troubleshooting"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"role-based-quick-guides-and-faqs",children:"Role-based quick guides and FAQs"}),"\n",(0,s.jsx)(n.h4,{id:"for-product-managers-non-technical",children:"For Product Managers (non-technical)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"What is being added? Inbound mutual TLS (mTLS) so API clients present a client certificate. We can optionally require their JWT to be bound to that certificate for stronger proof-of-possession (PoP)."}),"\n",(0,s.jsx)(n.li,{children:"Why it matters: Prevents token replay and enforces that only devices with approved certificates can access sensitive endpoints."}),"\n",(0,s.jsxs)(n.li,{children:["Modes and impact:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"bearer: current behavior, no change to clients."}),"\n",(0,s.jsx)(n.li,{children:"mtls: cert-only clients; no JWT needed. Good for service accounts."}),"\n",(0,s.jsx)(n.li,{children:"bearer_plus_mtls_optional: JWT still works; certain paths can require PoP."}),"\n",(0,s.jsx)(n.li,{children:"bearer_plus_mtls_required: strongest; clients must send both JWT and cert and they must match."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Rollout safety: adopt optional mode first, monitor, then enforce on high-risk endpoints only."}),"\n",(0,s.jsx)(n.li,{children:"SLA impact: negligible under normal load; cert parsing and PoP check are microseconds compared to network I/O."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Common PM questions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["How do we identify clients? Certificate \u2192 canonical ARN (e.g., ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{thumbprint}"})," or email SAN when allowed)."]}),"\n",(0,s.jsx)(n.li,{children:"Can we block a compromised cert quickly? Yes: remove it from mappings or rotate CA at the proxy; app also enforces SAN/issuer/policy constraints."}),"\n",(0,s.jsx)(n.li,{children:"What changes for UIs? None directly. This feature targets API/service clients."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-devops-enableoperate",children:"For DevOps (enable/operate)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dev (Docker + Traefik):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Enable mTLS in ",(0,s.jsx)(n.code,{children:"traefik/dynamic.yml"})," with ",(0,s.jsx)(n.code,{children:"tls.options.mtls"})," and ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," middleware."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Ensure CRUD router labels include ",(0,s.jsx)(n.code,{children:"...tls.options=mtls@file"})," and ",(0,s.jsx)(n.code,{children:"...middlewares=mtls-passcert@file,..."}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["App env: set ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER=X-Forwarded-Tls-Client-Cert"}),", trusted CIDRs for the bridge, and ",(0,s.jsx)(n.code,{children:"INBOUND_AUTH_MODE"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Optional: set ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HMAC_SECRET"})," and ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_SIGNATURE_HEADER"})," to require a signed forwarded cert header."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Safer default for teams: mTLS is disabled by default in dev; opt in when ready"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Default compose now routes without mTLS to avoid blocking teammates without a CA."}),"\n",(0,s.jsxs)(n.li,{children:["To enable mTLS locally, run with the override:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker compose -f docker-compose-authzen4.yml -f docker-compose.dev-mtls.yml up -d --build\n"})}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"To revert to non-mTLS quickly, stop and start without the override file."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Traefik: strip and re-add client-cert headers (order matters)"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"traefik/dynamic.yml"})," add a headers middleware to remove any client-cert-like headers from inbound requests, then apply ",(0,s.jsx)(n.code,{children:"passTLSClientCert"})," to attach the verified cert after TLS client auth:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"http:\n  middlewares:\n    strip-external-client-cert:\n      headers:\n        removeRequestHeaders:\n          - X-Forwarded-Tls-Client-Cert\n          - X-Forwarded-Client-Cert\n          - X-Forwarded-Client-Cert-Chain\n          - X-Forwarded-Tls-Client-Cert-Signature\n          - XFCC\n\n    mtls-passcert:\n      passTLSClientCert:\n        pem: true\n        info:\n          subject: true\n          issuer: true\n          notBefore: true\n          notAfter: true\n          sans: true\n\ntls:\n  options:\n    mtls:\n      minVersion: VersionTLS12\n      clientAuth:\n        clientAuthType: RequireAndVerifyClientCert\n        caFiles:\n          - /certs/ca.crt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Update the CRUD router to ensure middleware order is: strip \u2192 passcert \u2192 security/rate-limit:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'- "traefik.http.routers.crud.tls.options=mtls@file"\n- "traefik.http.routers.crud.middlewares=strip-external-client-cert@file,mtls-passcert@file,security-headers@file,rate-limit@file"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["CA setup (dev): ensure ",(0,s.jsx)(n.code,{children:"/certs/ca.crt"})," exists in Traefik"]}),"\n",(0,s.jsxs)(n.p,{children:["Traefik mounts ",(0,s.jsx)(n.code,{children:"../IdP/certs"})," as ",(0,s.jsx)(n.code,{children:"/certs"}),". Create a dev CA and client cert, and place the CA at ",(0,s.jsx)(n.code,{children:"../IdP/certs/ca.crt"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1) Dev CA\nopenssl req -x509 -newkey rsa:2048 -keyout ca.key -out ca.crt -days 3650 -nodes -subj "/CN=EmpowerNow Dev CA"\n\n# 2) Client key & CSR\nopenssl req -newkey rsa:2048 -keyout client.key -out client.csr -nodes -subj "/CN=dev-client"\n\n# 3) Sign client cert with CA\nopenssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.pem -days 365 -sha256\n\n# 4) Place CA where Traefik reads it\nmkdir -p ../IdP/certs\ncp ca.crt ../IdP/certs/ca.crt\n\n# 5) Test a request (requires client cert)\ncurl -k --resolve crud.ocg.labs.empowernow.ai:443:127.0.0.1 \\\n  --cert client.pem --key client.key \\\n  https://crud.ocg.labs.empowernow.ai/health\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Team-friendly option: commit a public dev CA certificate (no private key) at ",(0,s.jsx)(n.code,{children:"IdP/certs/ca.crt"}),", and provide a small script to generate per\u2011developer client certs."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Prod (K8s):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Traefik: reference ",(0,s.jsx)(n.code,{children:"tls.options mtls"})," and apply passTLSClientCert middleware; CA via Secret."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Nginx: use ",(0,s.jsx)(n.code,{children:'auth-tls-verify-client: "on"'})," and ",(0,s.jsx)(n.code,{children:'auth-tls-pass-certificate-to-upstream: "true"'}),"; set app header to ",(0,s.jsx)(n.code,{children:"ssl-client-cert"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"CA setup (prod): create a Secret with your CA bundle and reference it from the ingress controller"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create a secret with your CA chain (no private keys)\nkubectl create secret generic mtls-ca \\\n  --from-file=ca.crt=./prod-ca.crt \\\n  -n traefik\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Traefik (CRD) snippet:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: traefik.containo.us/v1alpha1\nkind: TLSOption\nmetadata:\n  name: mtls\n  namespace: traefik\nspec:\n  minVersion: VersionTLS12\n  clientAuth:\n    secretNames:\n      - mtls-ca\n    clientAuthType: RequireAndVerifyClientCert\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Nginx Ingress annotations:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'metadata:\n  annotations:\n    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"\n    nginx.ingress.kubernetes.io/auth-tls-secret: "<ns>/mtls-ca"\n    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"\n'})}),"\n",(0,s.jsx)(n.p,{children:"CA rotation: replace the Secret, roll the ingress controller, canary test, then remove old CA from the bundle."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"CA rotation runbook: update Secret, reload ingress, canary test, then remove old CA."}),"\n",(0,s.jsxs)(n.li,{children:["Observability:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Metrics counters: mTLS auth successes/failures, PoP mismatches (see MetricsCollector usage)."}),"\n",(0,s.jsx)(n.li,{children:"Kafka audit (best-effort): success/failure events with minimal data (thumbprint, reason)."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"FIPS posture: enforce TLS1.2+/1.3 and AES-GCM at the edge; ensure OpenSSL FIPS mode on ingress layer as required."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"DevOps FAQ"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["How to verify header forwarding? Inspect Traefik dashboard router/middleware, and in app logs look for ",(0,s.jsx)(n.code,{children:"mtls_thumbprint_present=true"})," on requests. 401 with ",(0,s.jsx)(n.code,{children:"sender_binding_mismatch"})," indicates PoP mismatch is working."]}),"\n",(0,s.jsxs)(n.li,{children:["How to simulate client cert in dev? Use curl with ",(0,s.jsx)(n.code,{children:"--cert/--key"})," or a test client behind the proxy."]}),"\n",(0,s.jsxs)(n.li,{children:["What breaks clients? Only when switching to ",(0,s.jsx)(n.code,{children:"bearer_plus_mtls_required"})," or ",(0,s.jsx)(n.code,{children:"mtls"})," for their endpoints without provisioning certs and JWT PoP."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-qa-verifyaccept",children:"For QA (verify/accept)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Acceptance criteria","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Optional mode: listed paths in ",(0,s.jsx)(n.code,{children:"BINDING_REQUIRED_PATHS"})," enforce PoP; non-listed paths accept bearer-only."]}),"\n",(0,s.jsx)(n.li,{children:"Required mode: missing cert \u2192 401; PoP mismatch \u2192 401; matching PoP \u2192 200."}),"\n",(0,s.jsx)(n.li,{children:"mtls mode: no JWT required; identity derived from cert mapping."}),"\n",(0,s.jsx)(n.li,{children:"Sender-binding drift (secrets): second request with different thumbprint for same subject/resource is rejected."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Test matrix (examples)"}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Mode"}),(0,s.jsx)(n.th,{children:"Path listed"}),(0,s.jsx)(n.th,{children:"JWT"}),(0,s.jsx)(n.th,{children:"Cert"}),(0,s.jsx)(n.th,{children:"PoP match"}),(0,s.jsx)(n.th,{children:"Expected"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"optional"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"200"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"optional"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"401"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"optional"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"200"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"required"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"401"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"required"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"401"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"required"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"200"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mtls"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"no"}),(0,s.jsx)(n.td,{children:"yes"}),(0,s.jsx)(n.td,{children:"n/a"}),(0,s.jsx)(n.td,{children:"200"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"QA tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use curl examples below to simulate; validate ",(0,s.jsx)(n.code,{children:"WWW-Authenticate"})," error details on failures."]}),"\n",(0,s.jsx)(n.li,{children:"Confirm sender-binding drift by requesting a secret twice with two different certs for the same subject."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"sequence-request-flow",children:"Sequence: request flow"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant C as Client\n  participant P as Traefik/Nginx\n  participant A as CRUDService\n  participant M as ClientCertExtractionMiddleware\n  participant N as authn_service\n  participant V as VaultService\n\n  C->>P: TLS handshake (client cert)\n  P->>P: Verify client cert (CA/OCSP/CRL)\n  P->>A: HTTP + forwarded client-cert header (PEM)\n  A->>M: Middleware parses cert \u2192 x5t#S256, SANs, DNs\n  M--\x3e>A: request.state.mtls_thumbprint, cert meta\n  A->>N: authenticate_request(mode, PoP)\n  N->>N: If required/forced path \u2192 verify cnf.x5t == mtls x5t\n  N--\x3e>A: subject ARN, client_id\n  A->>V: get secret (cnf_binding = mtls x5t or cnf_jkt)\n  V--\x3e>A: credentials (or 403 on drift)\n  A--\x3e>C: 200/401/403"}),"\n",(0,s.jsx)(n.h3,{id:"flow-mode-and-pop-enforcement",children:"Flow: mode and PoP enforcement"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\n  S[Start request] --\x3e MODE{INBOUND_AUTH_MODE}\n  MODE --\x3e|bearer| B[Extract JWT only]\n  MODE --\x3e|mtls| MTLS[Require cert; map to ARN]\n  MODE --\x3e|bearer_plus_mtls_optional| OPT[JWT? use; Cert? attach thumbprint]\n  MODE --\x3e|bearer_plus_mtls_required| REQ[Require JWT + Cert]\n\n  REQ --\x3e MATCH{JWT.cnf.x5t == cert x5t?}\n  MATCH --\x3e|yes| OK[Proceed]\n  MATCH --\x3e|no| ERR401[401 sender_binding_mismatch]\n\n  OPT --\x3e PATH{Path in BINDING_REQUIRED_PATHS?}\n  PATH --\x3e|yes| MATCH\n  PATH --\x3e|no| OK\n\n  B --\x3e OK\n  MTLS --\x3e OK"}),"\n",(0,s.jsx)(n.h3,{id:"faqs-and-troubleshooting",children:"FAQs and troubleshooting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"How do I generate a test client certificate?"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl req -x509 -newkey rsa:2048 -keyout client.key -out client.pem -days 365 -nodes -subj "/CN=test-client"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Curl examples","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"mTLS + bearer:"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -sS https://crud.local/workflow/start \\\n  --cert client.pem --key client.key \\\n  -H "Authorization: Bearer $JWT" -d \'{"workflow_name":"demo","data":{}}\'\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PoP mismatch (expect 401): issue a JWT with different ",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"})," than the client cert x5t."]}),"\n",(0,s.jsxs)(n.li,{children:["Common errors","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"401 invalid_token, reason=certificate_missing: proxy not forwarding cert or untrusted proxy."}),"\n",(0,s.jsxs)(n.li,{children:["401 sender_binding_mismatch: JWT ",(0,s.jsx)(n.code,{children:"cnf.x5t#S256"})," doesn\u2019t match cert thumbprint."]}),"\n",(0,s.jsx)(n.li,{children:"403 binding_drift (secrets): thumbprint changed for same subject/resource."}),"\n",(0,s.jsxs)(n.li,{children:["400 on PEM parse: header malformed or exceeds ",(0,s.jsx)(n.code,{children:"MAX_CLIENT_CERT_SIZE"})," (default 32KB). Duplicate header \u2192 400. Missing/bad signature \u2192 400 when HMAC is enabled."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Verifying the forwarded header exists","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check proxy config and app logs; ensure ",(0,s.jsx)(n.code,{children:"FORWARDED_CLIENT_CERT_HEADER"})," matches ingress header name."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Kafka audit not visible?","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ensure broker reachable (inside Docker use ",(0,s.jsx)(n.code,{children:"kafka:9092"}),", from host use ",(0,s.jsx)(n.code,{children:"localhost:9093"}),"). Audits are best-effort and won\u2019t block requests."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"trust-boundary-hardening-recommended",children:"Trust boundary hardening (recommended)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["At the proxy:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Strip any inbound client-cert/XFCC headers from external requests before mTLS verification."}),"\n",(0,s.jsx)(n.li,{children:"After successful client cert verification, re-add only the canonical forwarded header with the verified PEM."}),"\n",(0,s.jsx)(n.li,{children:"Optionally sign the forwarded header (HMAC) using a shared secret; validate signature in the app."}),"\n",(0,s.jsx)(n.li,{children:"Prefer TLS 1.3; for TLS 1.2 restrict to AES-GCM suites and strong curves (P-256/P-384). Disable renegotiation."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Between proxy \u2192 app:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prefer mTLS on the internal hop, or use signed forwarded headers to prevent tampering."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["In the app middleware:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enforce single-value header (reject duplicates). Cap size (default 32KB). Normalize percent-encoding and ",(0,s.jsx)(n.code,{children:"\\n"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Fail closed with clear 4xx when header is duplicated, oversized, or malformed; log reason-coded metrics."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Identity mapping:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Precedence: thumbprint \u2192 SAN",":email"," \u2192 SAN",":URI","/DNS/UPN. Log which rule matched; validate chain depth and issuer allow-list, not only root CA."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Incident response:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Support a hot-reloadable thumbprint blocklist and short OCSP/CRL cache TTLs for high-risk endpoints."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"certificate-identity-mapping-cert_identity_mappingsyaml",children:"Certificate identity mapping (cert_identity_mappings.yaml)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Location and wiring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["File lives in your mounted config: ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/cert_identity_mappings.yaml"})," \u2192 container path ",(0,s.jsx)(n.code,{children:"/app/config/cert_identity_mappings.yaml"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Environment variable ",(0,s.jsx)(n.code,{children:"CERT_IDENTITY_MAPPINGS=/app/config/cert_identity_mappings.yaml"})," enables it (already set in compose)."]}),"\n",(0,s.jsx)(n.li,{children:"Used by the authentication service when building a canonical ARN for mTLS identities."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Purpose"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Control how a certificate becomes a principal ARN and constrain which certs are accepted (issuers, SAN domains, policy OIDs)."}),"\n",(0,s.jsxs)(n.li,{children:["Precedence is explicit and deterministic: ",(0,s.jsx)(n.code,{children:"thumbprint_map"})," override \u2192 SAN email mapping (when allowed) \u2192 default thumbprint ARN."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Fields"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"thumbprint_map"})," (map): overrides specific x5t#S256 thumbprints to a concrete ARN."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"constraints.allowed_issuers"})," (list of substrings): issuer DN must contain at least one."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"constraints.allowed_email_domains"})," (list): RFC822 SAN must end with one of these domains to allow email-based mapping."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"constraints.allowed_policy_oids"})," (list, optional): require at least one policy OID (e.g., hardware token profile). If absent, policy OIDs aren\u2019t enforced."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"ARN formats (canonical)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Default thumbprint mapping: ",(0,s.jsx)(n.code,{children:"auth:account:x509:sha256:{thumbprint}"})]}),"\n",(0,s.jsxs)(n.li,{children:["Email SAN mapping: ",(0,s.jsx)(n.code,{children:"auth:account:x509:email:{address}"})]}),"\n",(0,s.jsxs)(n.li,{children:["You can map to any canonical ARN your PDP understands, e.g., ",(0,s.jsx)(n.code,{children:"auth:account:x509:device:build-agent"})," for a CI runner."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Real-world examples"}),"\n",(0,s.jsx)(n.p,{children:"Minimal (default to thumbprint ARNs):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'thumbprint_map: {}\nconstraints:\n  allowed_issuers: []          # any issuer\n  allowed_email_domains: ["corp.tld"]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Pin a CI agent and restrict issuers and SAN domain:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'thumbprint_map:\n  mQz0sE5e1E-6XfOUkqH8yYl2o9g0mY0y2X2qKX7fUOQ: auth:account:x509:device:ci-prod-build-agent\nconstraints:\n  allowed_issuers:\n    - "CN=EmpowerNow Dev CA"\n    - "CN=Corp Root CA"\n  allowed_email_domains:\n    - "corp.tld"\n  allowed_policy_oids:\n    - "2.23.140.1.3"   # example hardware-token policy OID\n'})}),"\n",(0,s.jsx)(n.p,{children:"Route specific users by email SAN while leaving others as thumbprint ARNs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'thumbprint_map: {}\nconstraints:\n  allowed_issuers: ["CN=EmpowerNow Dev CA"]\n  allowed_email_domains: ["partner.example"]\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Computing x5t#S256 (thumbprint)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# DER \u2192 SHA-256 \u2192 base64url (no padding)\nopenssl x509 -in client.pem -outform der \\\n  | openssl dgst -sha256 -binary \\\n  | openssl base64 -A \\\n  | tr '+/' '-_' | tr -d '='\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Testing changes in dev"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Edit ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/cert_identity_mappings.yaml"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Restart ",(0,s.jsx)(n.code,{children:"crud-service"})," (the file is read on startup)."]}),"\n",(0,s.jsxs)(n.li,{children:["Call an endpoint that triggers identity mapping, e.g., ",(0,s.jsx)(n.code,{children:"/execute"})," in ",(0,s.jsx)(n.code,{children:"mtls"})," mode or any endpoint with mTLS present."]}),"\n",(0,s.jsx)(n.li,{children:"Verify logs include the mapped ARN and that constraints are enforced (e.g., issuer mismatch \u2192 401 with reason)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Blocking a compromised cert quickly"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Prefer the dedicated blocklist: set ",(0,s.jsx)(n.code,{children:"CERT_THUMBPRINT_BLOCKLIST=/app/config/blocked_thumbs.txt"})," and list x5t#S256 values (one per line). The middleware returns ",(0,s.jsx)(n.code,{children:"401 certificate_blocklisted"})," for matches."]}),"\n",(0,s.jsxs)(n.li,{children:["You can also remove entries from ",(0,s.jsx)(n.code,{children:"thumbprint_map"})," or tighten ",(0,s.jsx)(n.code,{children:"allowed_issuers"}),"/",(0,s.jsx)(n.code,{children:"allowed_email_domains"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Related"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reference \u2192 mTLS (Design & Guide)"}),"\n",(0,s.jsx)(n.li,{children:"BFF \u2192 Upstream TLS/mTLS to CRUD: ../../bff/how-to/enable-upstream-tls-to-crud.md"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);
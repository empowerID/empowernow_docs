"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[805],{28453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var r=s(96540);const n={},o=r.createContext(n);function c(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(o.Provider,{value:t},e.children)}},73181:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"services/crud-service/tutorials/mcp-scenario-user-context","title":"mcp-scenario-user-context","description":"Tutorial \u2013 Build a user context (manager, groups, devices)","source":"@site/docs/services/crud-service/tutorials/mcp-scenario-user-context.md","sourceDirName":"services/crud-service/tutorials","slug":"/services/crud-service/tutorials/mcp-scenario-user-context","permalink":"/empowernow_docs/docs/services/crud-service/tutorials/mcp-scenario-user-context","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/tutorials/mcp-scenario-user-context.md","tags":[],"version":"current","frontMatter":{}}');var n=s(74848),o=s(28453);const c={},a=void 0,i={},l=[{value:"Tutorial \u2013 Build a user context (manager, groups, devices)",id:"tutorial--build-a-user-context-manager-groups-devices",level:2},{value:"Steps",id:"steps",level:3},{value:"Notes",id:"notes",level:3}];function d(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"tutorial--build-a-user-context-manager-groups-devices",children:"Tutorial \u2013 Build a user context (manager, groups, devices)"}),"\n",(0,n.jsxs)(t.p,{children:["Goal: given a user id (",(0,n.jsx)(t.code,{children:"SystemIdentifier"}),"), fetch the user, their manager, their groups, and registered devices using Loopback MCP tools."]}),"\n",(0,n.jsx)(t.h3,{id:"steps",children:"Steps"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Entra user by ID"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'USER_ID=00000000-0000-0000-0000-000000000000\r\ncurl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"21","method":"tools/call","params":{"name":"entra.cont.account.get_by_id","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}}\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | tee /tmp/user.json | jq\n'})}),"\n",(0,n.jsxs)(t.ol,{start:"2",children:["\n",(0,n.jsx)(t.li,{children:"Manager (Entra)"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"22","method":"tools/call","params":{"name":"entra.cont.account.get_manager","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}}\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | tee /tmp/manager.json | jq\n'})}),"\n",(0,n.jsxs)(t.ol,{start:"3",children:["\n",(0,n.jsx)(t.li,{children:"Groups (Entra)"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"23","method":"tools/call","params":{"name":"entra.cont.account.list_groups","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}}\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | tee /tmp/groups.json | jq \'.[0:10]\'\n'})}),"\n",(0,n.jsxs)(t.ol,{start:"4",children:["\n",(0,n.jsx)(t.li,{children:"Registered devices (Entra)"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"24","method":"tools/call","params":{"name":"entra.cont.device.list_user_registered","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}}\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | tee /tmp/devices.json | jq \'.[0:10]\'\n'})}),"\n",(0,n.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Ensure the token has ",(0,n.jsx)(t.code,{children:"mcp.tools.invoke"})]}),"\n",(0,n.jsxs)(t.li,{children:["Use ",(0,n.jsx)(t.code,{children:"jq"})," to extract fields for dashboards or enrichment scripts"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);
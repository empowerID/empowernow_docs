"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[6442],{10148:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"services/crud-service/secrets/executive-overview","title":"Executive overview","description":"What the Secrets Platform is and the value it delivers","source":"@site/docs/services/crud-service/secrets/01-executive-overview.md","sourceDirName":"services/crud-service/secrets","slug":"/services/crud-service/secrets/executive-overview","permalink":"/empowernow_docs/docs/services/crud-service/secrets/executive-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/secrets/01-executive-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Executive overview","description":"What the Secrets Platform is and the value it delivers"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/empowernow_docs/docs/services/crud-service/secrets/"},"next":{"title":"Architecture and design","permalink":"/empowernow_docs/docs/services/crud-service/secrets/architecture-design"}}');var i=s(74848),t=s(28453);const c={title:"Executive overview",description:"What the Secrets Platform is and the value it delivers"},o=void 0,a={},l=[];function d(e){const n={code:"code",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The Secrets Platform centralizes how services access credentials, API keys, and configuration secrets. It enforces policy before use, standardizes URIs, and provides consistent auditing."}),"\n",(0,i.jsx)(n.p,{children:"Why it matters:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": tokens/keys are never spread across apps; short\u2011lived grants and sender binding reduce blast radius."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": one way to reference secrets across providers (OpenBao, HashiCorp Vault) and environments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compliance"}),": non\u2011leaky audits, masking, and versioned recovery."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"At a glance:"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\r\n  Client["App/Service"] --\x3e PEP["VaultService (PEP)"]\r\n  PEP --\x3e PDP["SecretPolicyService (PDP)"]\r\n  PEP --\x3e Providers{{"Providers"}}\r\n  Providers --\x3e OB[("OpenBao KVv2")]\r\n  Providers --\x3e HV[("HashiCorp KVv2")]\r\n  Providers --\x3e YAML[("YAML dev store")]\r\n  PEP --\x3e Audits["Kafka audits + metrics"]'}),"\n",(0,i.jsx)(n.p,{children:"Outcomes and how we measure"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rotation speed: time from approved request to provider change applied"}),"\n",(0,i.jsx)(n.li,{children:"Coverage: proportion of secrets accessed via Canonical URIs with PDP enforcement"}),"\n",(0,i.jsx)(n.li,{children:"Audit completeness: events consistently include subject, purpose, decision, resource_ref"}),"\n",(0,i.jsx)(n.li,{children:"Governance: policy changes use an approval flow and appear in the audit trail"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Risk scenarios"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stolen provider token: short TTL grants + sender binding prevent reuse"}),"\n",(0,i.jsx)(n.li,{children:"Misrouted pointer: tenant/mount guard blocks cross\u2011tenant access"}),"\n",(0,i.jsx)(n.li,{children:"Accidental delete: soft delete \u2192 undelete; destroy is gated"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"What\u2019s in vs out"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In: use/rotate/delete via platform; centralized audits and policy"}),"\n",(0,i.jsx)(n.li,{children:"Out: plaintext secrets in code/env; unmanaged direct provider calls"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Dependencies"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PDP reachable; Kafka for audits; KVv2 provider configured; OTel collector for traces (optional)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Roll\u2011out checklist"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Enable PDP, set TENANT_* guards, configure providers, update env pointers to Canonical URIs, enable scopes in prod, verify dashboards."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"What is secrets management (primer)"}),"\n",(0,i.jsx)(n.p,{children:"Secrets management is the discipline of storing, distributing, and rotating sensitive values (credentials, tokens, keys) safely. Good practice removes secrets from code and config files, minimizes who can read them, and proves how/when they were used."}),"\n",(0,i.jsx)(n.p,{children:"Key challenges it addresses"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Sprawl: secrets spread across repos and environments; hard to inventory or revoke"}),"\n",(0,i.jsx)(n.li,{children:"Leakage: plaintext in logs/env/commits; long\u2011lived tokens reused broadly"}),"\n",(0,i.jsx)(n.li,{children:"Drift: inconsistent rotation cadences; unclear ownership and auditability"}),"\n",(0,i.jsx)(n.li,{children:"Integration friction: each provider behaves differently; migration is risky"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Types of secrets we support"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API tokens and OAuth client secrets"}),"\n",(0,i.jsx)(n.li,{children:"Database/user credentials"}),"\n",(0,i.jsx)(n.li,{children:"Encryption keys and certificates (material handled via providers; references stored)"}),"\n",(0,i.jsx)(n.li,{children:"Application and integration keys (e.g., third\u2011party SaaS)"}),"\n",(0,i.jsx)(n.li,{children:"Configuration values that must be protected but frequently read"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Vault providers we support"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OpenBao KVv2 (first\u2011class)"}),"\n",(0,i.jsx)(n.li,{children:"HashiCorp Vault KVv2 (first\u2011class)"}),"\n",(0,i.jsx)(n.li,{children:"YAML file store for local development only (feature\u2011parity URIs, guarded in prod)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Big design concepts we achieved"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Canonical Secret URIs: one, normalized way to reference secrets across providers and tenants"}),"\n",(0,i.jsx)(n.li,{children:"PEP/PDP pattern: VaultService enforces policy; SecretPolicyService decides with explicit purposes"}),"\n",(0,i.jsx)(n.li,{children:"Grants and obligations: short\u2011lived, purpose\u2011bound usage with TTL/max\u2011uses"}),"\n",(0,i.jsx)(n.li,{children:"Sender binding: DPoP/mTLS/audience checks to prevent replay and token theft misuse"}),"\n",(0,i.jsx)(n.li,{children:"Tenant/mount guards: prevent cross\u2011tenant access by construction"}),"\n",(0,i.jsx)(n.li,{children:"Versioned lifecycle: soft delete/undelete/destroy with auditable decisions"}),"\n",(0,i.jsxs)(n.li,{children:["Non\u2011leaky audits: HMAC(",(0,i.jsx)(n.code,{children:"resource_ref"}),") enables correlation without exposing paths/keys"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Common use cases we enable"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bootstrapping app credentials safely via pointers, not plaintext"}),"\n",(0,i.jsx)(n.li,{children:"Rolling rotations without downtime; rollback to a prior version if needed"}),"\n",(0,i.jsx)(n.li,{children:"Per\u2011tenant secret isolation and least\u2011privilege mounts"}),"\n",(0,i.jsx)(n.li,{children:"Environment promotion using the same Canonical URI across dev/stage/prod"}),"\n",(0,i.jsx)(n.li,{children:"Break\u2011glass flows with approvals and complete audit trails"}),"\n",(0,i.jsx)(n.li,{children:"Bulk operations (set/delete/rotate/undelete/destroy) for maintenance windows"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"How this strengthens security"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Eliminates plaintext in code and reduces long\u2011lived credentials"}),"\n",(0,i.jsx)(n.li,{children:"Enforces least\u2011privilege and purpose\u2011limited access at every use"}),"\n",(0,i.jsx)(n.li,{children:"Makes misuse detectable and attributable via structured audits and traces"}),"\n",(0,i.jsx)(n.li,{children:"Standardizes safe patterns so all teams benefit without bespoke solutions"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Lifecycle at a glance"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\r\n  C["Create/Rotate"] --\x3e U["Use with grant"]\r\n  U --\x3e A["Audit + Metrics"]\r\n  U --\x3e V["Versioned retention"]\r\n  V --\x3e UD["Undelete"]\r\n  V --\x3e D["Destroy versions - approved"]'})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(96540);const i={},t=r.createContext(i);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);
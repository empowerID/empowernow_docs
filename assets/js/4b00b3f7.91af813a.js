"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7973],{28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var t=n(96540);const s={},o=t.createContext(s);function d(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(o.Provider,{value:r},e.children)}},72789:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"services/nowconnect/reference/ports-and-protocols","title":"ports-and-protocols","description":"Ports and Protocols","source":"@site/docs/services/nowconnect/reference/ports-and-protocols.md","sourceDirName":"services/nowconnect/reference","slug":"/services/nowconnect/reference/ports-and-protocols","permalink":"/empowernow_docs/docs/services/nowconnect/reference/ports-and-protocols","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/reference/ports-and-protocols.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"pki-guidance","permalink":"/empowernow_docs/docs/services/nowconnect/reference/pki-guidance"},"next":{"title":"security-overview","permalink":"/empowernow_docs/docs/services/nowconnect/reference/security-overview"}}');var s=n(74848),o=n(28453);const d={},c=void 0,i={},l=[{value:"Ports and Protocols",id:"ports-and-protocols",level:2},{value:"Matrix",id:"matrix",level:3},{value:"Proxy patterns",id:"proxy-patterns",level:3},{value:"Visual overview",id:"visual-overview",level:3}];function a(e){const r={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"ports-and-protocols",children:"Ports and Protocols"}),"\n",(0,s.jsx)(r.p,{children:"A concise matrix of ports, directions, and protocols for typical deployments."}),"\n",(0,s.jsx)(r.h3,{id:"matrix",children:"Matrix"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Source"}),(0,s.jsx)(r.th,{children:"Destination"}),(0,s.jsx)(r.th,{children:"Port/Proto"}),(0,s.jsx)(r.th,{children:"Purpose"}),(0,s.jsx)(r.th,{children:"Notes"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Clients"}),(0,s.jsx)(r.td,{children:"Cloud Hub (LB/Ingress)"}),(0,s.jsx)(r.td,{children:"TCP 389/636/..."}),(0,s.jsx)(r.td,{children:"Connector listeners"}),(0,s.jsx)(r.td,{children:"TLS if end-protocol supports (e.g., LDAPS)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Premise Agent"}),(0,s.jsx)(r.td,{children:"Cloud Hub (LB/Ingress)"}),(0,s.jsx)(r.td,{children:"WebSocket over TLS (443)"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"/tunnel"})," upgrade"]}),(0,s.jsx)(r.td,{children:"Auth via JWT; optional ingress mTLS not required for agent"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Cloud Hub A"}),(0,s.jsx)(r.td,{children:"Cloud Hub B (via Ingress)"}),(0,s.jsx)(r.td,{children:"WebSocket over TLS (443)"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"/mesh"})}),(0,s.jsx)(r.td,{children:"Client mTLS enforced at ingress; SANs on hub certs"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Cloud Hub"}),(0,s.jsx)(r.td,{children:"IdP"}),(0,s.jsx)(r.td,{children:"HTTPS 443"}),(0,s.jsx)(r.td,{children:"JWKS fetch"}),(0,s.jsx)(r.td,{children:"Outbound only; cache keys"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Cloud Hub"}),(0,s.jsx)(r.td,{children:"Redis"}),(0,s.jsx)(r.td,{children:"TCP 6379 (or TLS)"}),(0,s.jsx)(r.td,{children:"Distributed registry"}),(0,s.jsx)(r.td,{children:"Use TLS/auth per platform"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Premise Agent"}),(0,s.jsx)(r.td,{children:"Local targets"}),(0,s.jsx)(r.td,{children:"TCP 389/636/22/..."}),(0,s.jsx)(r.td,{children:"Connector backends"}),(0,s.jsx)(r.td,{children:"No payload logging; end-to-end TLS preserved"})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"proxy-patterns",children:"Proxy patterns"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Agent can honor corporate proxies with ",(0,s.jsx)(r.code,{children:"NC_TRUST_ENV=true"}),"."]}),"\n",(0,s.jsx)(r.li,{children:"Cloud Hub outbound to IdP/Redis may use platform egress proxies as required."}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"visual-overview",children:"Visual overview"}),"\n",(0,s.jsx)(r.mermaid,{value:"flowchart LR\r\n  C[Clients] --\x3e|389/636| IG[Ingress]\r\n  IG --\x3e CH1[Cloud Hub A]\r\n  IG --\x3e CH2[Cloud Hub B]\r\n  CH1 <--\x3e|443 /mesh (mTLS)| CH2\r\n  CH1 --\x3e|443 HTTPS| IDP[IdP JWKS]\r\n  CH1 --\x3e|6379| R[(Redis)]\r\n  AG[Premise Agent] --\x3e|443 WSS /tunnel| IG\r\n  AG --\x3e|TCP| TGT[On\u2011prem Targets]"})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[2673],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(96540);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},46650:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"services/bff/reference/bff-llm-pdp-enforcement","title":"BFF PDP Enforcement for AI Chat Completions","description":"ARIA AI Agent Proxied Policy Enforcement","source":"@site/docs/services/bff/reference/BFF_PDP_Enforcement.md","sourceDirName":"services/bff/reference","slug":"/services/bff/reference/bff-llm-pdp-enforcement","permalink":"/empowernow_docs/docs/services/bff/reference/bff-llm-pdp-enforcement","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/reference/BFF_PDP_Enforcement.md","tags":[{"inline":true,"label":"service:bff","permalink":"/empowernow_docs/docs/tags/service-bff"},{"inline":true,"label":"type:reference","permalink":"/empowernow_docs/docs/tags/type-reference"},{"inline":true,"label":"roles:developer","permalink":"/empowernow_docs/docs/tags/roles-developer"},{"inline":true,"label":"roles:architect","permalink":"/empowernow_docs/docs/tags/roles-architect"}],"version":"current","frontMatter":{"id":"bff-llm-pdp-enforcement","title":"BFF PDP Enforcement for AI Chat Completions","sidebar_label":"AI Chat Completions (PDP Enforcement)","tags":["service:bff","type:reference","roles:developer","roles:architect"]},"sidebar":"tutorialSidebar","previous":{"title":"BFF \u2013 FAQ","permalink":"/empowernow_docs/docs/services/bff/reference/amazing-faq"},"next":{"title":"Admin Configuration Guide","permalink":"/empowernow_docs/docs/services/bff/reference/admin-config"}}');var s=r(74848),t=r(28453);const l={id:"bff-llm-pdp-enforcement",title:"BFF PDP Enforcement for AI Chat Completions",sidebar_label:"AI Chat Completions (PDP Enforcement)",tags:["service:bff","type:reference","roles:developer","roles:architect"]},a=void 0,o={},c=[{value:"ARIA AI Agent Proxied Policy Enforcement",id:"aria-ai-agent-proxied-policy-enforcement",level:2},{value:"Overview",id:"overview",level:3},{value:"Edge routing &amp; topology",id:"edge-routing--topology",level:3},{value:"Purpose",id:"purpose",level:3},{value:"Core enforcement architecture (implemented)",id:"core-enforcement-architecture-implemented",level:3},{value:"Full architecture with optional journaling &amp; analytics",id:"full-architecture-with-optional-journaling--analytics",level:3},{value:"Non-stream and stream flows (with inline enforcement)",id:"non-stream-and-stream-flows-with-inline-enforcement",level:3},{value:"Constraints vs obligations (policy \u2192 runtime)",id:"constraints-vs-obligations-policy--runtime",level:3},{value:"Enforcement pipeline (step-by-step)",id:"enforcement-pipeline-step-by-step",level:3},{value:"Implementation anchors (code)",id:"implementation-anchors-code",level:3},{value:"Interfaces and headers",id:"interfaces-and-headers",level:3},{value:"Security posture",id:"security-posture",level:3},{value:"Configuration (runtime)",id:"configuration-runtime",level:3},{value:"Metrics to watch",id:"metrics-to-watch",level:3},{value:"Scope and roadmap",id:"scope-and-roadmap",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"aria-ai-agent-proxied-policy-enforcement",children:"ARIA AI Agent Proxied Policy Enforcement"}),"\n",(0,s.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The BFF provides a governed, OpenAI-compatible ",(0,s.jsx)(n.code,{children:"/chat/completions"})," endpoint. It authenticates users, authorizes via PDP (AuthZEN), enforces preflight rules (model allowlist, guardrails, redaction, token caps), pins egress, manages budget holds/settlements in Redis, proxies to the provider, and emits tamper-evident receipts. An optional journaling pipeline can persist masked prompts and feed sanitized analytics to ClickHouse."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"edge-routing--topology",children:"Edge routing & topology"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\r\n  subgraph Edge\r\n    Traefik["Traefik (routers)"]\r\n  end\r\n  subgraph App\r\n    BFF["BFF Service"]\r\n  end\r\n  subgraph Backends\r\n    PDP["PDP"]\r\n    CRUD["CRUDService (others)"]\r\n    Analytics["Analytics"]\r\n  end\r\n  Traefik --\x3e|"/chat/completions"| BFF\r\n  Traefik --\x3e|"/api/**"| BFF\r\n  BFF --\x3e|"/access/v1/*"| PDP\r\n  BFF --\x3e|"/api/crud/*"| CRUD\r\n  BFF --\x3e|"/api/v1/analytics/*"| Analytics'}),"\n",(0,s.jsx)(n.h3,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"What"}),": How the BFF gates and governs ",(0,s.jsx)(n.code,{children:"/chat/completions"})," using PDP (AuthZEN) constraints and obligations, then enforces preflight rules, egress, budgets, streaming caps, and emits receipts."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Who"}),": Software developers and architects; cloud and AI security architects; product and technical product marketing managers."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Status"}),": Implemented for OpenAI; Anthropic is a roadmap extension."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"core-enforcement-architecture-implemented",children:"Core enforcement architecture (implemented)"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\r\n  subgraph Client\r\n    UI["Client / Agent"]\r\n  end\r\n\r\n  subgraph Control\r\n    PDP["PDP (AuthZEN)"]\r\n    RV["Receipt Vault"]\r\n  end\r\n\r\n  subgraph DataPlane\r\n    BFF["BFF (/chat/completions)"]\r\n    OAI["OpenAI API"]\r\n  end\r\n\r\n  subgraph State\r\n    R["Redis (budgets, last-receipt)"]\r\n  end\r\n\r\n  UI --\x3e|POST /chat/completions| BFF\r\n  BFF --\x3e|Evaluate| PDP\r\n  BFF --\x3e|Proxy| OAI\r\n  BFF --\x3e|Emit| RV\r\n  BFF <--\x3e R'}),"\n",(0,s.jsx)(n.h3,{id:"full-architecture-with-optional-journaling--analytics",children:"Full architecture with optional journaling & analytics"}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\r\n  subgraph Client\r\n    UI["UI / Agents"]\r\n  end\r\n  subgraph Control\r\n    PDP["PDP (AuthZEN)"]\r\n    RV["Receipt Vault"]\r\n  end\r\n  subgraph DataPlane\r\n    BFF["BFF (/chat/completions)"]\r\n    OpenAI["OpenAI API"]\r\n  end\r\n  subgraph Stores\r\n    R["Redis (budget/receipt-last)"]\r\n    PJ["Prompt Journal (optional)"]\r\n    K["Kafka (sanitized, optional)"]\r\n    CH["ClickHouse (optional)"]\r\n  end\r\n  UI --\x3e|"POST /chat/completions"| BFF\r\n  BFF --\x3e|"evaluate"| PDP\r\n  BFF --\x3e|"call"| OpenAI\r\n  BFF --\x3e|"sign receipt"| RV\r\n  BFF <--\x3e R\r\n  BFF -. "optional journal" .-> PJ\r\n  PJ -. "sanitized events" .-> K\r\n  K -. "ingest" .-> CH'}),"\n",(0,s.jsx)(n.h3,{id:"non-stream-and-stream-flows-with-inline-enforcement",children:"Non-stream and stream flows (with inline enforcement)"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  autonumber\r\n  participant C as Client\r\n  participant B as BFF\r\n  participant P as PDP\r\n  participant R as Redis (budget)\r\n  participant O as OpenAI\r\n  participant V as ReceiptVault\r\n\r\n  C->>B: POST /chat/completions\r\n  B->>P: PDP evaluate (resource llm:openai:chat)\r\n  P--\x3e>B: Permit + constraints\r\n  B->>B: Preflight (allowlist, guards, redact, token caps)\r\n  B->>R: Hold(budget_estimate)\r\n\r\n  alt stream=false\r\n    B->>O: POST /v1/chat/completions\r\n    O--\x3e>B: JSON {choices, usage}\r\n    B->>R: Settle(actual)\r\n    B->>V: Emit receipt (Allow + usage + policy snapshot)\r\n    B--\x3e>C: JSON response\r\n  else stream=true\r\n    B->>O: POST /v1/chat/completions (stream)\r\n    O--\x3e>B: SSE deltas\r\n    B->>B: Stream guard (cap/leakage)\r\n    B--\x3e>C: SSE relay (+ early termination on policy)\r\n    B->>R: Settle(estimate)\r\n    B->>V: Emit receipt (Allow + estimate + policy snapshot)\r\n  end"}),"\n",(0,s.jsx)(n.h3,{id:"constraints-vs-obligations-policy--runtime",children:"Constraints vs obligations (policy \u2192 runtime)"}),"\n",(0,s.jsx)(n.mermaid,{value:'flowchart LR\r\n  subgraph Decision\r\n    PDP["PDP decision"] --\x3e C["Constraints"]\r\n    PDP --\x3e O["Obligations"]\r\n  end\r\n\r\n  subgraph Enforced Inline\r\n    MC["Model allow"]\r\n    PR["Prompt guardrails"]\r\n    RD["Redaction patterns"]\r\n    TK["Token caps"]\r\n    EG["Egress allow"]\r\n  end\r\n\r\n  subgraph Enforced Async\r\n    RC["Emit receipt"]\r\n  end\r\n\r\n  C --\x3e MC --\x3e PR --\x3e RD --\x3e TK --\x3e EG\r\n  O --\x3e RC'}),"\n",(0,s.jsx)(n.h3,{id:"enforcement-pipeline-step-by-step",children:"Enforcement pipeline (step-by-step)"}),"\n",(0,s.jsx)(n.mermaid,{value:'flowchart TD\r\n  A["Start"] --\x3e B{"PDP Permit?"}\r\n  B -- "No" --\x3e Z["403 Deny"]\r\n  B -- "Yes" --\x3e C["Model allowlist"]\r\n  C -- "Fail" --\x3e Z\r\n  C --\x3e D["Prompt guards (phrases, links, URL allowlist)"]\r\n  D -- "Fail" --\x3e Z\r\n  D --\x3e E["Apply redaction patterns"]\r\n  E --\x3e F["Set token caps (max_output/stream)"]\r\n  F --\x3e G{"Egress host allowed?"}\r\n  G -- "No" --\x3e Z\r\n  G -- "Yes" --\x3e H["Budget hold (Redis)"]\r\n  H -- "Fail" --\x3e Y["402 Budget insufficient"]\r\n  H -- "OK" --\x3e I{"Streaming?"}\r\n  I -- "No" --\x3e J["OpenAI call"]\r\n  J --\x3e K["Settle (actual usage)"]\r\n  K --\x3e L["Emit receipt"]\r\n  L --\x3e X["Return JSON"]\r\n  I -- "Yes" --\x3e S["OpenAI stream"]\r\n  S --\x3e T["Stream guard (cap/leakage)"]\r\n  T --\x3e U["Settle (estimate)"]\r\n  U --\x3e V["Emit receipt"]\r\n  V --\x3e W["Return SSE"]'}),"\n",(0,s.jsx)(n.h3,{id:"implementation-anchors-code",children:"Implementation anchors (code)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Endpoint, PDP evaluate, egress allow, preflight, budget, proxy, settle, receipt, streaming","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/api/v1/endpoints/llm.py"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Preflight rules (allowlist, guards, redaction, token caps)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/services/llm_enforcement.py"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Stream-time guard (leakage and caps)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/services/llm_sse.py"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Budgeting (hold/settle/release)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/services/llm_budget.py"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Receipts (non-blocking, hash-chained; Vault optional)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/services/llm_receipts.py"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["PDP policy (models, token limits, egress allow)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ServiceConfigs/pdp/config/policies/applications/aria-bff/openai-chat.yaml"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"interfaces-and-headers",children:"Interfaces and headers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Request (OpenAI-compatible): ",(0,s.jsx)(n.code,{children:"{ model, messages[], stream?, max_tokens? }"})]}),"\n",(0,s.jsxs)(n.li,{children:["Response","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Non-stream: OpenAI JSON passthrough; headers may include ",(0,s.jsx)(n.code,{children:"x-aria-decision-id"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Stream: SSE datums; early termination with warning when caps/guards trigger."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security-posture",children:"Security posture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PDP-driven, centralized policy for model selection, egress, token caps, and guardrails."}),"\n",(0,s.jsx)(n.li,{children:"Fail-secure: missing mapping or PDP errors \u2192 403. Budget insufficiency \u2192 402."}),"\n",(0,s.jsx)(n.li,{children:"No prompt content in receipts; journaling (if enabled separately) stores masked content only."}),"\n",(0,s.jsx)(n.li,{children:"Egress pinning eliminates provider endpoint drift."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"configuration-runtime",children:"Configuration (runtime)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OPENAI_BASE"})," default ",(0,s.jsx)(n.code,{children:"https://api.openai.com/v1"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"OPENAI_API_KEY"})," (supports secret pointers)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RECEIPT_VAULT_URL"})," (optional; dev fallback when unset)"]}),"\n",(0,s.jsx)(n.li,{children:"PDP client credentials from BFF settings (enterprise SDK)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metrics-to-watch",children:"Metrics to watch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"LLM_CALLS_TOTAL{mode,result}"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BFF_LLM_BUDGET_DENIED_TOTAL"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"BFF_LLM_STREAM_TRUNCATIONS_TOTAL"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"scope-and-roadmap",children:"Scope and roadmap"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Implemented: OpenAI proxy with PDP, enforcement, budgets, receipts, streaming guard."}),"\n",(0,s.jsxs)(n.li,{children:["Roadmap: Anthropic (",(0,s.jsx)(n.code,{children:"/v1/messages"}),", ",(0,s.jsx)(n.code,{children:"x-api-key"}),", ",(0,s.jsx)(n.code,{children:"anthropic-version"}),"), provider selection logic, additional constraints/obligations (consent/DLP), optional prompt journaling pipeline."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
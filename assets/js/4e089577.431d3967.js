"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8222],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(96540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},92688:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"services/bff/reference/ui-permissions","title":"Permission Gating in the UI","description":"What this covers","source":"@site/docs/services/bff/reference/ui-permissions.md","sourceDirName":"services/bff/reference","slug":"/services/bff/reference/ui-permissions","permalink":"/empowernow_docs/docs/services/bff/reference/ui-permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/reference/ui-permissions.md","tags":[],"version":"current","frontMatter":{"title":"Permission Gating in the UI"},"sidebar":"tutorialSidebar","previous":{"title":"Traefik ForwardAuth with the BFF (Verified)","permalink":"/empowernow_docs/docs/services/bff/reference/traefik-forwardauth"},"next":{"title":"Policy Decision Point (PDP) \u2013 Overview","permalink":"/empowernow_docs/docs/services/pdp/"}}');var t=r(74848),i=r(28453);const o={title:"Permission Gating in the UI"},c=void 0,a={},l=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"What this covers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How to gate pages/routes and specific components in the SPA, while the real authorization decision remains on the server (PDP via the BFF)."}),"\n",(0,t.jsxs)(n.li,{children:["Practical, copy\u2011pasteable examples using ",(0,t.jsx)(n.code,{children:"@empowernow/bff-auth-react"})," and a simple \u201ccapabilities\u201d endpoint pattern."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Key principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Do not parse tokens on the client. The BFF enforces authorization with the PDP."}),"\n",(0,t.jsx)(n.li,{children:"UI gating is a user\u2011experience optimization (hide/disable). Always keep server\u2011side authorization as the source of truth."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Route gating (pages)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// src/components/auth/AuthGuard.tsx\r\nimport { useAuth } from '@empowernow/bff-auth-react'\r\nimport { PropsWithChildren } from 'react'\r\n\r\nexport function AuthGuard({ children }: PropsWithChildren) {\r\n  const { isAuthenticated, isLoading, login } = useAuth()\r\n  if (isLoading) return null\r\n  if (!isAuthenticated) {\r\n    login() // or navigate('/login') depending on SDK\r\n    return null\r\n  }\r\n  return <>{children}</>\r\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'// src/App.tsx (React Router)\r\n<Route\r\n  path="/admin"\r\n  element={\r\n    <AuthGuard>\r\n      <AdminPage />\r\n    </AuthGuard>\r\n  }\r\n/>\n'})}),"\n",(0,t.jsx)(n.p,{children:"Component\u2011level gating (buttons/menus)"}),"\n",(0,t.jsx)(n.p,{children:"Pattern A: Capabilities endpoint (recommended)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Backend exposes a same\u2011origin endpoint like ",(0,t.jsx)(n.code,{children:"GET /api/me/capabilities?resource=crud:workflows"})," that returns allowed actions for the current user. This can be implemented in your BFF or service layer using PDP mappings."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example response"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "resource": "crud:workflows",\r\n  "actions": ["read", "create", "update"]\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example hook and usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// src/hooks/usePermission.ts\r\nimport { useEffect, useState } from 'react'\r\nimport { fetchWithAuth } from '@empowernow/bff-auth-react'\r\n\r\ntype CapabilityCache = Record<string, Set<string>>\r\nconst cache: CapabilityCache = {}\r\n\r\nexport function usePermission(resource: string, action: string) {\r\n  const [allowed, setAllowed] = useState<boolean | null>(null)\r\n\r\n  useEffect(() => {\r\n    let cancelled = false\r\n    async function load() {\r\n      if (cache[resource]) {\r\n        setAllowed(cache[resource].has(action))\r\n        return\r\n      }\r\n      try {\r\n        const res = await fetchWithAuth(`/api/me/capabilities?resource=${encodeURIComponent(resource)}`)\r\n        if (!res.ok) throw new Error(`HTTP ${res.status}`)\r\n        const data = await res.json()\r\n        const set = new Set<string>(data.actions || [])\r\n        cache[resource] = set\r\n        if (!cancelled) setAllowed(set.has(action))\r\n      } catch {\r\n        if (!cancelled) setAllowed(false)\r\n      }\r\n    }\r\n    load()\r\n    return () => { cancelled = true }\r\n  }, [resource, action])\r\n\r\n  return { allowed, isLoading: allowed === null }\r\n}\r\n\r\n// Usage in a component\r\nfunction CreateWorkflowButton() {\r\n  const { allowed, isLoading } = usePermission('crud:workflows', 'create')\r\n  if (isLoading) return null\r\n  if (!allowed) return null // or return <Button disabled>...\r\n  return <button>Create workflow</button>\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Pattern B: \u201cProbe\u201d a backend endpoint (fallback)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For actions that map 1:1 to an API route, you can issue a lightweight check (e.g., ",(0,t.jsx)(n.code,{children:"OPTIONS"}),"/",(0,t.jsx)(n.code,{children:"HEAD"})," or a dry\u2011run ",(0,t.jsx)(n.code,{children:"POST"})," if supported) and treat ",(0,t.jsx)(n.code,{children:"403"})," as \u201cnot allowed\u201d. This requires the backend to implement such probes and is less efficient than a capabilities endpoint."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Designing the capabilities endpoint (backend)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use PDP mapping (",(0,t.jsx)(n.code,{children:"pdp.yaml:endpoint_map"}),") to translate requested resource/actions into PDP decisions for the current user."]}),"\n",(0,t.jsx)(n.li,{children:"Cache results briefly for performance (e.g., 30\u201360s per resource per user)."}),"\n",(0,t.jsx)(n.li,{children:"Keep the response small and composable by frontends."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Do and don\u2019t"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Do: hide or disable controls based on capability checks; always handle server 403/401 gracefully."}),"\n",(0,t.jsx)(n.li,{children:"Don\u2019t: embed permission logic or token parsing in the client."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Related topics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Explanation \u2192 Authorization Model (PDP, Mapping, Caching)"}),"\n",(0,t.jsx)(n.li,{children:"Reference \u2192 routes.yaml Reference"}),"\n",(0,t.jsx)(n.li,{children:"How\u2011to \u2192 PDP mapping for APIs"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
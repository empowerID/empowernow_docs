"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[153],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},58305:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"source_content/design","title":"design","description":"---","source":"@site/docs/source_content/design.md","sourceDirName":"source_content","slug":"/source_content/design","permalink":"/empowernow_docs/docs/source_content/design","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/design.md","tags":[],"version":"current","frontMatter":{}}');var r=s(74848),t=s(28453);const o={},l=void 0,c={},d=[{value:"What changed since v1 (delta)",id:"what-changed-since-v1-delta",level:2},{value:"1) Repository (unchanged layout, noted deltas)",id:"1-repository-unchanged-layout-noted-deltas",level:2},{value:"2) Protocol: robust PDU framing, unknown ops, backpressure",id:"2-protocol-robust-pdu-framing-unknown-ops-backpressure",level:2},{value:"PDU reader (per-connection buffer)",id:"pdu-reader-per-connection-buffer",level:3},{value:"Unknown ops \u2192 Notice of Disconnection",id:"unknown-ops--notice-of-disconnection",level:3},{value:"3) Controls (RFC 2696) + invalid-cookie semantics",id:"3-controls-rfc-2696--invalid-cookie-semantics",level:2},{value:"4) Paging state: aggregator + deterministic order",id:"4-paging-state-aggregator--deterministic-order",level:2},{value:"5) Filter whitelist + matching rules (YAML-driven)",id:"5-filter-whitelist--matching-rules-yaml-driven",level:2},{value:"20) Real\u2011world operational requirements",id:"20-realworld-operational-requirements",level:2},{value:"Answer",id:"answer",level:3},{value:"Gaps to close (small)",id:"gaps-to-close-small",level:3},{value:"21) Deduplication and attribute merge policy",id:"21-deduplication-and-attribute-merge-policy",level:2},{value:"22) Implementation alignment (v2.1)",id:"22-implementation-alignment-v21",level:2},{value:"6) DN canonicalization",id:"6-dn-canonicalization",level:2},{value:"7) Redis single-flight (Lua), JSON only",id:"7-redis-single-flight-lua-json-only",level:2},{value:"8) Backpressure &amp; timeouts",id:"8-backpressure--timeouts",level:2},{value:"9) TLS &amp; client identity",id:"9-tls--client-identity",level:2},{value:"9.1) RootDSE and base search",id:"91-rootdse-and-base-search",level:2},{value:"10) Connectors &amp; PDP contracts (frozen)",id:"10-connectors--pdp-contracts-frozen",level:2},{value:"Connectors (per source)",id:"connectors-per-source",level:3},{value:"PDP",id:"pdp",level:3},{value:"11) Search executor (cursor paging, cookie rotation)",id:"11-search-executor-cursor-paging-cookie-rotation",level:2},{value:"12) Testing additions (must-haves)",id:"12-testing-additions-must-haves",level:2},{value:"13) Metrics/tracing (cardinality-safe)",id:"13-metricstracing-cardinality-safe",level:2},{value:"14) Example: Unsolicited notice on overflow/unknown op",id:"14-example-unsolicited-notice-on-overflowunknown-op",level:2},{value:"15) Example: YAML-driven allowlist in translator",id:"15-example-yaml-driven-allowlist-in-translator",level:2},{value:"16) Open questions (unchanged, now precise)",id:"16-open-questions-unchanged-now-precise",level:2},{value:"17) Ready-to-build checklist",id:"17-ready-to-build-checklist",level:2},{value:"1) Bind modes to support",id:"1-bind-modes-to-support",level:2},{value:"2) Attribute &amp; filter profile (keep TAK queries fast)",id:"2-attribute--filter-profile-keep-tak-queries-fast",level:2},{value:"3) TAK object mappings (VDS virtualization)",id:"3-tak-object-mappings-vds-virtualization",level:2},{value:"4) Deterministic paging for large TAK reads",id:"4-deterministic-paging-for-large-tak-reads",level:2},{value:"5) Caching profile for TAK",id:"5-caching-profile-for-tak",level:2},{value:"6) Certificate lifecycle signals (from IGA/PKI, not VDS)",id:"6-certificate-lifecycle-signals-from-igapki-not-vds",level:2},{value:"7) DN &amp; OU conventions for TAK",id:"7-dn--ou-conventions-for-tak",level:2},{value:"8) TLS and CA hygiene (interop more than code)",id:"8-tls-and-ca-hygiene-interop-more-than-code",level:2},{value:"9) Observability that helps TAK ops",id:"9-observability-that-helps-tak-ops",level:2},{value:"10) Safe defaults for TAK",id:"10-safe-defaults-for-tak",level:2},{value:"Bottom line",id:"bottom-line",level:2},{value:"Protocol &amp; Paging (locked)",id:"protocol--paging-locked",level:2},{value:"Filters &amp; Matching (locked)",id:"filters--matching-locked",level:2},{value:"Paging State &amp; Cookies (locked)",id:"paging-state--cookies-locked",level:2},{value:"Controls (locked)",id:"controls-locked",level:2},{value:"Caching (locked)",id:"caching-locked",level:2},{value:"Drop-in code patches (apply as-is)",id:"drop-in-code-patches-apply-as-is",level:2},{value:"1) Unsolicited notice (correct OID type)",id:"1-unsolicited-notice-correct-oid-type",level:3},{value:"2) Reader hardening + cleanup",id:"2-reader-hardening--cleanup",level:3},{value:"3) Controls criticality &amp; invalid cookie \u2192 53 + empty cookie",id:"3-controls-criticality--invalid-cookie--53--empty-cookie",level:3},{value:"4) Cookie HMAC over the full envelope (bind <code>kid</code>)",id:"4-cookie-hmac-over-the-full-envelope-bind-kid",level:3},{value:"Spec clarifications (document these in the design)",id:"spec-clarifications-document-these-in-the-design",level:2},{value:"Tests to add (before scaffolding)",id:"tests-to-add-before-scaffolding",level:2},{value:"Ready-to-scaffold checklist",id:"ready-to-scaffold-checklist",level:2},{value:"18) Connector extraction from CRUDService (inventory &amp; plan)",id:"18-connector-extraction-from-crudservice-inventory--plan",level:2},{value:"19) Config conventions: System Types and System Definitions",id:"19-config-conventions-system-types-and-system-definitions",level:2},{value:"19.1) CRUDService Parity Plan (factory, credentials, templating)",id:"191-crudservice-parity-plan-factory-credentials-templating",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"ldap-vds--implementation-spec-v2-incorporating-protocol--paging-fixes",children:"LDAP VDS \u2014 Implementation Spec v2 (incorporating protocol & paging fixes)"}),"\n",(0,r.jsxs)(n.p,{children:["See also: ",(0,r.jsx)(n.a,{href:"/empowernow_docs/docs/source_content/virtualization_phase2",children:"Virtualization Phase 2 \u2014 Data Shaping, Merging, and Projection"})," for merge rules, projection profiles, PDP attribute gating, and aggregator behavior."]}),"\n",(0,r.jsx)(n.h2,{id:"what-changed-since-v1-delta",children:"What changed since v1 (delta)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Framing"}),": robust per-connection BER reader using a growable buffer; handles partial/combined PDUs; catches ",(0,r.jsx)(n.code,{children:"SubstrateUnderrunError"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unknown ops"}),": reply with ",(0,r.jsx)(n.strong,{children:"Unsolicited Notice of Disconnection"})," (OID ",(0,r.jsx)(n.code,{children:"1.3.6.1.4.1.1466.20036"}),") and close; ",(0,r.jsx)(n.strong,{children:"don\u2019t"})," send a BindResponse."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RFC 2696 semantics"}),": ",(0,r.jsxs)(n.strong,{children:["bad/expired cookie \u2192 ",(0,r.jsx)(n.code,{children:"unwillingToPerform (53)"})]})," and include a ",(0,r.jsx)(n.strong,{children:"paged response control with empty cookie"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paging state"}),": cookie now carries a ",(0,r.jsx)(n.strong,{children:"stable composite cursor"})," (from the aggregator) + ",(0,r.jsx)(n.strong,{children:"global deterministic order"})," (e.g., ",(0,r.jsx)(n.code,{children:"subject"})," asc). Offset-only removed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Filter & attr allowlist"}),": ",(0,r.jsx)(n.strong,{children:"single source of truth in YAML"}),"; translator reads it (no hardcoded ",(0,r.jsx)(n.code,{children:"ALLOWED_ATTRS"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Matching rules"}),": define and implement ",(0,r.jsx)(n.strong,{children:"caseIgnore"})," behavior for ",(0,r.jsx)(n.code,{children:"uid/cn/mail"})," in equality/substring; explicit normalization rules documented."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controls"}),": verify ",(0,r.jsx)(n.code,{children:"criticality"}),"; unknown ",(0,r.jsx)(n.strong,{children:"critical"})," control \u2192 ",(0,r.jsx)(n.code,{children:"unavailableCriticalExtension (12)"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backpressure"}),": bounded async send-queue, ",(0,r.jsx)(n.code,{children:"writer.drain()"})," with timeout, and graceful close on overflow."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TLS policy"}),": ",(0,r.jsx)(n.strong,{children:"LDAPS-only in v1"})," (StartTLS off) to avoid mid-stream state switches; minimum TLS version/ciphers set. SASL/EXTERNAL clarified (SAN precedence over CN)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client IP"}),": trust boundary defined; support ",(0,r.jsx)(n.strong,{children:"PROXY protocol v2"})," (preferred) or explicit ",(0,r.jsx)(n.code,{children:"X-Forwarded-For"})," when terminating upstream."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cookie HMAC rotation"}),": cookie now carries a ",(0,r.jsx)(n.code,{children:"kid"}),"; verifier tries new+old secrets for a window."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single-flight"}),": Redis ",(0,r.jsx)(n.strong,{children:"Lua"})," lock (TTL+jitter) to collapse stampedes; losers backoff/poll cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DN normalization"}),": RFC 4514 escaping + ",(0,r.jsx)(n.strong,{children:"canonical case"})," policy for RDN attributes to prevent duplicates across case variants."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"uvloop"}),": optional; clean Windows fallback."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-repository-unchanged-layout-noted-deltas",children:"1) Repository (unchanged layout, noted deltas)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"vds/\n  server/\n    listener.py          # LDAPS only (v1), PROXY v2 optional\n    protocol.py          # PDU reader (buffered), dispatcher, backpressure\n    encoder.py           # Bind/Search encoders + Unsolicited Notice\n    controls.py          # RFC 2696 encode/decode (criticality checks)\n    errors.py            # strict LDAP result mapping\n    session.py           # tenant + subject, cert \u2192 subject mapping\n  ldap/\n    filter_ast.py\n    filter_from_asn1.py  # reads YAML allowlist\n    filter_to_query.py   # caseIgnore normalization rules\n    dn.py                # RFC 4514 escaping + canonicalization\n  dsl/\n    mapping_loader.py    # YAML (objects/filters/limits)\n    mapping_eval.py      # JSONPath + pure builtins (no templates)\n  exec/\n    search_executor.py   # cursor paging, cookie HMAC(kid), PDP allowlist\n    directory_aggregator.py # merges provider pages with deterministic order\n    group_resolver.py\n    planner.py           # (optional) selectivity hints\n  connectors/\n    base.py              # Provider interface + cursor types\n    ldap_provider.py     # RFC 2696 client, optional server-side sort\n    rest_provider.py     # httpx client with provider token paging\n    sql_provider.py      # keyset pagination (ORDER BY lower(subject), id)\n  deps/\n    redis_cache.py       # JSON, Lua single-flight\n    pdp.py\n    audit.py\n    ratelimit.py\n    breaker.py\n  utils/\n    paging_cookie.py     # HMAC(kid) sign/verify (dual keys)\n    ids.py\n    fips.py\n  observability/\n    metrics.py           # low-card labels\n    tracing.py\ntests/\n  # add: paging-invalid-cookie, unsolicited-disconnect, proxy-v2, caseIgnore equality\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-protocol-robust-pdu-framing-unknown-ops-backpressure",children:"2) Protocol: robust PDU framing, unknown ops, backpressure"}),"\n",(0,r.jsx)(n.h3,{id:"pdu-reader-per-connection-buffer",children:"PDU reader (per-connection buffer)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# server/protocol.py (excerpt)\nfrom pyasn1.codec.ber import decoder, encoder\nfrom pyasn1.error import SubstrateUnderrunError\nfrom pyasn1_modules import rfc4511\nfrom .encoder import unsolicited_notice\n\nclass LDAPConnection:\n    def __init__(...):\n        self._buf = bytearray()\n        self._send_q = asyncio.Queue(maxsize=self.deps.cfg.server.max_send_queue_items)  # backpressure\n        self._sender_task = asyncio.create_task(self._sender())\n\n    async def _read_message(self):\n        while True:\n            if self._buf:\n                try:\n                    msg, rest = decoder.decode(bytes(self._buf), asn1Spec=rfc4511.LDAPMessage())\n                    self._buf = bytearray(rest)\n                    return msg\n                except SubstrateUnderrunError:\n                    pass\n            chunk = await self.r.read(self.deps.cfg.server.read_chunk)\n            if not chunk: return None\n            self._buf.extend(chunk)\n\n    async def _sender(self):\n        try:\n            while True:\n                data = await self._send_q.get()\n                self.w.write(data)\n                await asyncio.wait_for(self.w.drain(), timeout=self.deps.cfg.server.drain_timeout_s)\n        except asyncio.TimeoutError:\n            await self._send(unsolicited_notice(2, "protocolError: drain timeout"))\n            self.w.close()\n        except (asyncio.CancelledError, ConnectionError):\n            pass\n\n    async def _send(self, ldap_msg):\n        data = encoder.encode(ldap_msg)\n        try:\n            self._send_q.put_nowait(data)\n        except asyncio.QueueFull:\n            # On overflow, bypass queue to avoid recursion, write notice directly\n            notice = encoder.encode(unsolicited_notice(2, "protocolError: send queue overflow"))\n            self.w.write(notice)\n            with contextlib.suppress(Exception):\n                await asyncio.wait_for(self.w.drain(), timeout=self.deps.cfg.server.drain_timeout_s)\n            self.w.close()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"unknown-ops--notice-of-disconnection",children:"Unknown ops \u2192 Notice of Disconnection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# server/encoder.py (new util)\nfrom pyasn1_modules import rfc4511\n\nNOTICE_OID = '1.3.6.1.4.1.1466.20036'\n\ndef unsolicited_notice(result_code: int, diag: str) -> rfc4511.LDAPMessage:\n    msg = rfc4511.LDAPMessage()\n    msg['messageID'] = 0  # unsolicited\n    ext = rfc4511.ExtendedResponse()\n    ext['resultCode'] = result_code\n    ext['diagnosticMessage'] = diag\n    ext['responseName'] = rfc4511.LDAPOID(NOTICE_OID)\n    msg['protocolOp'] = rfc4511.LDAPMessage_protocolOp().setComponentByName('extendedResp', ext)\n    return msg\n"})}),"\n",(0,r.jsx)(n.p,{children:"Usage on unknown op:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'await self._send(unsolicited_notice(2, "protocolError: unsupported operation"))\nself.w.close()\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-controls-rfc-2696--invalid-cookie-semantics",children:"3) Controls (RFC 2696) + invalid-cookie semantics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Parse request controls, verify ",(0,r.jsx)(n.code,{children:"criticality"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.strong,{children:"unknown critical"})," control \u2192 ",(0,r.jsx)(n.code,{children:"unavailableCriticalExtension (12)"})," response."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Invalid/expired cookie \u2192 ",(0,r.jsx)(n.code,{children:"unwillingToPerform (53)"})]})," and include ",(0,r.jsx)(n.strong,{children:"paged response control with empty cookie"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# server/controls.py (excerpt)\nfrom pyasn1.codec.ber import decoder\nfrom pyasn1_modules.rfc2696 import PagedResultsRequestValue, PagedResultsResponseValue\ndef parse_paged_req(controls):\n    size, cookie, critical = None, None, False\n    if not controls: return size, cookie, critical\n    for ctl in controls:\n        if str(ctl['controlType']) == PAGED_OID:\n            critical = bool(ctl.getComponentByName('criticality'))\n            val = bytes(ctl['controlValue'])\n            seq, _ = decoder.decode(val, asn1Spec=PagedResultsRequestValue())\n            size = int(seq['size']); cookie = bytes(seq['cookie']) or None\n        else:\n            if bool(ctl.getComponentByName('criticality')):\n                raise LdapError(12, \"unavailableCriticalExtension\")\n    return size, cookie, critical\n### AbandonRequest (RFC 4511 \xa74.11)\n\n* Track `messageID \u2192 task` for in-flight ops. On Abandon, cancel the task and stop emitting entries. No response is sent for Abandon.\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"On invalid cookie:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'if cookie and not state:\n    done = search_done(mid, 53, "invalid paging cookie", controls=[make_paged_resp(None)])\n    await self._send(done); return\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-paging-state-aggregator--deterministic-order",children:"4) Paging state: aggregator + deterministic order"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Aggregator"})," merges N provider streams with a global order:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Total ordering key"}),": ",(0,r.jsx)(n.code,{children:"subject.casefold()"})," asc, tiebreak on stable per-source id"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Composite cursor"}),": ",(0,r.jsx)(n.code,{children:"{ subject_cf, source_offsets: { <sourceId>: { cookie|token|last_key } } }"})]}),"\n",(0,r.jsxs)(n.li,{children:["Connector contracts:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LDAP: RFC 2696 cookie (or keyset fallback)"}),"\n",(0,r.jsx)(n.li,{children:"REST: provider next-page token"}),"\n",(0,r.jsxs)(n.li,{children:["SQL/ODBC: keyset (",(0,r.jsx)(n.code,{children:"last subject_cf"}),", ",(0,r.jsx)(n.code,{children:"last id"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cookie contents"})," (signed, rotated):\n",(0,r.jsx)(n.code,{children:'{"kid":"2025-08","tenant":"t1","q":"<qhash>","cur":<composite_cursor>,"v":<mapping_version>}'})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# utils/paging_cookie.py (rotation)\nKMS = KeyRing(primary=K_NEW, previous=K_OLD)\n\ndef sign_cookie(state):\n    envelope = {"kid": KMS.primary.id, "state": state}\n    body = json.dumps(envelope, separators=(\',\',\':\'), sort_keys=True).encode()\n    mac = hmac.new(KMS.primary.key, body, hashlib.sha256).digest()\n    return base64.urlsafe_b64encode(mac + body)\n\ndef verify_cookie(cookie):\n    try:\n        blob = base64.urlsafe_b64decode(cookie)\n        mac, body = blob[:32], blob[32:]\n        env = json.loads(body)\n        kid = env.get("kid"); state = env.get("state")\n        for key in KMS.keys_for(kid):\n            if hmac.compare_digest(mac, hmac.new(key, body, hashlib.sha256).digest()):\n                return state\n        return None\n    except Exception:\n        return None\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-filter-whitelist--matching-rules-yaml-driven",children:"5) Filter whitelist + matching rules (YAML-driven)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"YAML"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'filters:\n  allow_attrs: ["uid","cn","mail","memberOf","objectClass"]\n  matching:\n    uid:  caseIgnore\n    cn:   caseIgnore\n    mail: caseIgnore  # (documented: full lowercasing)\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Translator applies normalization:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# ldap/filter_to_query.py (excerpt)\ndef norm(attr, value):\n    match = cfg.matching.get(attr, "caseExact")\n    return value.casefold() if match == "caseIgnore" else value\n\ndef ast_to_query(node, base_dn):\n    if isinstance(node, Eq):\n        return {"eq": {node.attr: norm(node.attr, node.value)}}\n    if isinstance(node, Substr):\n        pfx = node.prefix.casefold() if node.prefix else None\n        anys = [s.casefold() for s in (node.any or [])]\n        sfx = node.suffix.casefold() if node.suffix else None\n        return {"substr": {"attr": node.attr, "initial": pfx, "any": anys, "final": sfx}}\n    ...\n'})}),"\n",(0,r.jsx)(n.p,{children:"Providers honor these semantics (translator enforces allowlist and normalization; per-provider translators map to native queries)."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"20-realworld-operational-requirements",children:"20) Real\u2011world operational requirements"}),"\n",(0,r.jsx)(n.h3,{id:"answer",children:"Answer"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Hot load/cache: Yes."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"L1 process cache + L2 Redis (JSON-only) with single-flight and negative caching are in the design."}),"\n",(0,r.jsx)(n.li,{children:"We can pre-warm hot keys at startup and add \u201cstale-while-revalidate\u201d for read paths."}),"\n",(0,r.jsxs)(n.li,{children:["Config hot-reload: add a file-watcher (or SIGHUP) to reload ",(0,r.jsx)(n.code,{children:"connectors.yaml"}),", System Types/Definitions, ",(0,r.jsx)(n.code,{children:"mapping.yaml"}),", and ",(0,r.jsx)(n.code,{children:"filters.yaml"})," without restart."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Backend outage (LDAP/AD down):"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reads: serve from Redis for the TTL window; aggregator continues with any remaining healthy connectors. Return consistent results using the composite cursor; log connector unavailability."}),"\n",(0,r.jsx)(n.li,{children:"Binds (password verification): do not cache credentials. We should fail-safe (unavailable/busy) rather than accept cached binds. If you need continuity, route bind verification to another authoritative connector (e.g., secondary AD) via connectors config; otherwise, do not allow \u201coffline\u201d binds."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Schema transform/unification: Yes."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use CRUD-style System Types/Definitions for connector actions; VDS ",(0,r.jsx)(n.code,{children:"connectors.yaml"})," wires directories to systems."]}),"\n",(0,r.jsxs)(n.li,{children:["Aggregator merges rows across sources using a canonical key (",(0,r.jsx)(n.code,{children:"subject.casefold"}),", stable id)."]}),"\n",(0,r.jsxs)(n.li,{children:["Mapping layer (",(0,r.jsx)(n.code,{children:"mapping.yaml"}),") renders LDAP entries (DN, objectClass, attribute projections)."]}),"\n",(0,r.jsxs)(n.li,{children:["If you need cross-source attribute precedence, add merge rules (either a ",(0,r.jsx)(n.code,{children:"unify.yaml"})," or a ",(0,r.jsx)(n.code,{children:"merge_rules"})," section in ",(0,r.jsx)(n.code,{children:"connectors.yaml"}),") to coalesce attributes before mapping."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"gaps-to-close-small",children:"Gaps to close (small)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add hot-reload watcher for config files."}),"\n",(0,r.jsx)(n.li,{children:"Implement \u201cstale-while-revalidate\u201d and explicit \u201cstale OK\u201d flags per directory/source."}),"\n",(0,r.jsxs)(n.li,{children:["Add optional ",(0,r.jsx)(n.code,{children:"merge_rules"})," config (source precedence, coalesce lists) if you need richer unification beyond mapping."]}),"\n",(0,r.jsxs)(n.li,{children:["For bind continuity, document an explicit active/standby source list in ",(0,r.jsx)(n.code,{children:"connectors.yaml"})," (no offline cache for credentials)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Terminology"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"We use \u201cConnectors\u201d in VDS to align with CRUD Service terminology (System Types/Definitions). The \u201cDirectory Aggregator\u201d composes multiple connectors per directory to provide deterministic paging and a composite cursor."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"21-deduplication-and-attribute-merge-policy",children:"21) Deduplication and attribute merge policy"}),"\n",(0,r.jsx)(n.p,{children:"Recommended default"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Deduplicate by logical subject (subject.casefold). Emit one LDAP entry per subject per directory."}),"\n",(0,r.jsx)(n.li,{children:"Merge attributes deterministically using a precedence list of systems."}),"\n",(0,r.jsx)(n.li,{children:"Scalar attributes: pick the first present value following the precedence order."}),"\n",(0,r.jsx)(n.li,{children:"Multi-value attributes (lists): merge unique while preserving a stable order (by precedence, then lexicographic/case-insensitive as needed)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Design notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ordering key for paging remains ",(0,r.jsx)(n.code,{children:"(subject.casefold, stable id)"})," for internal merge/scan; dedup is applied before projection."]}),"\n",(0,r.jsx)(n.li,{children:"Keep merges deterministic: no \u201clast writer wins\u201d based on wall time; use explicit precedence."}),"\n",(0,r.jsx)(n.li,{children:"Expose metrics: count of merged attributes, source contribution, and dedup rate per page."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example (connectors.yaml)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"directories:\n  person:\n    sources:\n      - system: addomain_ad\n        object_type: user\n        action: search_users\n        key_fields: {subject: sAMAccountName, id: objectGUID}\n      - system: auth0_eid\n        object_type: users\n        action: list\n        key_fields: {subject: email, id: user_id}\n    merge_rules:\n      precedence: [addomain_ad, auth0_eid]\n      attributes:\n        mail:\n          pick: first_present\n          sources: [addomain_ad.mail, auth0_eid.email]\n        givenName:\n          pick: first_present\n          sources: [addomain_ad.givenName, auth0_eid.given_name]\n        sn:\n          pick: first_present\n          sources: [addomain_ad.sn, auth0_eid.family_name]\n        memberOf:\n          merge_unique:\n            sources: [addomain_ad.memberOf, auth0_eid.groups]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Implementation sketch"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Aggregator groups rows by ",(0,r.jsx)(n.code,{children:"subject_cf"}),"; for each group, applies ",(0,r.jsx)(n.code,{children:"merge_rules"})," to build a canonical subject record; mapping then renders DN/objectClasses/attributes."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"merge_rules"})," is omitted, default precedence is the ",(0,r.jsx)(n.code,{children:"sources"})," order; scalars use first_present, lists merge_unique."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"22-implementation-alignment-v21",children:"22) Implementation alignment (v2.1)"}),"\n",(0,r.jsx)(n.p,{children:"This section reflects what is now implemented in code and tested."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cookie envelope (executor)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Envelope structure: ",(0,r.jsx)(n.code,{children:'{ "kid": <key-id>, "state": { "cur": <composite-cursor>, "q": <filter-hash?>, "v": <mapping-version?> } }'})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"q"})," is a SHA1 of the normalized backend-agnostic filter JSON; ",(0,r.jsx)(n.code,{children:"v"})," is a small hash of the loaded mapping config (objects/filters/limits). Both are optional."]}),"\n",(0,r.jsxs)(n.li,{children:["Cookies are HMAC-SHA256 signed, key-rotated via ",(0,r.jsx)(n.code,{children:"kid"}),", and size-enforced by ",(0,r.jsx)(n.code,{children:"max_cookie_bytes"})," (oversize \u2192 53 with empty paged cookie control at the protocol boundary)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Observability (metrics/tracing)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Counters/histograms implemented:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ldap_search_total{result}"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ldap_pages_total"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ldap_search_latency_seconds"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"provider_calls_total{outcome}"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"provider_latency_seconds"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"aggregator_latency_seconds"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Tracing shim provides ",(0,r.jsx)(n.code,{children:"span(name, **attrs)"}),"; aggregator and providers wrap calls with spans. Aggregator spans also emit timing to the aggregator latency histogram."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Mapping DSL (JSONPath + built-ins)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Built-ins implemented: ",(0,r.jsx)(n.code,{children:"concat"}),", ",(0,r.jsx)(n.code,{children:"groupsOf(subject)"}),", ",(0,r.jsx)(n.code,{children:"membersAsDNs(groupId)"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"objects.<type>.attributes"})," is present in the mapping YAML, the evaluator uses it as the source of truth (JSONPath-driven); otherwise a sensible default mapping is used for ",(0,r.jsx)(n.code,{children:"person"})," (uid, cn, mail, objectClass, dn)."]}),"\n",(0,r.jsx)(n.li,{children:"Group/member resolvers are injected and safe by default; failures return empty lists."}),"\n",(0,r.jsx)(n.li,{children:"DN policy: attribute type names normalized; RDN values preserve original case in output; equality should use the DN normalizer."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Aggregator composite cursor"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Composite cursor shape remains: ",(0,r.jsx)(n.code,{children:"{ subject_cf, source_offsets: { <system>: <cursor> } }"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Start-after semantics are applied using ",(0,r.jsx)(n.code,{children:"subject_cf"})," to avoid duplicates across pages."]}),"\n",(0,r.jsxs)(n.li,{children:['When a fetched page contains additional rows for a system that were not yet emitted (e.g., multiple entries for the same subject or churn between pages), the aggregator records a per-system "last consumed" key ',(0,r.jsx)(n.code,{children:"{subject_cf, id}"})," as the next offset instead of blindly advancing to the provider's next token. This avoids duplicates and holes during churn."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Tests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Property-based tests (optional) cover caseIgnore equality/substring building."}),"\n",(0,r.jsxs)(n.li,{children:["Hot-reload watcher (",(0,r.jsx)(n.code,{children:"ConfigReloader"}),") tested for change detection."]}),"\n",(0,r.jsx)(n.li,{children:"Composite cursor round-trip tested for no duplicates on churn."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6-dn-canonicalization",children:"6) DN canonicalization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RFC 4514"})," escaping (unchanged)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Do not lowercase DN values"}),". Normalize ",(0,r.jsx)(n.strong,{children:"attribute type names"})," internally for matching/order, but ",(0,r.jsx)(n.strong,{children:"preserve the original case of RDN values"})," in returned DNs and attributes. Use an internal normalized key (e.g., casefold+escape) for dedup/sort only."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-redis-single-flight-lua-json-only",children:"7) Redis single-flight (Lua), JSON only"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# deps/redis_cache.py (excerpt)\n# Acquire lock (SETNX), TTL ms in ARGV[2], token in ARGV[1]; returns 1 if owner\nSF_ACQUIRE = """\nif redis.call(\'SETNX\', KEYS[1], ARGV[1]) == 1 then\n  redis.call(\'PEXPIRE\', KEYS[1], ARGV[2])\n  return 1\nelse\n  return 0\nend\n"""\n\nasync def single_flight(self, key, ttl_s, fn):\n    lock = f"{key}:lock"; token = str(uuid4())\n    got = await self.r.eval(SF_ACQUIRE, 1, lock, token, int(ttl_s*1000))\n    if got == 1:\n        try:\n            val = await fn()\n            await self.set_json(key, val, ttl=self.cfg.default_ttl)\n            return val\n        finally:\n            # release only if we own it\n            await self.r.eval("if redis.call(\'GET\', KEYS[1])==ARGV[1] then return redis.call(\'DEL\', KEYS[1]) else return 0 end", 1, lock, token)\n    # loser: backoff+jitter and poll cache\n    for _ in range(self.cfg.sf_max_wait_iters):\n        await asyncio.sleep(random.uniform(0.01, 0.05))\n        val = await self.get_json(key)\n        if val is not None: return val\n    # fallback: run anyway\n    return await fn()\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-backpressure--timeouts",children:"8) Backpressure & timeouts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Send queue"})," capped (",(0,r.jsx)(n.code,{children:"max_send_queue_items"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"drain()"})," ",(0,r.jsx)(n.strong,{children:"timeout"}),"; on timeout \u2192 send unsolicited notice, close."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Per request"})," time budgets (search/bind) \u2192 cancel work if over budget and send ",(0,r.jsx)(n.code,{children:"timeLimitExceeded (3)"})," or ",(0,r.jsx)(n.code,{children:"busy (51)"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-tls--client-identity",children:"9) TLS & client identity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"LDAPS-only"})," for v1; StartTLS disabled (can be toggled later)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["TLS: ",(0,r.jsx)(n.code,{children:"minimum_version=TLS1.2"}),", FIPS ciphers if required."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["SASL/EXTERNAL: map ",(0,r.jsx)(n.strong,{children:"SAN:otherName/UPN \u2192 rfc822Name \u2192 CN"})," (in that order). Reject subject ambiguity."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Client IP"})," extraction:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If listener enabled ",(0,r.jsx)(n.code,{children:"proxy_protocol=True"}),", parse ",(0,r.jsx)(n.strong,{children:"PROXY v2"})," TLVs for the original src IP."]}),"\n",(0,r.jsxs)(n.li,{children:["Else, if behind L7 and you trust it, read ",(0,r.jsx)(n.code,{children:"X-Forwarded-For"})," ",(0,r.jsx)(n.strong,{children:"only if"})," mTLS terminates there (documented trust boundary)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For UPN extraction (",(0,r.jsx)(n.code,{children:"otherName/UPN"}),"), use ",(0,r.jsx)(n.code,{children:"cryptography"})," with ",(0,r.jsx)(n.code,{children:"getpeercert(binary_form=True)"}),"; stdlib ",(0,r.jsx)(n.code,{children:"ssl"})," dicts may omit UPN."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"91-rootdse-and-base-search",children:"9.1) RootDSE and base search"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.code,{children:'base=""'}),", ",(0,r.jsx)(n.code,{children:"scope=base"})," returning at minimum:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'supportedLDAPVersion: ["3"]'})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'supportedControl: ["1.2.840.113556.1.4.319"]'})," (RFC 2696)"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'namingContexts: [ "ou=people,dc=\u2026", "ou=groups,dc=\u2026" ]'})}),"\n",(0,r.jsxs)(n.li,{children:["Optional: ",(0,r.jsx)(n.code,{children:"vendorName"}),", ",(0,r.jsx)(n.code,{children:"vendorVersion"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"10-connectors--pdp-contracts-frozen",children:"10) Connectors & PDP contracts (frozen)"}),"\n",(0,r.jsx)(n.h3,{id:"connectors-per-source",children:"Connectors (per source)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LDAP connector: RFC 2696 paging, optional server-side sort; returns rows + cookie"}),"\n",(0,r.jsx)(n.li,{children:"REST connector: provider/API next token paging; returns rows + token"}),"\n",(0,r.jsxs)(n.li,{children:["SQL/ODBC connector: keyset paging (",(0,r.jsx)(n.code,{children:"ORDER BY lower(subject), id"}),"); returns rows + last-key"]}),"\n",(0,r.jsxs)(n.li,{children:["All connectors must honor normalized filter inputs (caseIgnore) and produce deterministic ordering keys: ",(0,r.jsx)(n.code,{children:"(subject.casefold, id)"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"pdp",children:"PDP"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /v1/ldap/bind"})," \u2192 ",(0,r.jsx)(n.code,{children:'{"allow":bool,"obligations":{...}}'})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"POST /v1/ldap/search"})," \u2192 ",(0,r.jsx)(n.code,{children:'{"allow":bool,"allowed_attrs":["cn","mail",...],"obligations":{"max_size":1000,"redact":["..."]}}'})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default deny"}),"; breaker \u2192 treat as ",(0,r.jsx)(n.strong,{children:"deny"})," (fail-closed)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"11-search-executor-cursor-paging-cookie-rotation",children:"11) Search executor (cursor paging, cookie rotation)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# exec/search_executor.py (excerpt)\nstate = verify_cookie(cookie) if cookie else {"cur": None}\nif cookie and not state:\n    raise LdapError(53, "invalid paging cookie")\n\nrows, next_cur = await self.aggregator.search(\n    base_dn=base_dn,\n    scope=scope,\n    filter_ast=normalized_ast,\n    page_size=page_size,\n    cursor=state.get("cur")\n)\n\nentries = []\nfor subj in rows:\n    dn = self.map_engine.user_dn(base_dn, rdn_attr, subj["subject"])\n    attrs = self._project(self.map_engine.map_person(subj, person_cfg), req_attrs)\n    if pdp_gate:\n        allowed = await self.pdp.allowed_attributes(subj["subject"], set(req_attrs))\n        attrs = {k: v for k, v in attrs.items() if k == "dn" or k in allowed}\n    entries.append(attrs | {"dn": dn})\n\nnext_cookie = sign_cookie({"cur": next_cur}) if next_cur else None\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"12-testing-additions-must-haves",children:"12) Testing additions (must-haves)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Framing"}),": multiple PDUs in one TCP packet; fragmented BER; random chunking."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controls"}),": invalid cookie \u2192 53 + empty cookie control; unknown critical control \u2192 12."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Filters"}),": property-based tests (Hypothesis) for caseIgnore equality/substring; escaped chars."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paging"}),": churn (subject insert/delete mid-page) still yields no duplicates/holes; cursor monotonic."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unsolicited notice"}),": unknown op triggers OID and close."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backpressure"}),": flood client (slow consumer) triggers send-queue overflow path."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Proxy v2"}),": parse TLVs; fall back safely."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windows"}),": run tests without uvloop."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DN normalization parity"}),": ",(0,r.jsx)(n.code,{children:"member"})," values generated by mapping compare equal to ",(0,r.jsx)(n.code,{children:"memberOf"})," via the DN normalizer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RootDSE"}),": ",(0,r.jsx)(n.code,{children:'base=""'}),", ",(0,r.jsx)(n.code,{children:"scope=base"})," returns version and controls."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Abandon"}),": slow search then Abandon cancels by messageID; no DoneResponse for that op."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cookie size"}),": composite cursor stays \u2264 configured ",(0,r.jsx)(n.code,{children:"max_cookie_bytes"})," or yields ",(0,r.jsx)(n.code,{children:"53"})," + empty cookie."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Filter DoS"}),": AST depth/size caps, wildcard limits."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"13-metricstracing-cardinality-safe",children:"13) Metrics/tracing (cardinality-safe)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Counters:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ldap_bind_total{result}"})," (map to small set: success, invalidCreds, insufficient, unavailable, other)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ldap_search_total{result}"})," (success, unwilling, insufficient, unavailable, timeLimit, other)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ldap_rate_limit_hits_total"}),", ",(0,r.jsx)(n.code,{children:"ldap_lockouts_total"}),", ",(0,r.jsx)(n.code,{children:"ldap_pages_total"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Histograms: ",(0,r.jsx)(n.code,{children:"ldap_bind_latency_seconds"}),", ",(0,r.jsx)(n.code,{children:"ldap_search_latency_seconds"}),", ",(0,r.jsx)(n.code,{children:"aggregator_latency_seconds"}),", ",(0,r.jsx)(n.code,{children:"provider_latency_seconds"}),", ",(0,r.jsx)(n.code,{children:"pdp_latency_seconds"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Gauges: ",(0,r.jsx)(n.code,{children:"ldap_connections_active"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Tracing attrs: ",(0,r.jsx)(n.code,{children:"tenant"}),", ",(0,r.jsx)(n.code,{children:"message_id"}),", ",(0,r.jsx)(n.code,{children:"filter_hash"}),", ",(0,r.jsx)(n.code,{children:"page_size"}),", ",(0,r.jsx)(n.code,{children:"cursor_present"}),", ",(0,r.jsx)(n.strong,{children:"no raw DNs/subjects"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"14-example-unsolicited-notice-on-overflowunknown-op",children:"14) Example: Unsolicited notice on overflow/unknown op"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# server/protocol.py (excerpt)\nfrom .encoder import unsolicited_notice\n\nasync def _handle_unknown(self, msg_id: int, name: str):\n    await self._send(unsolicited_notice(2, f"protocolError: unsupported {name}"))\n    self.w.close()\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"15-example-yaml-driven-allowlist-in-translator",children:"15) Example: YAML-driven allowlist in translator"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# ldap/filter_from_asn1.py (excerpt)\nclass FilterTranslator:\n    def __init__(self, cfg):\n        self.allowed = set(cfg.filters.allow_attrs)\n        self.matching = cfg.filters.matching or {}\n\n    def _guard(self, attr):\n        if attr not in self.allowed:\n        raise LdapError(53, f"attribute {attr} not allowed")\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"16-open-questions-unchanged-now-precise",children:"16) Open questions (unchanged, now precise)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["StartTLS: still out for v1? (Recommend ",(0,r.jsx)(n.strong,{children:"yes"}),".)"]}),"\n",(0,r.jsxs)(n.li,{children:["Membership guarantees stable ",(0,r.jsx)(n.strong,{children:"cursor"})," across concurrent writes? If not, we may need snapshot/isolation hints."]}),"\n",(0,r.jsx)(n.li,{children:"PDP allow-list granularity: per-attr only, or per-attr+value patterns (e.g., domains)? (v1: per-attr.)"}),"\n",(0,r.jsxs)(n.li,{children:["Any attributes needing locale-aware matching beyond ",(0,r.jsx)(n.code,{children:"caseIgnore"}),"? (Default: no.)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"17-ready-to-build-checklist",children:"17) Ready-to-build checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Listener (LDAPS, PROXY v2, TLS policy) + Protocol (framing/backpressure)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Controls (RFC 2696) + invalid-cookie path."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Filter translator wired to YAML allowlist + matching rules."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Search executor (cursor paging, cookie rotation, PDP allowlist)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Mapping DSL (compiled JSONPath, pure builtins)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Redis cache (JSON, Lua single-flight, negative cache)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Group resolver (transitive, cached)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Rate limit/lockout + CB wrappers."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Observability + audit."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests: framing/controls/paging/fuzz/perf."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["If you want, I can spit out the ",(0,r.jsx)(n.strong,{children:"scaffold files + basic tests"})," next so the team can ",(0,r.jsx)(n.code,{children:"poetry run pytest"})," and iterate on membership/PDP stubs immediately."]}),"\n",(0,r.jsx)(n.p,{children:"Short answer:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Replace it."})," Make the v2 spec the new source of truth and add a short \u201cdelta/migration\u201d appendix at the end so readers coming from v1 can see what changed (paging semantics, unsolicited disconnect, YAML-driven allowlist, etc.)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Yes, the TAK/IGA info nudges the VDS"}),"\u2014not the core protocol\u2014but the mapping, bind, and caching profiles should be tailored for TAK. See the concrete tweaks below; I\u2019d add them as an ",(0,r.jsx)(n.strong,{children:"Appendix: \u201cTAK Profile\u201d"})," in the design."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"what-to-do-with-the-docs",children:"What to do with the docs"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Promote v2 to the main design."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add two appendices:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Appendix A \u2013 Delta from v1"})," (one page of bullets so no one has to diff):\nframing fix, bad cookie \u2192 53 + empty cookie, YAML allowlist, caseIgnore matching, HMAC ",(0,r.jsx)(n.code,{children:"kid"}),", unsolicited disconnect, LDAPS-only v1, backpressure, Redis single-flight."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Appendix B \u2013 TAK Profile"})," (below)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"appendix-b--tak-profile-what-changes-for-our-ldap-vds",children:"Appendix B \u2014 TAK Profile (what changes for our LDAP VDS)"}),"\n",(0,r.jsxs)(n.p,{children:["These don\u2019t alter the core engine; they\u2019re ",(0,r.jsx)(n.strong,{children:"config + integration"})," choices that make TAK happy and let your IGA/PKI drive certs and groups."]}),"\n",(0,r.jsx)(n.h2,{id:"1-bind-modes-to-support",children:"1) Bind modes to support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"SASL/EXTERNAL (client cert)"}),": keep it first-class."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Identity extraction order: ",(0,r.jsx)(n.strong,{children:"SAN otherName/UPN \u2192 SAN rfc822Name \u2192 CN"})," (reject ambiguity)."]}),"\n",(0,r.jsxs)(n.li,{children:["Map to canonical ",(0,r.jsx)(n.code,{children:"subject"})," via membership; audit cert FP/issuer."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Simple bind"}),": still supported, but rate-limited/lockout; most TAK installs will prefer client-cert."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"No code changes to the engine\u2014just ensure the SASL/EXTERNAL path is fully wired and audited."})}),"\n",(0,r.jsx)(n.h2,{id:"2-attribute--filter-profile-keep-tak-queries-fast",children:"2) Attribute & filter profile (keep TAK queries fast)"}),"\n",(0,r.jsx)(n.p,{children:"Use a TAK-friendly allowlist and matching rules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# config/schema.yaml (excerpt)\nfilters:\n  allow_attrs: ["uid","sAMAccountName","cn","mail","memberOf","objectClass"]\n  matching:\n    uid: caseIgnore\n    sAMAccountName: caseIgnore\n    cn: caseIgnore\n    mail: caseIgnore\n\nlimits:\n  sizeLimit: 1000\n  timeLimitMs: 3000\n  defaultPageSize: 500\n'})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["TAK commonly looks up by ",(0,r.jsx)(n.code,{children:"uid"}),"/",(0,r.jsx)(n.code,{children:"sAMAccountName"})," and reads ",(0,r.jsx)(n.code,{children:"memberOf"}),". Keep those indexed in your membership service and fast-path them in ",(0,r.jsx)(n.code,{children:"ast_to_query"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Stick to ",(0,r.jsx)(n.code,{children:"Eq"}),", ",(0,r.jsx)(n.code,{children:"Present"}),", and prefix ",(0,r.jsx)(n.code,{children:"Substr"})," for performance."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-tak-object-mappings-vds-virtualization",children:"3) TAK object mappings (VDS virtualization)"}),"\n",(0,r.jsx)(n.p,{children:"Give TAK a flat, cached view of people and groups. Example DSL:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'objects:\n  person:\n    base_dn: "ou=people,dc=example,dc=com"\n    objectClasses: ["inetOrgPerson","organizationalPerson","person","top"]\n    rdn: "uid"\n    attributes:\n      uid: "$.subject"                 # canonical username\n      sAMAccountName: "$.windows.sam"  # if present; else omit\n      cn: { func: "concat", args: ["$.profile.given_name"," ", "$.profile.family_name"] }\n      givenName: "$.profile.given_name"\n      sn: "$.profile.family_name"\n      mail: ["$.emails.primary","$.emails.work"]\n      # map IGA roles/teams to TAK groups:\n      memberOf: { func: "groupsOf", args: ["$.subject"] }\n\n  group:\n    base_dn: "ou=groups,dc=example,dc=com"\n    objectClasses: ["groupOfNames","top"]\n    rdn: "cn"\n    attributes:\n      cn: "$.name"\n      description: "$.description"\n      member: { func: "membersAsDNs", args: ["$.id"] }\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This uses the same DSL from v2: JSONPath + built-ins, no templates."})}),"\n",(0,r.jsx)(n.h2,{id:"4-deterministic-paging-for-large-tak-reads",children:"4) Deterministic paging for large TAK reads"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Keep the v2 ",(0,r.jsx)(n.strong,{children:"cursor-based paging"})," and ",(0,r.jsx)(n.strong,{children:"subject_asc"})," total ordering."]}),"\n",(0,r.jsxs)(n.li,{children:["Clients like TAK are fine with RFC 2696; our ",(0,r.jsx)(n.strong,{children:"stateless HMAC cookie"})," w/ ",(0,r.jsx)(n.code,{children:"kid"})," rotation is exactly what we want."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-caching-profile-for-tak",children:"5) Caching profile for TAK"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"L1 60s"}),", ",(0,r.jsx)(n.strong,{children:"L2 Redis 5\u201310 min"})," for per-subject attribute blobs (",(0,r.jsx)(n.code,{children:"attrs:{subject}"}),") and ",(0,r.jsx)(n.strong,{children:"1\u20132 min"})," for ",(0,r.jsx)(n.code,{children:"groups:{subject}"})," (group churn is higher)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Enable ",(0,r.jsx)(n.strong,{children:"negative cache"})," for missing users/groups (60s) to blunt brute-force probes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Keep ",(0,r.jsx)(n.strong,{children:"CDC-driven invalidation"})," (IGA/HR/PKI events):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["user change \u2192 ",(0,r.jsx)(n.code,{children:"DEL attrs:{subject}"})]}),"\n",(0,r.jsxs)(n.li,{children:["membership change \u2192 ",(0,r.jsx)(n.code,{children:"DEL groups:{subject}"}),", ",(0,r.jsx)(n.code,{children:"DEL attrs:{subject}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"No engine code change; just TTLs and Kafka/Redis wiring."})}),"\n",(0,r.jsx)(n.h2,{id:"6-certificate-lifecycle-signals-from-igapki-not-vds",children:"6) Certificate lifecycle signals (from IGA/PKI, not VDS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["VDS doesn\u2019t issue or revoke; it ",(0,r.jsx)(n.strong,{children:"exposes state"})," needed by TAK:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add optional attributes: ",(0,r.jsx)(n.code,{children:"certificateSerialNumber"}),", ",(0,r.jsx)(n.code,{children:"certificateNotAfter"}),", ",(0,r.jsx)(n.code,{children:"revoked"})," (boolean), or separate ",(0,r.jsx)(n.code,{children:"takStatus"})," attribute."]}),"\n",(0,r.jsx)(n.li,{children:"Your mapping DSL can surface these from the PKI system for ops/forensics; PDP can redact if not needed."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"7-dn--ou-conventions-for-tak",children:"7) DN & OU conventions for TAK"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If you embed organizational data in cert OUs, reflect it in the directory DNs for clarity:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Example RDN policy: ",(0,r.jsx)(n.code,{children:"uid=<lowercased subject>"}),", base ",(0,r.jsx)(n.code,{children:"ou=people,dc=..."}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Ensure ",(0,r.jsx)(n.strong,{children:"RFC 4514 escaping"})," and ",(0,r.jsx)(n.strong,{children:"lowercase canonicalization"})," for RDN values to avoid duplicate DNs across case variants."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"8-tls-and-ca-hygiene-interop-more-than-code",children:"8) TLS and CA hygiene (interop more than code)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Stick with ",(0,r.jsx)(n.strong,{children:"LDAPS-only"})," in v1."]}),"\n",(0,r.jsx)(n.li,{children:"If you enable SASL/EXTERNAL, configure the listener with your TAK-trusted CA chain; publish any CRL/OCSP endpoints as required by your PKI."}),"\n",(0,r.jsx)(n.li,{children:"None of this changes the LDAP engine; it\u2019s deployment policy."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"9-observability-that-helps-tak-ops",children:"9) Observability that helps TAK ops"}),"\n",(0,r.jsx)(n.p,{children:"Add a TAK-focused dashboard slice:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'ldap_search_total{client="tak"}'})," (derive via SNI or cert OU)"]}),"\n",(0,r.jsx)(n.li,{children:"p95 search latency, cache hit %, rate-limit hits"}),"\n",(0,r.jsx)(n.li,{children:"membership/PDP latencies"}),"\n",(0,r.jsxs)(n.li,{children:["count of ",(0,r.jsx)(n.code,{children:"memberOf"})," values per subject (sanity)"]}),"\n",(0,r.jsx)(n.li,{children:"pages per search (watch for inefficient queries)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"10-safe-defaults-for-tak",children:"10) Safe defaults for TAK"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default ",(0,r.jsx)(n.strong,{children:"allowlist"})," as above, ",(0,r.jsx)(n.strong,{children:"pageSize=500"}),", ",(0,r.jsx)(n.strong,{children:"sizeLimit=1000"}),", ",(0,r.jsx)(n.strong,{children:"timeLimit=3s"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Disable persistent search / VLV / server-side sort in v1 (TAK doesn\u2019t need them), return ",(0,r.jsx)(n.code,{children:"12"})," if critical."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"bottom-line",children:"Bottom line"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Make v2 the main doc"}),"; it\u2019s the right core."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The TAK/IGA info ",(0,r.jsx)(n.strong,{children:"doesn\u2019t change the engine"}),", it ",(0,r.jsx)(n.strong,{children:"configures it"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"certify SASL/EXTERNAL path,"}),"\n",(0,r.jsx)(n.li,{children:"set TAK-friendly filter/attribute allowlist,"}),"\n",(0,r.jsxs)(n.li,{children:["ship a ",(0,r.jsx)(n.strong,{children:"TAK mapping profile"})," (YAML),"]}),"\n",(0,r.jsx)(n.li,{children:"tune cache TTLs/invalidations,"}),"\n",(0,r.jsx)(n.li,{children:"expose optional PKI metadata attributes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If you want, I can drop a PR-ready ",(0,r.jsx)(n.strong,{children:"\u201cTAK Profile\u201d"})," YAML, the ",(0,r.jsx)(n.strong,{children:"membership search contract"})," stub with cursor paging, and the tests for the ",(0,r.jsx)(n.strong,{children:"bad-cookie \u2192 53"})," behavior so you can merge and move on."]}),"\n",(0,r.jsxs)(n.p,{children:["Replace it. Make the v2 spec your primary doc, and fold the latest nits in as ",(0,r.jsx)(n.strong,{children:"v2.1"})," so nobody has to diff across messages. Below is a clean \u201cfinal cut\u201d you can drop in, plus tiny code patches and a ready-to-scaffold checklist."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"ldap-vds--implementation-spec-v21-final",children:"LDAP VDS \u2014 Implementation Spec v2.1 (final)"}),"\n",(0,r.jsx)(n.h2,{id:"protocol--paging-locked",children:"Protocol & Paging (locked)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Framing"}),": per-connection growable buffer; decode BER in a loop; guard with ",(0,r.jsx)(n.code,{children:"max_pdu_bytes"}),"; handle ",(0,r.jsx)(n.code,{children:"SubstrateUnderrunError"})," ",(0,r.jsx)(n.strong,{children:"and"})," generic ",(0,r.jsx)(n.code,{children:"PyAsn1Error"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Unknown op"}),": send ",(0,r.jsx)(n.strong,{children:"Unsolicited Notice of Disconnection"})," (",(0,r.jsx)(n.code,{children:"1.3.6.1.4.1.1466.20036"}),") with ",(0,r.jsx)(n.code,{children:"protocolError (2)"})," and close."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"RFC 2696"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Bad/expired cookie \u2192 ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"unwillingToPerform (53)"})})," and include a ",(0,r.jsx)(n.strong,{children:"paged response control with empty cookie"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Global"})," ",(0,r.jsx)(n.code,{children:"sizeLimit"}),"/",(0,r.jsx)(n.code,{children:"timeLimit"})," (not per-page):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If the search hits ",(0,r.jsx)(n.code,{children:"sizeLimit"}),", return ",(0,r.jsx)(n.code,{children:"sizeLimitExceeded (4)"})," and ",(0,r.jsx)(n.strong,{children:"do not"})," include a continuation cookie."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"timeLimit"})," elapses, return ",(0,r.jsx)(n.code,{children:"timeLimitExceeded (3)"})," and ",(0,r.jsx)(n.strong,{children:"cancel"})," downstream calls; ",(0,r.jsx)(n.strong,{children:"no cookie"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Backpressure"}),": bounded send queue, ",(0,r.jsx)(n.code,{children:"drain()"})," timeout; on overflow/timeouts: unsolicited notice \u2192 close; cancel in-flight tasks."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"TLS"}),": ",(0,r.jsx)(n.strong,{children:"LDAPS-only v1"}),"; StartTLS off. If PROXY v2 is used, it must be ",(0,r.jsx)(n.strong,{children:"pre-TLS"})," (TLS passthrough LB); the listener consumes PROXY v2 before handshake."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"filters--matching-locked",children:"Filters & Matching (locked)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ASN.1-first"})," (rfc4511) \u2192 internal AST. Allowed attrs & rules ",(0,r.jsx)(n.strong,{children:"only from YAML"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Allowed ops: ",(0,r.jsx)(n.code,{children:"Eq"}),", ",(0,r.jsx)(n.code,{children:"Present"}),", ",(0,r.jsx)(n.code,{children:"Substr"})," (prefix/any/final), ",(0,r.jsx)(n.code,{children:"And"}),", ",(0,r.jsx)(n.code,{children:"Or"}),", ",(0,r.jsx)(n.code,{children:"Not"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Matching rules: ",(0,r.jsx)(n.code,{children:"caseIgnore"})," for ",(0,r.jsx)(n.code,{children:"uid/cn/mail/sAMAccountName"}),"; equality and substring inputs are ",(0,r.jsx)(n.strong,{children:"normalized"})," via ",(0,r.jsx)(n.code,{children:"casefold()"})," before translation."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"paging-state--cookies-locked",children:"Paging State & Cookies (locked)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Deterministic global order (",(0,r.jsx)(n.code,{children:"subject"})," casefold asc)."]}),"\n",(0,r.jsxs)(n.li,{children:["Aggregator returns a ",(0,r.jsx)(n.strong,{children:"composite cursor"})," (per-source offsets/cookies); cookie is stateless and ",(0,r.jsxs)(n.strong,{children:["HMAC-signed envelope that includes ",(0,r.jsx)(n.code,{children:"kid"})]})," (supports rotation)."]}),"\n",(0,r.jsxs)(n.li,{children:["Enforce ",(0,r.jsx)(n.code,{children:"max_cookie_bytes"})," (target \u2264 2 KiB). If exceeded, return ",(0,r.jsx)(n.code,{children:"unwillingToPerform (53)"})," with empty cookie."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"controls-locked",children:"Controls (locked)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Parse/verify criticality. Unknown ",(0,r.jsx)(n.strong,{children:"critical"})," control \u2192 ",(0,r.jsx)(n.code,{children:"unavailableCriticalExtension (12)"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Supported in v1: ",(0,r.jsx)(n.strong,{children:"RFC 2696"})," only."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"caching-locked",children:"Caching (locked)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"L1 per-proc (60s). L2 Redis (JSON; no pickle). Lua single-flight + jitter."}),"\n",(0,r.jsxs)(n.li,{children:["Keys:\n",(0,r.jsx)(n.code,{children:"vds:{tenant}:attrs:{subject}"}),", ",(0,r.jsx)(n.code,{children:"vds:{tenant}:groups:{subject}"}),", ",(0,r.jsx)(n.code,{children:"vds:{tenant}:subjects:{qhash}:{cursor|none}:{n}"})]}),"\n",(0,r.jsxs)(n.li,{children:["CDC/Kafka invalidation: user change \u2192 ",(0,r.jsx)(n.code,{children:"DEL attrs:{subject}"}),"; membership change \u2192 ",(0,r.jsx)(n.code,{children:"DEL groups:{subject}"})," and ",(0,r.jsx)(n.code,{children:"attrs:{subject}"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"drop-in-code-patches-apply-as-is",children:"Drop-in code patches (apply as-is)"}),"\n",(0,r.jsx)(n.h3,{id:"1-unsolicited-notice-correct-oid-type",children:"1) Unsolicited notice (correct OID type)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# vds/server/encoder.py\nfrom pyasn1_modules import rfc4511\n\nNOTICE_OID = '1.3.6.1.4.1.1466.20036'\n\ndef unsolicited_notice(result_code: int, diag: str) -> rfc4511.LDAPMessage:\n    msg = rfc4511.LDAPMessage()\n    msg['messageID'] = 0\n    ext = rfc4511.ExtendedResponse()\n    ext['resultCode'] = result_code\n    ext['diagnosticMessage'] = diag\n    ext['responseName'] = rfc4511.LDAPOID(NOTICE_OID)\n    msg['protocolOp'] = rfc4511.LDAPMessage_protocolOp().setComponentByName(\n        'extendedResp', ext\n    )\n    return msg\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-reader-hardening--cleanup",children:"2) Reader hardening + cleanup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# vds/server/protocol.py (excerpts)\nfrom pyasn1.codec.ber import decoder, encoder\nfrom pyasn1.error import SubstrateUnderrunError, PyAsn1Error\nfrom pyasn1_modules import rfc4511\nimport contextlib\n\nasync def _read_message(self):\n    while True:\n        if self._buf:\n            try:\n                msg, rest = decoder.decode(bytes(self._buf), asn1Spec=rfc4511.LDAPMessage())\n                self._buf = bytearray(rest)\n                return msg\n            except SubstrateUnderrunError:\n                pass\n            except PyAsn1Error:\n                await self._send(unsolicited_notice(2, "protocolError: decode failure"))\n                self.w.close()\n                return None\n        if len(self._buf) > self.deps.cfg.server.max_pdu_bytes:\n            await self._send(unsolicited_notice(2, "protocolError: PDU too large"))\n            self.w.close()\n            return None\n        chunk = await self.r.read(self.deps.cfg.server.read_chunk)\n        if not chunk:\n            return None\n        self._buf.extend(chunk)\n\nasync def run(self):\n    try:\n        while True:\n            msg = await self._read_message()\n            if msg is None: break\n            # dispatch...\n    finally:\n        self._sender_task.cancel()\n        with contextlib.suppress(asyncio.CancelledError):\n            await self._sender_task\n        self.w.close()\n        with contextlib.suppress(Exception):\n            await self.w.wait_closed()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-controls-criticality--invalid-cookie--53--empty-cookie",children:"3) Controls criticality & invalid cookie \u2192 53 + empty cookie"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# vds/server/controls.py (excerpts)\ndef parse_paged_req(controls):\n    size, cookie = None, None\n    if not controls: return size, cookie\n    for ctl in controls:\n        oid = str(ctl['controlType'])\n        critical = bool(ctl.getComponentByName('criticality'))  # defaults False\n        if oid == PAGED_OID:\n            val = bytes(ctl['controlValue'])\n        seq, _ = decoder.decode(val, asn1Spec=PagedResultsRequestValue())\n        size = int(seq['size']); cookie = bytes(seq['cookie']) or None\n        elif critical:\n            raise LdapError(12, \"unavailableCriticalExtension\")\n        return size, cookie\n"})}),"\n",(0,r.jsx)(n.p,{children:"Caller side:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# when cookie is present but verify_cookie(...) returns None:\ndone = search_done(mid, 53, "invalid paging cookie", controls=[make_paged_resp(None)])\nawait self._send(done); return\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"4-cookie-hmac-over-the-full-envelope-bind-kid",children:["4) Cookie HMAC over the full envelope (bind ",(0,r.jsx)(n.code,{children:"kid"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# vds/utils/paging_cookie.py\ndef sign_cookie(state: dict) -> bytes:\n    envelope = {"kid": KEYS.primary.id, "state": state}\n    body = json.dumps(envelope, separators=(\',\',\':\'), sort_keys=True).encode()\n    mac = hmac.new(KEYS.primary.key, body, hashlib.sha256).digest()\n    return base64.urlsafe_b64encode(mac + body)\n\ndef verify_cookie(cookie: bytes) -> dict | None:\n    try:\n        blob = base64.urlsafe_b64decode(cookie)\n        mac, body = blob[:32], blob[32:]\n        env = json.loads(body); kid = env.get("kid"); state = env.get("state")\n        for key in KEYS.keys_for(kid):\n            if hmac.compare_digest(mac, hmac.new(key, body, hashlib.sha256).digest()):\n                return state\n            return None\n    except Exception:\n        return None\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"spec-clarifications-document-these-in-the-design",children:"Spec clarifications (document these in the design)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Limits semantics"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sizeLimit"})," is ",(0,r.jsx)(n.strong,{children:"global across the search"}),", not per page. When exceeded, respond ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"4"})})," and ",(0,r.jsx)(n.strong,{children:"no cookie"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timeLimit"})," is ",(0,r.jsx)(n.strong,{children:"global"}),"; cancel backend work; respond ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"3"})}),"; ",(0,r.jsx)(n.strong,{children:"no cookie"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Case rules"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Sorting key: ",(0,r.jsx)(n.code,{children:"subject.casefold()"})," ascending."]}),"\n",(0,r.jsxs)(n.li,{children:["Equality/substring matching for ",(0,r.jsx)(n.code,{children:"uid"}),", ",(0,r.jsx)(n.code,{children:"cn"}),", ",(0,r.jsx)(n.code,{children:"mail"}),", ",(0,r.jsx)(n.code,{children:"sAMAccountName"})," uses case-insensitive normalization."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"DN canonicalization"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["RDN attributes (",(0,r.jsx)(n.code,{children:"uid"}),", ",(0,r.jsx)(n.code,{children:"cn"}),") are lowercased when building the DN (attributes themselves keep original case); escape per RFC 4514."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tests-to-add-before-scaffolding",children:"Tests to add (before scaffolding)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cookie integrity"}),": tamper ",(0,r.jsx)(n.code,{children:"kid"})," with same MAC \u2192 reject."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Decode error"}),": malformed BER triggers unsolicited notice + close."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Oversized PDU"}),": exceeds ",(0,r.jsx)(n.code,{children:"max_pdu_bytes"})," \u2192 notice + close."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Drain timeout"}),": force slow consumer; verify overflow metric + close."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Invalid cookie"}),": returns ",(0,r.jsx)(n.code,{children:"53"})," with empty paged cookie control."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Limits"}),": global ",(0,r.jsx)(n.code,{children:"sizeLimit"}),"/",(0,r.jsx)(n.code,{children:"timeLimit"})," behavior (no continuation cookie)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PROXY v2"}),": header consumed pre-TLS; fallback disabled when TLS terminates upstream."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CaseIgnore"}),": property-based tests for equality/substring normalization."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"ready-to-scaffold-checklist",children:"Ready-to-scaffold checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Land patches above in ",(0,r.jsx)(n.code,{children:"encoder.py"}),", ",(0,r.jsx)(n.code,{children:"protocol.py"}),", ",(0,r.jsx)(n.code,{children:"controls.py"}),", ",(0,r.jsx)(n.code,{children:"paging_cookie.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Lock YAML ",(0,r.jsx)(n.code,{children:"filters.allow_attrs"})," + ",(0,r.jsx)(n.code,{children:"matching"})," and remove any hardcoded allowlists."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Define provider contracts (LDAP/REST/SQL) with deterministic order & cursor/token."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement ",(0,r.jsx)(n.code,{children:"exec.search_executor"})," to ",(0,r.jsx)(n.strong,{children:"raise"})," ",(0,r.jsx)(n.code,{children:"LdapError"})," (not return tuples) on invalid cookie/time/size violations; the protocol layer maps to result codes + controls."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add ",(0,r.jsx)(n.code,{children:"max_pdu_bytes"}),", ",(0,r.jsx)(n.code,{children:"read_chunk"}),", ",(0,r.jsx)(n.code,{children:"drain_timeout_s"}),", ",(0,r.jsx)(n.code,{children:"max_send_queue_items"})," to config; cover with tests."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add task cancellation hooks on disconnect/error (membership, PDP, groups)."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Wire Lua single-flight & negative caches with tests."]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Write the limits/controls test suite (above)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["If you want, I can spit out a repo skeleton (files + minimal tests) with these exact behaviors wired so you can ",(0,r.jsx)(n.code,{children:"poetry run pytest"})," and start stubbing membership/PDP immediately."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"18-connector-extraction-from-crudservice-inventory--plan",children:"18) Connector extraction from CRUDService (inventory & plan)"}),"\n",(0,r.jsx)(n.p,{children:"Goal: reuse the battle\u2011tested connector logic while removing CRUDService\u2011specific dependencies and keeping VDS standalone. Keep the YAML schema (System Types/Definitions) identical for consistency."}),"\n",(0,r.jsx)(n.p,{children:"What to bring (by connector)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["LDAP/AD","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Keep: ldap3 client, LDAPS/StartTLS options, connection pooling, RFC 2696 paged search, optional server\u2011side sort, DN validation (",(0,r.jsx)(n.code,{children:"safe_dn"})," equivalent), retry/backoff (tenacity), timeouts, idempotent read paths."]}),"\n",(0,r.jsx)(n.li,{children:"Drop for VDS v1: write/modify flows (add/modify/delete, group membership updates, password reset), Kafka hooks, CRUD metrics wrappers."}),"\n",(0,r.jsxs)(n.li,{children:["Replace: FastAPI ",(0,r.jsx)(n.code,{children:"HTTPException"})," \u2192 ",(0,r.jsx)(n.code,{children:"ProviderError"}),"; Vault/CredentialManager \u2192 ",(0,r.jsx)(n.code,{children:"SecretsProvider"})," (env first, pluggable); TemplateRendererConfigurator \u2192 minimal jinja2."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["REST","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep: httpx client with retries/backoff, path templating, header injection hook (auth builder), expected outcomes mapping."}),"\n",(0,r.jsx)(n.li,{children:"Drop: FastAPI/CRUD wrappers, plugin loader coupling."}),"\n",(0,r.jsx)(n.li,{children:"Replace: exceptions/metrics with VDS equivalents."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["SQL/ODBC","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Keep: parameterized execution, keyset pagination (",(0,r.jsx)(n.code,{children:"ORDER BY lower(subject), id"}),"), timeout handling."]}),"\n",(0,r.jsx)(n.li,{children:"Drop: CRUD\u2011specific mapping scaffolding beyond query execution."}),"\n",(0,r.jsx)(n.li,{children:"Note: prefer SQLAlchemy core or pyodbc; strictly no string\u2011built SQL in VDS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Neutral interfaces to implement in VDS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"class Provider"})," with ",(0,r.jsx)(n.code,{children:"async def search(filter_ast, base_dn, scope, page_size, cursor) -> (rows, next_cursor)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"class SecretsProvider"})," with ",(0,r.jsx)(n.code,{children:"get(name) -> str | None"})," (env; vault/azure optional later)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"class ConnectorError(ProviderError)"})," hierarchy for consistent error handling"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Dependencies required in VDS (runtime)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"ldap3, httpx, jinja2, PyYAML, tenacity"}),"\n",(0,r.jsx)(n.li,{children:"One of: SQLAlchemy + appropriate DB driver (e.g., pyodbc) if using SQL providers"}),"\n",(0,r.jsx)(n.li,{children:"Optional: pydantic (only if we keep strict models; can be avoided)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"What to exclude from CRUDService"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["FastAPI types (",(0,r.jsx)(n.code,{children:"HTTPException"}),"), VaultService/CredentialManager, TemplateRendererConfigurator, ExecutionContext coupling, Kafka producers, plugin registry specifics, CRUD\u2011specific metrics wrappers."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Vended code structure in VDS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vds/providers/connectors/"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ldap.py"}),", ",(0,r.jsx)(n.code,{children:"ad.py"})," (if you keep vendor differences), ",(0,r.jsx)(n.code,{children:"rest.py"}),", ",(0,r.jsx)(n.code,{children:"odbc.py"}),", ",(0,r.jsx)(n.code,{children:"base.py"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config_loader.py"})," (YAML + jinja2; env substitution), ",(0,r.jsx)(n.code,{children:"secrets.py"})," (env\u2011first), ",(0,r.jsx)(n.code,{children:"registry.py"})," (type\u2192class map)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"All connectors use VDS metrics facade and raise VDS exceptions."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Testing focus after extraction"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"LDAP: RFC 2696 page loop, server\u2011sort off/on (optional), DN validation, retry/backoff paths"}),"\n",(0,r.jsx)(n.li,{children:"REST: token paging, retry/backoff, header injection"}),"\n",(0,r.jsx)(n.li,{children:"SQL: keyset paging correctness and deterministic ordering"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"19-config-conventions-system-types-and-system-definitions",children:"19) Config conventions: System Types and System Definitions"}),"\n",(0,r.jsx)(n.p,{children:"Use the same layout and schema as CRUDService, without a runtime dependency:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ServiceConfigs/connectors/system_types/*.yaml"})," (e.g., ",(0,r.jsx)(n.code,{children:"AD.yaml"}),", ",(0,r.jsx)(n.code,{children:"openldap.yaml"}),", ",(0,r.jsx)(n.code,{children:"auth0.yaml"}),", ",(0,r.jsx)(n.code,{children:"ODBC.yaml"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ServiceConfigs/connectors/systems/*.yaml"})," (e.g., ",(0,r.jsx)(n.code,{children:"addomain_ad.yaml"}),", ",(0,r.jsx)(n.code,{children:"auth0_eid.yaml"}),", ",(0,r.jsx)(n.code,{children:"hr_db.yaml"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["VDS wiring (",(0,r.jsx)(n.code,{children:"connectors.yaml"}),") points to System Definitions and the action to run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"directories:\n  person:\n    sources:\n      - system: addomain_ad\n        object_type: user\n        action: search_users\n        key_fields: {subject: sAMAccountName, id: objectGUID}\n      - system: auth0_eid\n        object_type: users\n        action: list\n        key_fields: {subject: email, id: user_id}\n  group:\n    sources:\n      - system: addomain_ad\n        object_type: group\n        action: search_groups\n        key_fields: {subject: cn, id: objectGUID}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep CRUD\u2019s YAML semantics (object_types/commands, templated params). VDS supplies normalized filter parameters; providers translate to native queries."}),"\n",(0,r.jsx)(n.li,{children:"Place configs in a neutral path and validate them in CI; VDS reads them directly (no CRUD imports)."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"191-crudservice-parity-plan-factory-credentials-templating",children:"19.1) CRUDService Parity Plan (factory, credentials, templating)"}),"\n",(0,r.jsx)(n.p,{children:"We will mirror the mature CRUDService patterns where they add robustness and reduce reinvention, while keeping VDS standalone and LDAP-focused."}),"\n",(0,r.jsx)(n.p,{children:"Adopt as-is (or minimalized):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provider factory via registry file (connectors.yaml)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Load ",(0,r.jsx)(n.code,{children:"connector_registry"})," and map Type \u2192 module/class"]}),"\n",(0,r.jsxs)(n.li,{children:["Constructor introspection to pass optional kwargs when accepted (e.g., ",(0,r.jsx)(n.code,{children:"system_name"}),", ",(0,r.jsx)(n.code,{children:"credential_manager"}),", ",(0,r.jsx)(n.code,{children:"auth_header_builder"}),", ",(0,r.jsx)(n.code,{children:"vault_service"}),") and otherwise fall back to simplified config kwargs"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Templating","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use a lightweight Jinja2 renderer for connectors; consistent render context exposing ",(0,r.jsx)(n.code,{children:"params"}),", ",(0,r.jsx)(n.code,{children:"connection"}),", and ",(0,r.jsx)(n.code,{children:"system.connection"})," so existing system-type templates render unchanged"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Credentials","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Start with env/static ",(0,r.jsx)(n.code,{children:"CredentialManager"})," (basic, bearer, api-key) and keep an interface point to plug a vault provider later; preserve precedence (request \u2192 vault \u2192 static) when vault is enabled"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Error envelope","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Providers return structured errors with status_code and upstream diagnostic payload; executor maps to LDAP results or forwards detail as needed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Observability","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wrap provider actions with latency metrics and tracing attributes (cardinality-safe)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Justified deviations (VDS-specific):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep LDAP write operations (ADD/MOD/DEL) out of scope for v1; only search flows are needed by VDS"}),"\n",(0,r.jsx)(n.li,{children:"No runtime dependency on CRUDService; we only replicate the necessary patterns and interfaces"}),"\n",(0,r.jsx)(n.li,{children:"Simplify connectors surface to the VDS Provider interface; reuse system-types commands for REST/LDAP where available"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Actionable backlog (tracked in repo TODOs):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add constructor introspection and DI in the provider registry"}),"\n",(0,r.jsxs)(n.li,{children:["Implement minimal ",(0,r.jsx)(n.code,{children:"CredentialManager"})," (env/static) with future vault hook"]}),"\n",(0,r.jsx)(n.li,{children:"Add Jinja renderer + context enrichment in providers"}),"\n",(0,r.jsxs)(n.li,{children:["Extend REST provider with ",(0,r.jsx)(n.code,{children:"perform_action"})," (templated endpoint/body/headers) and structured errors"]}),"\n",(0,r.jsx)(n.li,{children:"Deep-merge system types and system definitions (object_types/commands) with overrides"}),"\n",(0,r.jsx)(n.li,{children:"Wire aggregator to resolve command definitions (object_type/action) and invoke providers accordingly"}),"\n",(0,r.jsx)(n.li,{children:"Instrument providers with metrics/tracing; keep labels low-cardinality"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Compatibility impact:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Existing CRUD-style system types/definitions and connectors.yaml can be reused in VDS without authors learning a new schema. Optional vault and advanced flows can be enabled later without breaking changes."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
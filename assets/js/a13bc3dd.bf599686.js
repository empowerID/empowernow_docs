"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[704],{20212:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"services/nowconnect/reference/security","title":"security","description":"Security Model","source":"@site/docs/services/nowconnect/reference/security.md","sourceDirName":"services/nowconnect/reference","slug":"/services/nowconnect/reference/security","permalink":"/empowernow_docs/docs/services/nowconnect/reference/security","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/reference/security.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"security-overview","permalink":"/empowernow_docs/docs/services/nowconnect/reference/security-overview"},"next":{"title":"whitepaper","permalink":"/empowernow_docs/docs/services/nowconnect/reference/whitepaper"}}');var s=r(74848),i=r(28453);const c={},t=void 0,l={},d=[{value:"Security Model",id:"security-model",level:2},{value:"Optional hardening toggles (cloud)",id:"optional-hardening-toggles-cloud",level:3},{value:"Cryptographic profile",id:"cryptographic-profile",level:3},{value:"Abuse and DoS controls",id:"abuse-and-dos-controls",level:3},{value:"Northbound HTTP endpoints",id:"northbound-http-endpoints",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"security-model",children:"Security Model"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["TLS for all tunnels (",(0,s.jsx)(n.code,{children:"wss://"}),"). Traefik or in\u2011app TLS termination."]}),"\n",(0,s.jsxs)(n.li,{children:["JWT on WebSocket upgrade (",(0,s.jsx)(n.code,{children:"Authorization: Bearer <jwt>"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Validate against IdP JWKS; enforce ",(0,s.jsx)(n.code,{children:"aud=nowconnect"})]}),"\n",(0,s.jsxs)(n.li,{children:["Required claims: ",(0,s.jsx)(n.code,{children:"agent_id"}),"; reconcile with ",(0,s.jsx)(n.code,{children:"HELLO.agent_id"})]}),"\n",(0,s.jsxs)(n.li,{children:["Optional: permitted ",(0,s.jsx)(n.code,{children:"connectors"}),"/scopes in claims"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Optional CIDR allowlists for inbound TCP listeners (cloud)."}),"\n",(0,s.jsx)(n.li,{children:"No payload logging; redact sensitive metadata."}),"\n",(0,s.jsx)(n.li,{children:"Token rotation: mount token file read\u2011only; agent reconnects on rotation or ~1m before expiry."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optional-hardening-toggles-cloud",children:"Optional hardening toggles (cloud)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NOWCONNECT_REQUIRE_CONNECTOR_SCOPES"}),": if true, enforce connector scopes from JWT claims"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NOWCONNECT_FAPI_MODE"}),": 0 = off (default), 2 = enable DPoP verification when implemented"]}),"\n",(0,s.jsxs)(n.li,{children:["PDP checks on ",(0,s.jsx)(n.code,{children:"OPEN(connector)"})," can be enabled via ",(0,s.jsx)(n.code,{children:"NOWCONNECT_PDP_URL"})," and related settings"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cryptographic-profile",children:"Cryptographic profile"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"TLS: 1.2 and 1.3 supported; prefer 1.3 where platform ingress supports it."}),"\n",(0,s.jsx)(n.li,{children:"Ciphers: follow platform ingress defaults for modern secure ciphers (AES-GCM/CHACHA20). Disable legacy/NULL/EXPORT suites."}),"\n",(0,s.jsxs)(n.li,{children:["JWT: RS256/PS256/ES256 recommended; validate ",(0,s.jsx)(n.code,{children:"aud"})," and signature via JWKS; require ",(0,s.jsx)(n.code,{children:"agent_id"})," claim."]}),"\n",(0,s.jsx)(n.li,{children:"FIPS: Achieved via your base image/OS crypto modules; NowConnect uses system TLS libraries."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"abuse-and-dos-controls",children:"Abuse and DoS controls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Connection limits: bound total connections and per-connection queues (",(0,s.jsx)(n.code,{children:"queue_depth_per_cid"}),"), idle timeouts, and max inflight bytes on mesh links."]}),"\n",(0,s.jsxs)(n.li,{children:["Backpressure: tune ",(0,s.jsx)(n.code,{children:"send_queue_depth"})," and ",(0,s.jsx)(n.code,{children:"per_link_max_inflight_bytes"})," by RTT/throughput; alert on backpressure drops."]}),"\n",(0,s.jsx)(n.li,{children:"Rate limiting: enforce at ingress/load balancer; use CIDR allowlists for sensitive listeners."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"northbound-http-endpoints",children:"Northbound HTTP endpoints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Keep TLS for all admin endpoints (e.g., ",(0,s.jsx)(n.code,{children:"/metrics"}),", ",(0,s.jsx)(n.code,{children:"/readyz"}),", ",(0,s.jsx)(n.code,{children:"/healthz"}),"). If any are exposed beyond the cluster or trusted network, optionally enforce client mTLS at ingress for those routes."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var o=r(96540);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);
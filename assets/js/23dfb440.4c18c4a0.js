"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9738],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},93265:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"services/aria-shield/capability-proofs","title":"Privacy-Preserving Capability Proofs \u2014 Deep Intro & How-It-Works (for PMs)","description":"One-liner","source":"@site/docs/services/aria-shield/capability-proofs.md","sourceDirName":"services/aria-shield","slug":"/services/aria-shield/capability-proofs","permalink":"/empowernow_docs/docs/services/aria-shield/capability-proofs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/aria-shield/capability-proofs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Behavioral DNA (BDNA) Monitoring \u2014 Deep Intro & How-It-Works (for PMs)","permalink":"/empowernow_docs/docs/services/aria-shield/bdna-monitoring"},"next":{"title":"ARIA Shield","permalink":"/empowernow_docs/docs/services/aria-shield/"}}');var r=i(74848),t=i(28453);const o={},l="Privacy-Preserving Capability Proofs \u2014 Deep Intro & How-It-Works (for PMs)",a={},c=[{value:"One-liner",id:"one-liner",level:2},{value:"Why this matters (business + risk)",id:"why-this-matters-business--risk",level:2},{value:"Core concept in plain language",id:"core-concept-in-plain-language",level:2},{value:"How it works end-to-end",id:"how-it-works-end-to-end",level:2},{value:"1) Issuance (IdP)",id:"1-issuance-idp",level:3},{value:"2) Proof (Agent)",id:"2-proof-agent",level:3},{value:"3) Enforcement (ARIA Gateway + PDP)",id:"3-enforcement-aria-gateway--pdp",level:3},{value:"Sequence: one call with a capability proof",id:"sequence-one-call-with-a-capability-proof",level:2},{value:"Verification logic at ARIA (high-level)",id:"verification-logic-at-aria-high-level",level:2},{value:"What\u2019s in the \u201ccapability tree\u201d (no code, just concepts)",id:"whats-in-the-capability-tree-no-code-just-concepts",level:2},{value:"Alignment with <strong>OpenID AuthZEN</strong> &amp; PDPs",id:"alignment-with-openid-authzen--pdps",level:2},{value:"What buyers get (value for CIO/CISO/FinOps/Developers)",id:"what-buyers-get-value-for-ciocisofinopsdevelopers",level:2},{value:"How this pairs with other ARIA controls",id:"how-this-pairs-with-other-aria-controls",level:2},{value:"PM decisions to lock for v1",id:"pm-decisions-to-lock-for-v1",level:2},{value:"KPIs to watch (no invented numbers\u2014track internally)",id:"kpis-to-watch-no-invented-numberstrack-internally",level:2},{value:"Non-goals (to avoid confusion)",id:"non-goals-to-avoid-confusion",level:2},{value:"Bottom line",id:"bottom-line",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"privacy-preserving-capability-proofs--deep-intro--how-it-works-for-pms",children:"Privacy-Preserving Capability Proofs \u2014 Deep Intro & How-It-Works (for PMs)"})}),"\n",(0,r.jsx)(n.h2,{id:"one-liner",children:"One-liner"}),"\n",(0,r.jsxs)(n.p,{children:["Agents prove they hold ",(0,r.jsx)(n.em,{children:"exactly the permission they need"})," for this call\u2014without revealing the rest of their powers\u2014so tokens stay compact, private, and safer to operate at scale."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"why-this-matters-business--risk",children:"Why this matters (business + risk)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spending control:"})," Agents can\u2019t \u201caccidentally\u201d exercise adjacent powers (e.g., ",(0,r.jsx)(n.em,{children:"refund"})," because they had ",(0,r.jsx)(n.em,{children:"charge"}),"). Each call must carry a proof for the ",(0,r.jsx)(n.strong,{children:"one"})," capability it uses."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Privacy & safety:"})," An attacker or downstream service can\u2019t learn the agent\u2019s full permission set from a token. We disclose the minimum required to complete the task."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operational scale:"})," Permissions for hundreds of tools no longer bloat tokens or headers. You carry a single cryptographic ",(0,r.jsx)(n.strong,{children:"root"})," and present tiny per-call proofs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Governance clarity:"})," Every allow/deny decision is traceable to a specific capability, visible in receipts and dashboards."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"core-concept-in-plain-language",children:"Core concept in plain language"}),"\n",(0,r.jsxs)(n.p,{children:["Think of the agent\u2019s permissions as a ",(0,r.jsx)(n.strong,{children:"sealed deck"}),". The token carries one secure \u201cdeck ID\u201d (a cryptographic root). When the agent needs to use a specific card\u2014say, ",(0,r.jsx)(n.code,{children:"tool:stripe:payment.refund"}),"\u2014it presents a ",(0,r.jsx)(n.strong,{children:"small proof"})," that this card belongs to that deck ",(0,r.jsx)(n.em,{children:"without revealing the other cards"}),". ARIA checks the proof against the deck ID. If it matches, we proceed; if not, we fail closed."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works-end-to-end",children:"How it works end-to-end"}),"\n",(0,r.jsx)(n.h3,{id:"1-issuance-idp",children:"1) Issuance (IdP)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The IdP compiles the approved capability list (from Membership/Graph) into a ",(0,r.jsx)(n.strong,{children:"capability tree"})," and signs a token containing:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pairwise agent binding (user-bound principal)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cap_root"})," (the cryptographic fingerprint of the full capability set)"]}),"\n",(0,r.jsx)(n.li,{children:"References to approved tool attestations (by ID)"}),"\n",(0,r.jsx)(n.li,{children:"Standard OAuth/OIDC claims"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-proof-agent",children:"2) Proof (Agent)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For each call, the agent requests a ",(0,r.jsx)(n.strong,{children:"capability proof"})," for the one capability it intends to use (e.g., via the IdP\u2019s capability-proof endpoint) or builds it locally if it has the tree."]}),"\n",(0,r.jsxs)(n.li,{children:["That proof is a short list of hashes that reconstruct the ",(0,r.jsx)(n.code,{children:"cap_root"})," ",(0,r.jsx)(n.strong,{children:"only if"})," the capability is truly in the set."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-enforcement-aria-gateway--pdp",children:"3) Enforcement (ARIA Gateway + PDP)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"ARIA verifies:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"User-binding, tool attestation, budget/plan, and"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capability proof \u2192 cap_root"})," match."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["ARIA calls the ",(0,r.jsx)(n.strong,{children:"PDP (OpenID AuthZEN)"})," with the exercised capability in ",(0,r.jsx)(n.code,{children:"context.capability"})," and tool info in ",(0,r.jsx)(n.code,{children:"resource.properties"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["PDP replies ",(0,r.jsx)(n.strong,{children:"boolean only"})," (per AuthZEN draft-04). ARIA enforces the decision and emits a receipt."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"sequence-one-call-with-a-capability-proof",children:"Sequence: one call with a capability proof"}),"\n",(0,r.jsx)(n.mermaid,{value:'sequenceDiagram\r\n    autonumber\r\n    participant Agent\r\n    participant IdP as IdP (Capability Proof API)\r\n    participant ARIA as ARIA Gateway (PEP)\r\n    participant PDP as PDP (OpenID AuthZEN)\r\n    participant Tool as Tool/API\r\n\r\n    Agent->>IdP: Request proof for capability "tool:stripe:payment.refund"\r\n    IdP--\x3e>Agent: Proof(path[], leaf=capability, root=cap_root)\r\n    Agent->>ARIA: Invoke tool with token + capability_proof\r\n    ARIA->>ARIA: Verify proof \u21d2 recompute root == token.cap_root?\r\n    ARIA->>PDP: AuthZEN evaluate(subject, action, resource, context.capability)\r\n    PDP--\x3e>ARIA: {"decision": true|false}\r\n    ARIA--\x3e>Tool: Forward call if allowed\r\n    Tool--\x3e>ARIA: Response\r\n    ARIA--\x3e>Agent: Result (+ receipt logged)'}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"verification-logic-at-aria-high-level",children:"Verification logic at ARIA (high-level)"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\r\n    A[Start] --\x3e B{Proof present?}\r\n    B -- No --\x3e X1[Deny \u2022 Missing capability proof]\r\n    B -- Yes --\x3e C{Proof \u2192 root == token.cap_root?}\r\n    C -- No --\x3e X2[Deny \u2022 Invalid capability proof]\r\n    C -- Yes --\x3e D{Capability matches the tool/action?}\r\n    D -- No --\x3e X3[Deny \u2022 Capability mismatch]\r\n    D -- Yes --\x3e E[Call PDP (AuthZEN)]\r\n    E --\x3e|decision=false| X4[Deny \u2022 PDP policy]\r\n    E --\x3e|decision=true| F[Allow \u2022 Emit receipt]"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"whats-in-the-capability-tree-no-code-just-concepts",children:"What\u2019s in the \u201ccapability tree\u201d (no code, just concepts)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Leaves"}),": canonical capability strings (e.g., ",(0,r.jsx)(n.code,{children:"tool:<vendor>:<domain>.<action>"}),"), optionally ",(0,r.jsx)(n.em,{children:"domain-separated"})," by tenant/environment to prevent cross-tenant reuse."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Internal nodes"}),": hashes that summarize children."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Root"}),": a single hash (the deck ID) placed in the token."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"The proof is just the siblings needed to re-compute the root\u2014small, fast to verify, and revealing nothing else."}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:'graph TB\r\n    subgraph Capability Tree\r\n      C1["tool:stripe:payment.charge"]\r\n      C2["tool:stripe:payment.refund"]\r\n      C3["tool:s3:object.put"]\r\n      C4["tool:s3:object.get"]\r\n      H12["Hash(C1,C2)"]\r\n      H34["Hash(C3,C4)"]\r\n      ROOT["cap_root = Hash(H12,H34)"]\r\n    end\r\n    C1--\x3eH12\r\n    C2--\x3eH12\r\n    C3--\x3eH34\r\n    C4--\x3eH34\r\n    H12--\x3eROOT\r\n    H34--\x3eROOT'}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h2,{id:"alignment-with-openid-authzen--pdps",children:["Alignment with ",(0,r.jsx)(n.strong,{children:"OpenID AuthZEN"})," & PDPs"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Where proofs live:"})," ARIA verifies the proof locally (PEP responsibility). No spec change is needed."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"How PDP sees it:"})," ARIA calls the PDP using ",(0,r.jsx)(n.strong,{children:"AuthZEN draft-04"}),", passing:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"subject"}),": the agent principal (user-bound)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"action"}),": operation name (e.g., ",(0,r.jsx)(n.code,{children:"execute"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resource"}),": the tool, with properties like ",(0,r.jsx)(n.code,{children:"tool_id"}),", ",(0,r.jsx)(n.code,{children:"attestation_id"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"context"}),": ",(0,r.jsx)(n.code,{children:"capability"})," = the exact capability proven, plus any budgets, drift scores, or context roots"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Response contract:"})," PDP returns ",(0,r.jsx)(n.strong,{children:"only"})," ",(0,r.jsx)(n.code,{children:'{"decision": true|false}'}),". ARIA handles obligations (e.g., receipts, budgets) on its side."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why split roles:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PEP (ARIA):"})," cryptographic verification, runtime enforcement, auditing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PDP:"})," policy (who may do what, when, where) using the ",(0,r.jsx)(n.em,{children:"already-verified"})," capability as input."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"what-buyers-get-value-for-ciocisofinopsdevelopers",children:"What buyers get (value for CIO/CISO/FinOps/Developers)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Least disclosure & least privilege by construction"}),"\r\nEvery call proves ",(0,r.jsx)(n.em,{children:"one"})," permission; nothing else is exposed on the wire."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compact, scalable tokens"}),"\r\nAdd hundreds of capabilities without inflating the token\u2014only the root travels; tiny per-call proofs ride alongside."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear cost controls"}),"\r\nBecause each call names a specific capability, it lines up cleanly with budgets, plan steps, and spend policies."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interoperable & standards-friendly"}),"\r\nWorks with OAuth 2.0 / OIDC tokens and AuthZEN PDPs\u2014no proprietary protocol required."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"how-this-pairs-with-other-aria-controls",children:"How this pairs with other ARIA controls"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Tool Schema Attestation:"})," Ensures the ",(0,r.jsx)(n.em,{children:"tool"})," you\u2019re calling is the approved version; capability proof ensures you\u2019re the ",(0,r.jsx)(n.em,{children:"right actor"})," to call it."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Plan Contracts:"})," Even with the right capability, the call must match the approved step (params, budgets)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Receipts:"})," Each decision logs ",(0,r.jsx)(n.code,{children:"tool_id"}),", ",(0,r.jsx)(n.code,{children:"capability"}),", and ",(0,r.jsx)(n.code,{children:"attestation_id"}),"\u2014a clean audit trail."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"User-Bound Identities:"})," Proofs are only valid within the user-bound agent context; they can\u2019t be replayed across bindings/tenants."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"pm-decisions-to-lock-for-v1",children:"PM decisions to lock for v1"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Canonical capability namespace"})," (e.g., ",(0,r.jsx)(n.code,{children:"tool:<vendor>:<domain>.<action>"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Where proofs come from"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"On-demand from IdP\u2019s proof endpoint, or"}),"\n",(0,r.jsx)(n.li,{children:"Pre-fetched & cached client-side, or"}),"\n",(0,r.jsx)(n.li,{children:"Embedded with the token for a small default set."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Replay protections"}),"\r\nBind proofs to a call ID or DPoP key when appropriate (PEP validates)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Rotation & lifecycle"}),"\r\nHow often the tree (and root) rotate when capability sets change; what error UX agents see if proofs are stale."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"kpis-to-watch-no-invented-numberstrack-internally",children:"KPIs to watch (no invented numbers\u2014track internally)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"% of agent calls with valid capability proofs (coverage)."}),"\n",(0,r.jsx)(n.li,{children:"PDP denials due to capability mismatch (policy drift signal)."}),"\n",(0,r.jsx)(n.li,{children:"Token size trend vs. capability count (operational scalability)."}),"\n",(0,r.jsx)(n.li,{children:"Time-to-recover when capability sets change (DX & resiliency)."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"non-goals-to-avoid-confusion",children:"Non-goals (to avoid confusion)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Not"})," a replacement for authorization policy. Proofs show ",(0,r.jsx)(n.em,{children:"you can"}),"; PDP decides ",(0,r.jsx)(n.em,{children:"whether you may"})," given context."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Not"})," an API schema validator. That\u2019s handled by Tool Schema Attestation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Not"})," a budget mechanism. Budgets/plan contracts still apply independently."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"bottom-line",children:"Bottom line"}),"\n",(0,r.jsxs)(n.p,{children:["Privacy-Preserving Capability Proofs give you ",(0,r.jsx)(n.strong,{children:"just-enough disclosure"})," on every call: strong cryptographic evidence for the one permission being exercised, nothing else. That keeps tokens small, policies clean, audits crisp\u2014and spending and risk under control\u2014while staying fully aligned with OpenID AuthZEN and your existing PDP."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3915],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var r=i(96540);const s={},o=r.createContext(s);function l(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:n},e.children)}},30996:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"services/bff/how-to/enable-upstream-tls-to-crud","title":"BFF \u2192 CRUD upstream TLS (HTTPS) and optional mTLS","description":"Configure the BFF to call CRUD Service over HTTPS via Traefik with zero code changes, and optionally enable mutual TLS (mTLS) when mandated by policy.","source":"@site/docs/services/bff/how-to/enable-upstream-tls-to-crud.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/enable-upstream-tls-to-crud","permalink":"/empowernow_docs/docs/services/bff/how-to/enable-upstream-tls-to-crud","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/enable-upstream-tls-to-crud.md","tags":[],"version":"current","frontMatter":{"title":"BFF \u2192 CRUD upstream TLS (HTTPS) and optional mTLS","description":"Configure the BFF to call CRUD Service over HTTPS via Traefik with zero code changes, and optionally enable mutual TLS (mTLS) when mandated by policy.","sidebar_label":"Upstream TLS/mTLS to CRUD","keywords":["BFF","CRUD Service","TLS","mTLS","Traefik"]},"sidebar":"tutorialSidebar","previous":{"title":"Dev vs Prod Setup for SPAs","permalink":"/empowernow_docs/docs/services/bff/how-to/dev-vs-prod-setup"},"next":{"title":"Validate PDP mappings (inline and legacy)","permalink":"/empowernow_docs/docs/services/bff/how-to/endpoint-map-validation"}}');var s=i(74848),o=i(28453);const l={title:"BFF \u2192 CRUD upstream TLS (HTTPS) and optional mTLS",description:"Configure the BFF to call CRUD Service over HTTPS via Traefik with zero code changes, and optionally enable mutual TLS (mTLS) when mandated by policy.",sidebar_label:"Upstream TLS/mTLS to CRUD",keywords:["BFF","CRUD Service","TLS","mTLS","Traefik"]},c=void 0,t={},a=[{value:"Overview",id:"overview",level:2},{value:"Audience",id:"audience",level:2},{value:"Goal",id:"goal",level:2},{value:"Scope",id:"scope",level:2},{value:"Current state and constraints",id:"current-state-and-constraints",level:2},{value:"The non\u2011overengineered approach",id:"the-nonoverengineered-approach",level:2},{value:"Configuration changes (no code edits)",id:"configuration-changes-no-code-edits",level:2},{value:"Deployment steps",id:"deployment-steps",level:2},{value:"Validation",id:"validation",level:2},{value:"Rollback",id:"rollback",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Optional hardening (enable only when mandated)",id:"optional-hardening-enable-only-when-mandated",level:2},{value:"Change control checklist",id:"change-control-checklist",level:2},{value:"See also",id:"see-also",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Phase 1 switches the BFF\u2192CRUD upstream hop to HTTPS (via Traefik) with no code changes. Phase 2 (optional) adds mTLS when required by security policy."}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\r\n  BFF[BFF] -- HTTPS --\x3e TR[Traefik (CRUD router)] -- HTTP(S) --\x3e CRUD[CRUD Service]\r\n  note right of BFF: httpx verifies TLS by default"}),"\n",(0,s.jsx)(n.mermaid,{value:'flowchart TD\r\n  A[Environment] --\x3e|Prod/Stage| P[Use HTTPS host via Traefik]\r\n  A --\x3e|Dev| D[Use internal http://crud-service:8000]\r\n  P --\x3e OK[No code change; config-only]\r\n  D --\x3e OK\r\n  click P href "#configuration-changes-no-code-edits"'}),"\n",(0,s.jsx)(n.h2,{id:"audience",children:"Audience"}),"\n",(0,s.jsx)(n.p,{children:"DevOps and platform engineers."}),"\n",(0,s.jsx)(n.h2,{id:"goal",children:"Goal"}),"\n",(0,s.jsx)(n.p,{children:"Make BFF call CRUD over TLS in prod/stage with zero code changes; keep dev simple."}),"\n",(0,s.jsx)(n.h2,{id:"scope",children:"Scope"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"In scope: Switching the BFF upstream to HTTPS via Traefik (config-only)."}),"\n",(0,s.jsx)(n.li,{children:"Not in scope: App-level TLS on CRUD (covered in CRUD mTLS design), full mutual TLS end-to-end (documented as optional below)."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"current-state-and-constraints",children:"Current state and constraints"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["CRUD is fronted by Traefik at ",(0,s.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"})," and exposes ",(0,s.jsx)(n.code,{children:"/health"})," over HTTPS."]}),"\n",(0,s.jsxs)(n.li,{children:["BFF reads CRUD base URL from ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The BFF ",(0,s.jsx)(n.code,{children:"httpx"})," client verifies TLS by default; no code changes are needed for HTTPS."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"the-nonoverengineered-approach",children:"The non\u2011overengineered approach"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Prod/Stage: BFF calls ",(0,s.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai/api"})," (via Traefik). Rely on standard TLS verification."]}),"\n",(0,s.jsxs)(n.li,{children:["Dev: Keep ",(0,s.jsx)(n.code,{children:"http://crud-service:8000/api"})," (internal Docker network) to minimize local friction."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-changes-no-code-edits",children:"Configuration changes (no code edits)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Prod/Stage config \u2014 file: ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    token_audience: "https://crud.ocg.labs.empowernow.ai"\r\n    # retain existing timeouts/caching as-is\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Dev config \u2014 keep the internal container URL"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "http://crud-service:8000/api"\r\n    token_audience: "https://crud.ocg.labs.empowernow.ai"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"token_audience"})," should already match the HTTPS host. Confirm it remains ",(0,s.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"deployment-steps",children:"Deployment steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Commit the updated ",(0,s.jsx)(n.code,{children:"service_settings.yaml"})," in ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config"})," (per your environment branching/overlays)."]}),"\n",(0,s.jsxs)(n.li,{children:["Restart or redeploy the BFF service.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Docker Compose: restart only the BFF container."}),"\n",(0,s.jsx)(n.li,{children:"Kubernetes: roll the BFF deployment to pick up the mounted config/ConfigMap."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Environment variable overrides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ensure the BFF loads settings from the mounted config path (default compose mounts ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config"})," at ",(0,s.jsx)(n.code,{children:"/app/config"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["If your BFF supports ",(0,s.jsx)(n.code,{children:"SETTINGS_FILE"}),", ensure it points to ",(0,s.jsx)(n.code,{children:"/app/config/service_settings.yaml"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"validation",children:"Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Exercise a BFF endpoint that proxies to CRUD (e.g., list workflows/forms) and confirm 2xx responses."}),"\n",(0,s.jsxs)(n.li,{children:["Check BFF logs for the upstream base to confirm HTTPS: ",(0,s.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Optional: ",(0,s.jsx)(n.code,{children:"curl -I https://crud.ocg.labs.empowernow.ai/health"})," should return 200."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Common success indicators:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"BFF responses remain 2xx for routes backed by CRUD."}),"\n",(0,s.jsx)(n.li,{children:"No TLS verification errors in BFF logs."}),"\n",(0,s.jsx)(n.li,{children:"Dev/local flows unaffected."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rollback",children:"Rollback"}),"\n",(0,s.jsxs)(n.p,{children:["Revert ",(0,s.jsx)(n.code,{children:"crud_service.base_url"})," to the previous HTTP value and redeploy:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "http://crud-service:8000/api"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["404 after change:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify you called a BFF endpoint that proxies to CRUD."}),"\n",(0,s.jsx)(n.li,{children:"Ensure Traefik has the CRUD router and the host resolves."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["TLS certificate errors:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Confirm the container can resolve and reach ",(0,s.jsx)(n.code,{children:"crud.ocg.labs.empowernow.ai"})," and that system CA trusts the cert chain."]}),"\n",(0,s.jsx)(n.li,{children:"If using a private CA in front of Traefik, consider CA pinning (below)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["BFF still calls HTTP:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Confirm the running BFF picked up ",(0,s.jsx)(n.code,{children:"/app/config/service_settings.yaml"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Ensure no env override is forcing the old URL."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"optional-hardening-enable-only-when-mandated",children:"Optional hardening (enable only when mandated)"}),"\n",(0,s.jsx)(n.p,{children:"CA pinning (private CA in front of Traefik):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    tls_verify: "/app/config/ca/prod-ca.crt"   # Mounted CA bundle\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Mount the CA bundle into the BFF container at ",(0,s.jsx)(n.code,{children:"/app/config/ca/prod-ca.crt"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Mutual TLS (mTLS) \u2014 requires matching Traefik/CRUD validation policy:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    client_cert_path: "/app/config/certs/bff.crt"\r\n    client_key_path: "/app/config/certs/bff.key"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Operational guardrails:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Do not set ",(0,s.jsx)(n.code,{children:"verify: false"})," in production."]}),"\n",(0,s.jsx)(n.li,{children:"Keep dev simple and isolate extra security knobs behind environment-specific settings."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"change-control-checklist",children:"Change control checklist"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Config updated in ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"})]}),"\n",(0,s.jsx)(n.li,{children:"Dev environment left unchanged (internal HTTP)"}),"\n",(0,s.jsx)(n.li,{children:"BFF redeployed (config loaded)"}),"\n",(0,s.jsx)(n.li,{children:"Validation completed (BFF calling CRUD over HTTPS; logs clean)"}),"\n",(0,s.jsx)(n.li,{children:"Rollback plan documented"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CRUD Service \u2014 mTLS (Design & Guide): ../../crud-service/reference/mtls_design.md"}),"\n",(0,s.jsx)(n.li,{children:"BFF Security Model: ../explanation/security-model.md"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8563],{28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>l});var r=n(96540);const i={},c=r.createContext(i);function d(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(c.Provider,{value:s},e.children)}},90219:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"services/crud-service/reference/secrets-api","title":"Secrets API reference","description":"Endpoints, auth/scopes, provider behaviors, auditing, and compose examples for `/api/secrets`.","source":"@site/docs/services/crud-service/reference/secrets-api.md","sourceDirName":"services/crud-service/reference","slug":"/services/crud-service/reference/secrets-api","permalink":"/empowernow_docs/docs/services/crud-service/reference/secrets-api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/reference/secrets-api.md","tags":[],"version":"current","frontMatter":{"title":"Secrets API reference","description":"Endpoints, auth/scopes, provider behaviors, auditing, and compose examples for `/api/secrets`."},"sidebar":"tutorialSidebar","previous":{"title":"loopback_mcp_1_0","permalink":"/empowernow_docs/docs/services/crud-service/reference/releases/loopback_mcp_1_0"},"next":{"title":"Backend for Frontend (BFF)","permalink":"/empowernow_docs/docs/services/bff/"}}');var i=n(74848),c=n(28453);const d={title:"Secrets API reference",description:"Endpoints, auth/scopes, provider behaviors, auditing, and compose examples for `/api/secrets`."},l=void 0,o={},t=[{value:"What the Secrets API does",id:"what-the-secrets-api-does",level:2},{value:"Authentication and authorization",id:"authentication-and-authorization",level:2},{value:"Endpoints and provider behavior",id:"endpoints-and-provider-behavior",level:2},{value:"Auditing",id:"auditing",level:2},{value:"Endpoint \u2192 scopes and PDP purposes",id:"endpoint--scopes-and-pdp-purposes",level:2},{value:"How Vault providers integrate",id:"how-vault-providers-integrate",level:2},{value:"Using in compose (examples)",id:"using-in-compose-examples",level:2},{value:"Minimal API examples",id:"minimal-api-examples",level:2}];function a(e){const s={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"what-the-secrets-api-does",children:"What the Secrets API does"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Path: ",(0,i.jsx)(s.code,{children:"/api/secrets"})," (+ ",(0,i.jsx)(s.code,{children:"/metadata"}),", ",(0,i.jsx)(s.code,{children:"/keys"}),", ",(0,i.jsx)(s.code,{children:"/rotate"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:["Input: Canonical Secret URI (strictly parsed/normalized; tenant/mount guarded)","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["YAML: ",(0,i.jsx)(s.code,{children:"yaml://secret/<path>#<key>"})]}),"\n",(0,i.jsxs)(s.li,{children:["OpenBao/HashiCorp KVv2: ",(0,i.jsx)(s.code,{children:"openbao+kv2://<mount>/<path>#<key>[?version=N]"}),", ",(0,i.jsx)(s.code,{children:"hashicorp+kv2://..."})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"authentication-and-authorization",children:"Authentication and authorization"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Auth dependency is optional; enable with ",(0,i.jsx)(s.code,{children:"SECRETS_API_REQUIRE_AUTH=true"})," (uses ",(0,i.jsx)(s.code,{children:"AuthenticationService"}),")."]}),"\n",(0,i.jsxs)(s.li,{children:["OAuth scopes optional; enable with ",(0,i.jsx)(s.code,{children:"SECRETS_ENFORCE_SCOPES=true"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["POST write: ",(0,i.jsx)(s.code,{children:"secrets.write"})]}),"\n",(0,i.jsxs)(s.li,{children:["DELETE soft: ",(0,i.jsx)(s.code,{children:"secrets.delete"}),"; hard destroy: ",(0,i.jsx)(s.code,{children:"secrets.destroy"})]}),"\n",(0,i.jsxs)(s.li,{children:["POST /rotate: ",(0,i.jsx)(s.code,{children:"secrets.rotate"})]}),"\n",(0,i.jsxs)(s.li,{children:["GET /metadata|/keys: ",(0,i.jsx)(s.code,{children:"secrets.read_metadata"})]}),"\n",(0,i.jsxs)(s.li,{children:["GET read (YAML): ",(0,i.jsx)(s.code,{children:"secrets.read"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["PDP enforced via ",(0,i.jsx)(s.code,{children:"SecretPolicyService.authorize_batch"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Purposes: ",(0,i.jsx)(s.code,{children:"write"}),", ",(0,i.jsx)(s.code,{children:"delete"}),", ",(0,i.jsx)(s.code,{children:"rotate"}),", ",(0,i.jsx)(s.code,{children:"read_metadata"})," (structured 403 with details on failure)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Tenant guard: ",(0,i.jsx)(s.code,{children:"TENANT_ID"}),", ",(0,i.jsx)(s.code,{children:"TENANT_ALLOWED_MOUNTS"})," (e.g., ",(0,i.jsx)(s.code,{children:"secret"}),") constrain URIs."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"endpoints-and-provider-behavior",children:"Endpoints and provider behavior"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets"})," (create/update)","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["YAML (dev/test only): writes nested map or fragment into ",(0,i.jsx)(s.code,{children:"YAML_VAULT_PATH"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["OpenBao/HashiCorp KVv2: requires engine ",(0,i.jsx)(s.code,{children:"kv2"}),"; resolves provider via strategies; writes map, or ",(0,i.jsx)(s.code,{children:"{fragment: value}"})," if ",(0,i.jsx)(s.code,{children:"#fragment"})," present."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets?uri=..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"YAML only (dev tooling): returns map or fragment value; non\u2011YAML returns 501 (use VaultService for reads)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/value?uri=...[&version=N]"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Provider\u2011backed read through ",(0,i.jsx)(s.code,{children:"VaultService"})," (PEP). Supports KVv2 version pin query."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["DELETE ",(0,i.jsx)(s.code,{children:"/api/secrets?uri=...&destroy=[true|false]"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"YAML (dev/test only): removes fragment or node."}),"\n",(0,i.jsx)(s.li,{children:"OpenBao/HashiCorp KVv2: soft delete or hard destroy via provider."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/rotate"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"YAML: update semantics."}),"\n",(0,i.jsxs)(s.li,{children:["KVv2: uses ",(0,i.jsx)(s.code,{children:"RotationController"})," to upsert new value (payload as ",(0,i.jsx)(s.code,{children:"{fragment: value}"})," or full map)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/metadata?prefix=..."})," and ",(0,i.jsx)(s.code,{children:"/api/secrets/keys?uri=..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"YAML only (dev tooling) for metadata listing and key enumeration."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/metadata/detail?uri=..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"KVv2 provider metadata (versions and custom metadata) for a given path."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/versions?uri=..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"KVv2 versions listing for a given path."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/search?q=...&prefix=..."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["YAML search by path/fragment. KVv2 shallow traversal when provider supports ",(0,i.jsx)(s.code,{children:"list_keys"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/undelete"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"KVv2 undelete specific versions."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/destroy-versions"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"KVv2 hard\u2011destroy specific versions (irreversible)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/bulk"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Batch set|delete|destroy|undelete|rotate operations with per\u2011op PDP/scope enforcement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/copy"})," and ",(0,i.jsx)(s.code,{children:"/api/secrets/move"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Copy/move secrets between URIs. PDP: read on source, write on destination. ",(0,i.jsx)(s.code,{children:"overwrite"})," guard."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/events"})," (SSE)","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Server\u2011sent events stream for local dev tooling (reads/updates/deletes)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/audit"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"In\u2011memory audit buffer (local/dev); filterable and paginated."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"auditing",children:"Auditing"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Kafka events on read/update/delete (includes ",(0,i.jsx)(s.code,{children:"resource_ref"})," HMAC when ",(0,i.jsx)(s.code,{children:"TENANT_SALT"})," is set). Provider strategies emit provider\u2011specific audit events (e.g., KVv2 delete/destroy). Local dev also exposes SSE ",(0,i.jsx)(s.code,{children:"/events"})," and an in\u2011memory ",(0,i.jsx)(s.code,{children:"/audit"})," buffer."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"endpoint--scopes-and-pdp-purposes",children:"Endpoint \u2192 scopes and PDP purposes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.write"})," (optional) | PDP purpose ",(0,i.jsx)(s.code,{children:"write"})]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets"})," (YAML only) \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.read"})," (optional)"]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/value"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.read"})," (optional) | PDP via ",(0,i.jsx)(s.code,{children:"VaultService"})]}),"\n",(0,i.jsxs)(s.li,{children:["DELETE ",(0,i.jsx)(s.code,{children:"/api/secrets"})," \u2192 scopes ",(0,i.jsx)(s.code,{children:"secrets.delete"})," or ",(0,i.jsx)(s.code,{children:"secrets.destroy"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"delete"})]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/rotate"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.rotate"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"rotate"})]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/metadata"}),", ",(0,i.jsx)(s.code,{children:"/keys"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.read_metadata"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"read_metadata"})]}),"\n",(0,i.jsxs)(s.li,{children:["GET ",(0,i.jsx)(s.code,{children:"/api/secrets/metadata/detail"}),", ",(0,i.jsx)(s.code,{children:"/versions"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.read_metadata"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"read_metadata"})]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/undelete"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.delete"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"undelete"})]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/destroy-versions"})," \u2192 scope ",(0,i.jsx)(s.code,{children:"secrets.destroy"})," | PDP purpose ",(0,i.jsx)(s.code,{children:"destroy_versions"})]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/bulk"})," \u2192 per\u2011op scopes and PDP purposes as above"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/copy"})," \u2192 scopes ",(0,i.jsx)(s.code,{children:"secrets.read"})," + ",(0,i.jsx)(s.code,{children:"secrets.write"})," | PDP read on source, write on destination"]}),"\n",(0,i.jsxs)(s.li,{children:["POST ",(0,i.jsx)(s.code,{children:"/api/secrets/move"})," \u2192 same as copy, then delete source (soft)"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"how-vault-providers-integrate",children:"How Vault providers integrate"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["YAML provider (dev\u2011only):","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"File\u2011backed; path maps to nested YAML dicts; fragment is the key."}),"\n",(0,i.jsxs)(s.li,{children:["Writes/deletes blocked outside dev/test (",(0,i.jsx)(s.code,{children:"ENVIRONMENT"})," guard)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["OpenBao/HashiCorp providers (KVv2):","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Config via ",(0,i.jsx)(s.code,{children:"VAULT_URL"}),", ",(0,i.jsx)(s.code,{children:"VAULT_TOKEN"})," (or AppRole). Other ",(0,i.jsx)(s.code,{children:"VAULT_*"})," vars optional (defaults applied)."]}),"\n",(0,i.jsxs)(s.li,{children:["Path is ",(0,i.jsx)(s.code,{children:"<mount>/<path>"}),"; fragment selects a key from KV payload."]}),"\n",(0,i.jsxs)(s.li,{children:["Versioned reads supported with ",(0,i.jsx)(s.code,{children:"?version=N"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"using-in-compose-examples",children:"Using in compose (examples)"}),"\n",(0,i.jsx)(s.p,{children:"YAML pointer"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"environment:\r\n  - CREDENTIAL_ENCRYPTION_KEY_POINTER=yaml://secret/crud#CREDENTIAL_ENCRYPTION_KEY\r\n  - YAML_VAULT_PATH=/app/config/data/dev_secrets.yaml\r\n  - TENANT_ID=dev\r\n  - TENANT_ALLOWED_MOUNTS=secret\n"})}),"\n",(0,i.jsx)(s.p,{children:"OpenBao pointer"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"environment:\r\n  - CREDENTIAL_ENCRYPTION_KEY_POINTER=openbao+kv2://secret/crud#CREDENTIAL_ENCRYPTION_KEY\r\n  - VAULT_URL=http://openbao:8200\r\n  - VAULT_TOKEN=root\r\n  - TENANT_ID=dev\r\n  - TENANT_ALLOWED_MOUNTS=secret\n"})}),"\n",(0,i.jsx)(s.h2,{id:"minimal-api-examples",children:"Minimal API examples"}),"\n",(0,i.jsx)(s.p,{children:"Create/update KVv2"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'POST /api/secrets\r\n{ "uri": "openbao+kv2://secret/app/test#value", "value": { "value": "hello" } }\n'})}),"\n",(0,i.jsx)(s.p,{children:"Read YAML"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"GET /api/secrets?uri=yaml://secret/crud#CREDENTIAL_ENCRYPTION_KEY\n"})}),"\n",(0,i.jsx)(s.p,{children:"Read KVv2 via PEP"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"GET /api/secrets/value?uri=openbao+kv2://secret/app/test#value&version=2\n"})}),"\n",(0,i.jsx)(s.p,{children:"Delete KVv2"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"DELETE /api/secrets?uri=openbao+kv2://secret/app/test#value\r\n# destroy=true for hard delete\n"})}),"\n",(0,i.jsx)(s.p,{children:"Undelete versions (KVv2)"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'POST /api/secrets/undelete\r\n{ "uri": "openbao+kv2://secret/app/test", "versions": [3,4] }\n'})}),"\n",(0,i.jsx)(s.p,{children:"Destroy versions (KVv2)"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'POST /api/secrets/destroy-versions\r\n{ "uri": "openbao+kv2://secret/app/test", "versions": [1,2] }\n'})}),"\n",(0,i.jsx)(s.p,{children:"Bulk operations"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'POST /api/secrets/bulk\r\n{ "operations": [\r\n  { "op": "set", "uri": "yaml://secret/env#NEW", "value": "abc" },\r\n  { "op": "delete", "uri": "openbao+kv2://secret/app/test#value" }\r\n]}\n'})}),"\n",(0,i.jsx)(s.p,{children:"Copy"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'POST /api/secrets/copy\r\n{ "fromUri": "yaml://secret/env#FROM", "toUri": "yaml://secret/env#TO", "overwrite": false }\n'})}),"\n",(0,i.jsx)(s.p,{children:"Search"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"GET /api/secrets/search?q=token&prefix=yaml://secret/env/\n"})}),"\n",(0,i.jsx)(s.p,{children:"Notes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Reads for non\u2011YAML should happen through ",(0,i.jsx)(s.code,{children:"VaultService"})," (PEP) in app code; the API\u2019s YAML read is for dev tooling."]}),"\n",(0,i.jsx)(s.li,{children:"Scopes/PDP can be turned on progressively with the env flags above."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);
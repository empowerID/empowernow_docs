"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4487],{27799:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"services/crud-service/secrets/SECRETS_HA_OPENBAO","title":"OpenBao to Production \u2014 HA, Load Balancing, and Integration","description":"Plan and run OpenBao (Vault-compatible) in HA with Raft and a load balancer, and wire CRUDService securely","source":"@site/docs/services/crud-service/secrets/SECRETS_HA_OPENBAO.md","sourceDirName":"services/crud-service/secrets","slug":"/services/crud-service/secrets/SECRETS_HA_OPENBAO","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_HA_OPENBAO","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/secrets/SECRETS_HA_OPENBAO.md","tags":[],"version":"current","frontMatter":{"title":"OpenBao to Production \u2014 HA, Load Balancing, and Integration","description":"Plan and run OpenBao (Vault-compatible) in HA with Raft and a load balancer, and wire CRUDService securely"},"sidebar":"tutorialSidebar","previous":{"title":"Secrets Management DevOps Guide","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE"},"next":{"title":"SECRETS_MIGRATION_GUIDE","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_MIGRATION_GUIDE"}}');var a=r(74848),t=r(28453);const s={title:"OpenBao to Production \u2014 HA, Load Balancing, and Integration",description:"Plan and run OpenBao (Vault-compatible) in HA with Raft and a load balancer, and wire CRUDService securely"},i=void 0,c={},l=[{value:"OpenBao to Production: High-Availability (HA), Load Balancing, and Integration",id:"openbao-to-production-high-availability-ha-load-balancing-and-integration",level:2},{value:"1) Plan the HA topology",id:"1-plan-the-ha-topology",level:2},{value:"2) Configure OpenBao nodes (Raft + TLS)",id:"2-configure-openbao-nodes-raft--tls",level:2},{value:"3) Expose OpenBao via Traefik (Load balancer URL)",id:"3-expose-openbao-via-traefik-load-balancer-url",level:2},{value:"4) Point CRUDService to OpenBao (production settings)",id:"4-point-crudservice-to-openbao-production-settings",level:2},{value:"5) Verify integration with real API calls",id:"5-verify-integration-with-real-api-calls",level:2},{value:"6) Scaling and clustering operations",id:"6-scaling-and-clustering-operations",level:2},{value:"7) Security hardening checklist",id:"7-security-hardening-checklist",level:2},{value:"8) Kubernetes example (optional)",id:"8-kubernetes-example-optional",level:2},{value:"9) Why this is \u201creal\u201d in our codebase",id:"9-why-this-is-real-in-our-codebase",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"openbao-to-production-high-availability-ha-load-balancing-and-integration",children:"OpenBao to Production: High-Availability (HA), Load Balancing, and Integration"}),"\n",(0,a.jsx)(n.p,{children:"This guide explains how to take our secrets engine to production with OpenBao (Vault-compatible), enable HA with Raft, front it with a load balancer (Traefik), and wire our CRUDService to use it securely. All steps and config align with code in this repo and the existing Docker Compose stack."}),"\n",(0,a.jsx)(n.p,{children:"References in this repository:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["OpenBao dev container (for local): see ",(0,a.jsx)(n.code,{children:"openbao"})," service in ",(0,a.jsx)(n.code,{children:"CRUDService/docker-compose-authzen4.yml"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["CRUDService provider env wiring (fallbacks): ",(0,a.jsx)(n.code,{children:"src/services/vault_service.py"})," \u2192 ",(0,a.jsx)(n.code,{children:"load_provider_config_generic"})," uses ",(0,a.jsx)(n.code,{children:"OPENBAO_*"})," or ",(0,a.jsx)(n.code,{children:"VAULT_*"})," env keys."]}),"\n",(0,a.jsxs)(n.li,{children:["OpenBao KVv2 strategy: ",(0,a.jsx)(n.code,{children:"src/vault_strategies/openbao_vault_strategy.py"})," (token renewal, KVv2 read/write, versions/lifecycle)."]}),"\n",(0,a.jsxs)(n.li,{children:["Canonical URIs and tenant guard: ",(0,a.jsx)(n.code,{children:"src/secret_uri.py"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Secrets API and rotation controller: ",(0,a.jsx)(n.code,{children:"src/api/secrets_routes.py"}),", ",(0,a.jsx)(n.code,{children:"src/services/rotation_controller.py"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"1-plan-the-ha-topology",children:"1) Plan the HA topology"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Run 3\u20135 OpenBao nodes with Raft storage for quorum."}),"\n",(0,a.jsxs)(n.li,{children:["Each node serves HTTPS for clients (",(0,a.jsx)(n.code,{children:"api_addr"}),") and a cluster address (",(0,a.jsx)(n.code,{children:"cluster_addr"}),")."]}),"\n",(0,a.jsx)(n.li,{children:"Put a load balancer (Traefik) in front for client traffic, or point the client (CRUDService) to any node URL (the hvac client follows leader redirects). We recommend a LB URL for stable DNS."}),"\n",(0,a.jsxs)(n.li,{children:["Use KVv2 at mount ",(0,a.jsx)(n.code,{children:"secret"})," (matches our default tenant guard and examples)."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"2-configure-openbao-nodes-raft--tls",children:"2) Configure OpenBao nodes (Raft + TLS)"}),"\n",(0,a.jsx)(n.p,{children:"Example node config (HCL), repeat per node with unique ports and raft path:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-hcl",children:'storage "raft" {\r\n  path    = "/opt/openbao/data"\r\n  node_id = "node1"\r\n}\r\n\r\nlistener "tcp" {\r\n  address             = "0.0.0.0:8200"\r\n  cluster_address     = "0.0.0.0:8201"\r\n  tls_disable         = 0\r\n  tls_cert_file       = "/opt/openbao/tls/server.crt"\r\n  tls_key_file        = "/opt/openbao/tls/server.key"\r\n  tls_client_ca_file  = "/opt/openbao/tls/ca.crt"\r\n}\r\n\r\napi_addr     = "https://openbao-1.internal:8200"\r\ncluster_addr = "https://openbao-1.internal:8201"\r\n\r\ndisable_mlock = true\r\nui            = true\n'})}),"\n",(0,a.jsx)(n.p,{children:"Initialization and join (run on the first node, then join others):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# On node 1 only\r\nopenbao operator init -key-shares=5 -key-threshold=3 > /tmp/init.json\r\nopenbao operator unseal $(jq -r '.unseal_keys_b64[0]' /tmp/init.json)\r\nopenbao operator unseal $(jq -r '.unseal_keys_b64[1]' /tmp/init.json)\r\nopenbao operator unseal $(jq -r '.unseal_keys_b64[2]' /tmp/init.json)\r\n\r\n# On node 2/3: start with same config (different node_id/path), then join raft\r\nopenbao operator raft join https://openbao-1.internal:8200\r\nopenbao operator unseal <key1>\r\nopenbao operator unseal <key2>\r\nopenbao operator unseal <key3>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Enable KVv2 at ",(0,a.jsx)(n.code,{children:"secret"})," and create a policy and AppRole for CRUDService:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Set root token from init.json for bootstrap only\r\nexport VAULT_ADDR=https://openbao-1.internal:8200\r\nexport VAULT_TOKEN=$(jq -r .root_token /tmp/init.json)\r\n\r\n# Enable KV v2 at mount "secret" (idempotent)\r\nopenbao secrets enable -path=secret -version=2 kv\r\n\r\n# Policy: read/write/metadata on our namespace\r\ncat > crudservice.hcl <<\'POL\'\r\npath "secret/*" {\r\n  capabilities = ["create", "update", "read", "list", "delete"]\r\n}\r\npath "sys/leases/*" { capabilities = ["read", "list"] }\r\nPOL\r\nopenbao policy write crudservice crudservice.hcl\r\n\r\n# AppRole for CRUDService (recommended over static tokens)\r\nopenbao auth enable approle || true\r\nopenbao write auth/approle/role/crudservice token_policies="crudservice" token_ttl="1h" token_max_ttl="4h"\r\nopenbao read -format=json auth/approle/role/crudservice/role-id | jq -r .data.role_id\r\nopenbao write -format=json -f auth/approle/role/crudservice/secret-id | jq -r .data.secret_id\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Store ",(0,a.jsx)(n.code,{children:"role_id"})," and ",(0,a.jsx)(n.code,{children:"secret_id"})," (or mint a periodic token) in your secret store for the platform (Kubernetes Secret, Azure Key Vault, etc.)."]}),"\n",(0,a.jsx)(n.h2,{id:"3-expose-openbao-via-traefik-load-balancer-url",children:"3) Expose OpenBao via Traefik (Load balancer URL)"}),"\n",(0,a.jsxs)(n.p,{children:["In our stack, Traefik is already present (",(0,a.jsx)(n.code,{children:"traefik"})," service in ",(0,a.jsx)(n.code,{children:"docker-compose-authzen4.yml"}),"). For HA with multiple OpenBao nodes, define a file-based Traefik service with multiple backends and a router. Example ",(0,a.jsx)(n.code,{children:"traefik/dynamic.yml"})," addition:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'http:\r\n  services:\r\n    openbao-cluster:\r\n      loadBalancer:\r\n        servers:\r\n          - url: "https://openbao-1.internal:8200"\r\n          - url: "https://openbao-2.internal:8200"\r\n          - url: "https://openbao-3.internal:8200"\r\n        passHostHeader: true\r\n  routers:\r\n    openbao:\r\n      rule: Host(`vault.ocg.labs.empowernow.ai`)\r\n      entryPoints: [websecure]\r\n      tls: {}\r\n      service: openbao-cluster\n'})}),"\n",(0,a.jsx)(n.p,{children:"Ensure Traefik trusts OpenBao\u2019s TLS CA (mount CA into Traefik or use ACME certs for public DNS)."}),"\n",(0,a.jsxs)(n.p,{children:["Note: In ",(0,a.jsx)(n.code,{children:"docker-compose-authzen4.yml"}),", we currently run a dev OpenBao (",(0,a.jsx)(n.code,{children:'command: ["server", "-dev", ...]'}),") and expose it via Traefik labels:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'openbao:\r\n  image: ghcr.io/openbao/openbao:latest\r\n  # ...\r\n  labels:\r\n    - "traefik.enable=true"\r\n    - "traefik.http.routers.openbao.rule=Host(`vault.ocg.labs.empowernow.ai`)"\r\n    - "traefik.http.routers.openbao.entrypoints=websecure"\r\n    - "traefik.http.routers.openbao.tls=true"\r\n    - "traefik.http.services.openbao.loadbalancer.server.port=8200"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For production, replace the dev container with three HA nodes configured as above, and use the file-defined ",(0,a.jsx)(n.code,{children:"openbao-cluster"})," service to load-balance across them."]}),"\n",(0,a.jsx)(n.h2,{id:"4-point-crudservice-to-openbao-production-settings",children:"4) Point CRUDService to OpenBao (production settings)"}),"\n",(0,a.jsxs)(n.p,{children:["Our code reads provider config via ",(0,a.jsx)(n.code,{children:"OPENBAO_*"})," (or ",(0,a.jsx)(n.code,{children:"VAULT_*"})," fallbacks). Update the CRUDService env in Compose/Kubernetes to target the LB URL and enable SSL verification."]}),"\n",(0,a.jsxs)(n.p,{children:["From ",(0,a.jsx)(n.code,{children:"docker-compose-authzen4.yml"})," (dev snippet today):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# dev (uses VAULT_* fallbacks)\r\n- VAULT_URL=http://openbao:8200\r\n- VAULT_TOKEN=root\r\n- VAULT_VERIFY_SSL=False\n"})}),"\n",(0,a.jsx)(n.p,{children:"Production override (recommend using provider-specific keys):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'environment:\r\n  OPENBAO_URL: https://vault.ocg.labs.empowernow.ai\r\n  # Use AppRole (preferred) or token\r\n  # OPENBAO_ROLE_ID: ${OPENBAO_ROLE_ID}\r\n  # OPENBAO_SECRET_ID: ${OPENBAO_SECRET_ID}\r\n  OPENBAO_TOKEN: ${OPENBAO_TOKEN}          # optional if not using AppRole\r\n  VAULT_TIMEOUT: 30\r\n  VAULT_VERIFY_SSL: "true"\r\n  VAULT_POOL_SIZE: 10\r\n  VAULT_TOKEN_RENEWAL_THRESHOLD: 600\r\n  VAULT_MAX_CONCURRENT_OPERATIONS: 50\r\n  TENANT_ID: acme\r\n  TENANT_ALLOWED_MOUNTS: secret\r\n  SECRETS_API_REQUIRE_AUTH: "true"\r\n  SECRETS_ENFORCE_SCOPES: "true"\r\n  SECRETS_AUDIENCE: crud.secrets\r\n  TENANT_SALT: ${TENANT_SALT}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Notes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Our hvac client accepts ",(0,a.jsx)(n.code,{children:"verify=True"}),"; if using a private CA, install the CA bundle in the container trust store or set ",(0,a.jsx)(n.code,{children:"REQUESTS_CA_BUNDLE=/path/ca.crt"})," in the container environment."]}),"\n",(0,a.jsxs)(n.li,{children:["The code enforces KVv2 for writes/rotation; keep the ",(0,a.jsx)(n.code,{children:"secret"})," mount as KVv2."]}),"\n",(0,a.jsxs)(n.li,{children:["Tenant guard will reject mounts not in ",(0,a.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"5-verify-integration-with-real-api-calls",children:"5) Verify integration with real API calls"}),"\n",(0,a.jsxs)(n.p,{children:["Rotation (controller: ",(0,a.jsx)(n.code,{children:"RotationController.rotate_kvv2"}),") and reads (PEP: ",(0,a.jsx)(n.code,{children:"VaultService.get_credentials"}),") are wired via the Secrets API."]}),"\n",(0,a.jsxs)(n.p,{children:["Rotate a fragment at ",(0,a.jsx)(n.code,{children:"secret/app/api#token"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -sS -X POST "$CRUD_BASE/api/secrets/rotate" \\\r\n  -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  --data \'{\r\n    "uri": "openbao+kv2://secret/app/api#token",\r\n    "value": {"token": "new-value"}\r\n  }\'\n'})}),"\n",(0,a.jsx)(n.p,{children:"Read current value (provider-backed):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -sS "$CRUD_BASE/api/secrets/value?uri=openbao+kv2://secret/app/api#token" \\\r\n  -H "Authorization: Bearer $TOKEN"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Version metadata (KVv2):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -sS "$CRUD_BASE/api/secrets/versions?uri=openbao+kv2://secret/app/api" \\\r\n  -H "Authorization: Bearer $TOKEN"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"6-scaling-and-clustering-operations",children:"6) Scaling and clustering operations"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Add a node: bring up a new node with the same Raft config (new ",(0,a.jsx)(n.code,{children:"node_id"}),"), run ",(0,a.jsx)(n.code,{children:"openbao operator raft join https://leader:8200"}),", unseal with quorum keys."]}),"\n",(0,a.jsxs)(n.li,{children:["Replace a node: stop node, remove from raft (if needed) with ",(0,a.jsx)(n.code,{children:"openbao operator raft remove-peer"}),", add replacement via join."]}),"\n",(0,a.jsx)(n.li,{children:"Autopilot and snapshots: enable periodic raft snapshots and monitor autopilot health for drift."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"7-security-hardening-checklist",children:"7) Security hardening checklist"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"TLS everywhere (client and cluster addresses); rotate certs on schedule."}),"\n",(0,a.jsxs)(n.li,{children:["Use AppRole or short\u2011lived tokens; ensure token can be renewed (our strategy calls ",(0,a.jsx)(n.code,{children:"lookup_self"})," and ",(0,a.jsx)(n.code,{children:"renew_self"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Restrict policies to minimal paths (e.g., ",(0,a.jsx)(n.code,{children:"secret/app/*"})," instead of ",(0,a.jsx)(n.code,{children:"secret/*"})," when possible)."]}),"\n",(0,a.jsxs)(n.li,{children:["In CRUDService, enable ",(0,a.jsx)(n.code,{children:"SECRETS_API_REQUIRE_AUTH"})," and ",(0,a.jsx)(n.code,{children:"SECRETS_ENFORCE_SCOPES"})," and set ",(0,a.jsx)(n.code,{children:"SECRETS_AUDIENCE"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Set ",(0,a.jsx)(n.code,{children:"TENANT_SALT"})," to enable non\u2011leaky audit references."]}),"\n",(0,a.jsxs)(n.li,{children:["Keep ",(0,a.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"})," tight (e.g., ",(0,a.jsx)(n.code,{children:"secret"})," only)."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"8-kubernetes-example-optional",children:"8) Kubernetes example (optional)"}),"\n",(0,a.jsxs)(n.p,{children:["Use a Service/Ingress for the OpenBao cluster and inject provider creds into CRUDService via ",(0,a.jsx)(n.code,{children:"Secret"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\r\nkind: Secret\r\nmetadata: { name: crud-openbao }\r\nstringData:\r\n  OPENBAO_ROLE_ID: "..."\r\n  OPENBAO_SECRET_ID: "..."\r\n---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata: { name: crudservice }\r\nspec:\r\n  template:\r\n    spec:\r\n      containers:\r\n        - name: crud\r\n          image: your-registry/crudservice:latest\r\n          env:\r\n            - name: OPENBAO_URL\r\n              value: https://vault.ocg.labs.empowernow.ai\r\n            - name: OPENBAO_ROLE_ID\r\n              valueFrom: { secretKeyRef: { name: crud-openbao, key: OPENBAO_ROLE_ID } }\r\n            - name: OPENBAO_SECRET_ID\r\n              valueFrom: { secretKeyRef: { name: crud-openbao, key: OPENBAO_SECRET_ID } }\r\n            - name: VAULT_VERIFY_SSL\r\n              value: "true"\r\n            - name: TENANT_ALLOWED_MOUNTS\r\n              value: secret\r\n            - name: SECRETS_API_REQUIRE_AUTH\r\n              value: "true"\r\n            - name: SECRETS_ENFORCE_SCOPES\r\n              value: "true"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"9-why-this-is-real-in-our-codebase",children:"9) Why this is \u201creal\u201d in our codebase"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["The OpenBao strategy uses hvac with token renewal and KVv2 helpers: see ",(0,a.jsx)(n.code,{children:"openbao_vault_strategy.py"})," (",(0,a.jsx)(n.code,{children:"create_or_update_secret"}),", ",(0,a.jsx)(n.code,{children:"read_secret_metadata"}),", ",(0,a.jsx)(n.code,{children:"undelete_versions"}),", ",(0,a.jsx)(n.code,{children:"destroy_secret_versions"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Provider configuration and fallbacks are loaded from env: ",(0,a.jsx)(n.code,{children:"vault_service.py"})," \u2192 ",(0,a.jsx)(n.code,{children:"load_provider_config_generic"})," accepts ",(0,a.jsx)(n.code,{children:"OPENBAO_URL"}),", ",(0,a.jsx)(n.code,{children:"OPENBAO_TOKEN"}),", AppRole env, or ",(0,a.jsx)(n.code,{children:"VAULT_URL"}),"/",(0,a.jsx)(n.code,{children:"VAULT_TOKEN"})," fallbacks; ",(0,a.jsx)(n.code,{children:"VAULT_VERIFY_SSL"})," is respected and coerced to boolean."]}),"\n",(0,a.jsxs)(n.li,{children:["The Secrets API endpoints call the PEP (",(0,a.jsx)(n.code,{children:"VaultService.get_credentials"}),") and controller (",(0,a.jsx)(n.code,{children:"RotationController"}),"), enforcing PDP purposes and optional OAuth scopes (",(0,a.jsx)(n.code,{children:"SECRETS_ENFORCE_SCOPES"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["The Compose stack already exposes OpenBao and CRUDService; see ",(0,a.jsx)(n.code,{children:"docker-compose-authzen4.yml"})," for dev defaults and Traefik routing we build upon for production HA."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var o=r(96540);const a={},t=o.createContext(a);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);
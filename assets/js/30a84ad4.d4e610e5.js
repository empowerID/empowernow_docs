"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3264],{3893:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"services/experience/plugins","title":"Experience Plugin System (Primer)","description":"This is a concise primer. For the full canonical architecture and operations, see ./experience_plugins. Development steps are in ./quickstart and the full ops/security/API/versioning references are linked from the Experience index.","source":"@site/docs/services/experience/plugins.md","sourceDirName":"services/experience","slug":"/services/experience/plugins","permalink":"/empowernow_docs/docs/services/experience/plugins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/experience/plugins.md","tags":[],"version":"current","frontMatter":{"title":"Experience Plugin System (Primer)","sidebar_label":"Plugins (Primer)"},"sidebar":"tutorialSidebar","previous":{"title":"Plugins Storage & Deployment","permalink":"/empowernow_docs/docs/services/experience/plugins-storage-deployment"},"next":{"title":"QA Test Plan","permalink":"/empowernow_docs/docs/services/experience/qa-test-plan"}}');var r=i(74848),t=i(28453);const l={title:"Experience Plugin System (Primer)",sidebar_label:"Plugins (Primer)"},a=void 0,d={},o=[{value:"Background &amp; context",id:"background--context",level:2},{value:"Goals",id:"goals",level:2},{value:"High\u2011level flow",id:"highlevel-flow",level:2},{value:"Contract",id:"contract",level:2},{value:"BFF enforcement (required)",id:"bff-enforcement-required",level:2},{value:"Allow\u2011list templates (updated)",id:"allowlist-templates-updated",level:3},{value:"Quarantine (kill switch)",id:"quarantine-kill-switch",level:3},{value:"Response hygiene",id:"response-hygiene",level:3},{value:"CSP &amp; routing",id:"csp--routing",level:2},{value:"DX",id:"dx",level:2},{value:"Testing",id:"testing",level:2},{value:"Appendices",id:"appendices",level:2},{value:"Visual: end\u2011to\u2011end governance",id:"visual-endtoend-governance",level:2},{value:"Reference snippets (ready to drop in)",id:"reference-snippets-ready-to-drop-in",level:2},{value:"Gating flow (visual)",id:"gating-flow-visual",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This is a concise primer. For the full canonical architecture and operations, see ",(0,r.jsx)(n.code,{children:"./experience_plugins"}),". Development steps are in ",(0,r.jsx)(n.code,{children:"./quickstart"})," and the full ops/security/API/versioning references are linked from the Experience index."]}),"\n",(0,r.jsx)(n.h2,{id:"background--context",children:"Background & context"}),"\n",(0,r.jsx)(n.p,{children:"Most enterprise portals bolt on extensions with iframes or cross\u2011origin script tags. That breaks CSP, complicates zero\u2011trust headers, and circumvents centralized authorization. The Experience plugin system takes a stricter path:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Same\u2011origin, BFF\u2011proxied bundle import keeps CSP ",(0,r.jsx)(n.code,{children:"script\u2011src 'self'"})]}),"\n",(0,r.jsxs)(n.li,{children:["BFF enforces per\u2011plugin method/path allow\u2011lists and SSE channels, stamping ",(0,r.jsx)(n.code,{children:"X\u2011Plugin\u2011Id"})," for every request"]}),"\n",(0,r.jsx)(n.li,{children:"The SPA pre\u2011gates routes/widgets with OpenID AuthZEN batch evaluations so unauthorized contributions never render"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Compared to market leaders:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SSO launchers (Okta/ForgeRock) expose tiles; they don\u2019t ship a PDP\u2011aware extension model for actions and widgets"}),"\n",(0,r.jsx)(n.li,{children:"ITSM portals allow UI widgets but often rely on cross\u2011origin scripts; Experience maintains strict CSP and centralized policy"}),"\n",(0,r.jsx)(n.li,{children:"We emphasize observability (telemetry endpoint, OTEL) and governance (allow\u2011lists, rate limits), not just DX"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"goals",children:"Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Secure, extensible end\u2011user pages/widgets integrated into Experience SPA"}),"\n",(0,r.jsxs)(n.li,{children:["Same\u2011origin ESM bundles via BFF proxy (CSP ",(0,r.jsx)(n.code,{children:"script-src 'self'"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Server\u2011side enforcement by BFF of per\u2011plugin permissions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"highlevel-flow",children:"High\u2011level flow"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant UI as Experience SPA\n  participant B as BFF\n  participant R as Registry\n  participant P as Plugin Bundle\n\n  UI->>B: GET /api/plugins/manifests\n  B->>R: Fetch manifests\n  R--\x3e>B: manifests[]\n  B--\x3e>UI: manifests[]\n  loop per manifest\n    UI->>B: import /api/plugins/bundle?entry=...&id=...\n    B--\x3e>UI: ESM bundle (CSP safe)\n    UI->>UI: resolve manifest.contributions to plugin.routes/widgets\n  end"}),"\n",(0,r.jsx)(n.h2,{id:"contract",children:"Contract"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Manifest","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"}),", ",(0,r.jsx)(n.code,{children:"version"}),", ",(0,r.jsx)(n.code,{children:"engine.experience"})," (semver range)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contributions.routes[{ path, component }]"}),", ",(0,r.jsx)(n.code,{children:"contributions.widgets[{ slot, component }]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"permissions.api[{ method, path }]"}),", ",(0,r.jsx)(n.code,{children:"permissions.sse[string]"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Runtime loader","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Discovery: ",(0,r.jsx)(n.code,{children:"/api/plugins/manifests"})]}),"\n",(0,r.jsxs)(n.li,{children:["Bundle import: ",(0,r.jsx)(n.code,{children:"/api/plugins/bundle?entry=<url>&id=<pluginId>"})]}),"\n",(0,r.jsxs)(n.li,{children:["Resolve ",(0,r.jsx)(n.code,{children:"manifest"})," \u2192 ",(0,r.jsx)(n.code,{children:"plugin.routes/widgets"})," records"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["SDK (per plugin)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"api.fetch"}),", ",(0,r.jsx)(n.code,{children:"api.useQuery"}),", ",(0,r.jsx)(n.code,{children:"sse.subscribe"}),", ",(0,r.jsx)(n.code,{children:"authz.evaluate"}),", ",(0,r.jsx)(n.code,{children:"logger"}),", ",(0,r.jsx)(n.code,{children:"telemetry"})]}),"\n",(0,r.jsxs)(n.li,{children:["Stamps ",(0,r.jsx)(n.code,{children:"X-Plugin-Id"})," on every request"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Subject normalization: When showing PDP examples, use the canonical subject\n",(0,r.jsx)(n.code,{children:'{ "type": "account", "id": "auth:account:{provider}:{user_id}" }'}),". Older\n",(0,r.jsx)(n.code,{children:'{ "type": "user" }'})," forms are deprecated in the SPA."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"bff-enforcement-required",children:"BFF enforcement (required)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Allow\u2011list per plugin id: method + path prefixes"}),"\n",(0,r.jsxs)(n.li,{children:["Require ",(0,r.jsx)(n.code,{children:"X\u2011Plugin\u2011Id"}),"; attach tenant/context; rate\u2011limit per plugin"]}),"\n",(0,r.jsx)(n.li,{children:"SSE: only declared channels; close unauthorized streams"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"allowlist-templates-updated",children:"Allow\u2011list templates (updated)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rules are templated by method + path with optional param shapes; paths are normalized and compiled to regex"}),"\n",(0,r.jsx)(n.li,{children:"Examples:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"permissions:\n  api:\n    - method: GET\n      path: /api/plugins/secure-echo\n    - method: POST\n      path: /api/crud/tasks/{uuid}\n    - method: GET\n      path: /api/workflow/status/{id}\n  sse:\n    - /api/events/tasks/summary\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Violations return 403 with header ",(0,r.jsx)(n.code,{children:"X-Allowlist-Violation: 1"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quarantine-kill-switch",children:"Quarantine (kill switch)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Immediate ops control to disable a plugin without redeploy"}),"\n",(0,r.jsxs)(n.li,{children:["Endpoints:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"POST /api/plugins/quarantine/{plugin_id}"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"POST /api/plugins/unquarantine/{plugin_id}"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["When quarantined, bundle and API/SSE calls are blocked with ",(0,r.jsx)(n.code,{children:"X-Plugin-Quarantined: 1"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"response-hygiene",children:"Response hygiene"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Vary: Cookie, X-Plugin-Id"})," on ",(0,r.jsx)(n.code,{children:"/api/plugins/manifests"})," and ",(0,r.jsx)(n.code,{children:"/api/plugins/bundle"})]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n  A[Request from plugin] --\x3e H[Has X-Plugin-Id?]\n  H --\x3e|no| F[403]\n  H --\x3e|yes| L[Check allow-list method+path]\n  L --\x3e|deny| F\n  L --\x3e|allow| U[Upstream -> service]"}),"\n",(0,r.jsx)(n.h2,{id:"csp--routing",children:"CSP & routing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CSP remains strict: only same\u2011origin scripts via BFF bundle proxy"}),"\n",(0,r.jsxs)(n.li,{children:["Traefik SPA router excludes ",(0,r.jsx)(n.code,{children:"/api/"}),", ",(0,r.jsx)(n.code,{children:"/auth/"}),", ",(0,r.jsx)(n.code,{children:"/events/"}),", ",(0,r.jsx)(n.code,{children:"/configs/stream"}),", ",(0,r.jsx)(n.code,{children:"/stream/"})]}),"\n",(0,r.jsx)(n.li,{children:"SSE prefixes are normalized; API routing is template\u2011aware for precise matching"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dx",children:"DX"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simple SDK; clear errors; telemetry hooks"}),"\n",(0,r.jsx)(n.li,{children:"Dev mode (optional): allow localhost plugin URLs only in development"}),"\n",(0,r.jsxs)(n.li,{children:["Import maps groundwork: peer deps (react, react-dom, @empowernow/ui) can be pinned and served same\u2011origin under ",(0,r.jsx)(n.code,{children:"/vendor/*"})," (externals planned)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unit: loader resolution, SDK stamps header"}),"\n",(0,r.jsxs)(n.li,{children:["E2E: hello\u2011plugin renders; 403 without ",(0,r.jsx)(n.code,{children:"X\u2011Plugin-Id"}),"; widget slot; SSE gated"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"appendices",children:"Appendices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Performance caching in loader, telemetry example, health endpoints, migration helper, plugin harness checks"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See also: Canonical reference ",(0,r.jsx)(n.code,{children:"./experience_plugins"}),", Quickstart ",(0,r.jsx)(n.code,{children:"./quickstart"}),", React App Overview ",(0,r.jsx)(n.code,{children:"./overview"}),", BFF routes & middleware ",(0,r.jsx)(n.code,{children:"../bff/devops/experience_routing"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"visual-endtoend-governance",children:"Visual: end\u2011to\u2011end governance"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n  M[Manifest] --\x3e L[Loader]\n  L --\x3e B[Import via BFF bundle proxy]\n  B --\x3e P[Plugin code]\n  P --\x3e|X-Plugin-Id| API[API request]\n  API --\x3e E[Allow-list check]\n  E --\x3e|deny| F[403 + audit]\n  E --\x3e|allow| U[Upstream service]\n  L --\x3e G{PDP batch allow?}\n  G --\x3e|no| H[Do not render]\n  G --\x3e|yes| R[Render route/widget]"}),"\n",(0,r.jsx)(n.h2,{id:"reference-snippets-ready-to-drop-in",children:"Reference snippets (ready to drop in)"}),"\n",(0,r.jsx)(n.p,{children:"Loader with base URL and caching:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/plugins/loader.ts\nimport type { LoadedPlugin, PluginManifest } from './types';\n\nexport class PluginRegistry {\n  private loaded = new Map<string, LoadedPlugin>();\n  private bundleCache = new Map<string, Promise<any>>();\n\n  async discover(): Promise<PluginManifest[]> {\n    const base = (import.meta as any).env?.VITE_BFF_BASE_URL || '';\n    const res = await fetch(`${base}/api/plugins/manifests`, { credentials: 'include' });\n    return res.json();\n  }\n\n  private importBundle(url: string) {\n    if (!this.bundleCache.has(url)) {\n      this.bundleCache.set(url, import(/* @vite-ignore */ url));\n    }\n    return this.bundleCache.get(url)!;\n  }\n\n  async load(manifest: PluginManifest): Promise<LoadedPlugin> {\n    const base = (import.meta as any).env?.VITE_BFF_BASE_URL || '';\n    const url = `${base}/api/plugins/bundle?entry=${encodeURIComponent(manifest.id)}&id=${encodeURIComponent(manifest.id)}`;\n    const mod = await this.importBundle(url);\n    const plugin: LoadedPlugin = {\n      id: manifest.id,\n      manifest,\n      routes: mod.default?.routes ?? mod.routes ?? {},\n      widgets: mod.default?.widgets ?? mod.widgets ?? {},\n    };\n    this.loaded.set(manifest.id, plugin);\n    return plugin;\n  }\n\n  getLoaded() { return Array.from(this.loaded.values()); }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Shared registry and PDP\u2011gated routes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/plugins/registry.ts\nimport type { LoadedPlugin, PluginManifest } from './types';\nimport { PluginRegistry } from './loader';\n\nlet cached: Promise<LoadedPlugin[]> | null = null;\nexport function getLoadedPlugins(): Promise<LoadedPlugin[]> {\n  if (cached) return cached;\n  const reg = new PluginRegistry();\n  cached = (async () => {\n    const manifests: PluginManifest[] = await reg.discover();\n    return Promise.all(manifests.map(m => reg.load(m)));\n  })();\n  return cached;\n}\n\n// src/plugins/DynamicRoutes.tsx (excerpt)\nconst routeGuard = useAuthorization('plugin.route', 'view', true);\nuseEffect(() => {\n  (async () => {\n    const plugins = await getLoadedPlugins();\n    const routes = plugins\n      .flatMap(p => (p.manifest.contributions?.routes || []).map(r => ({\n        path: r.path,\n        element: routeGuard.authorized ? React.createElement(p.routes?.[r.component] || (() => null)) : null\n      })))\n      .filter(r => r.element);\n    setElements(routes);\n  })();\n}, []);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dashboard widgets from plugins:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/pages/Dashboard.tsx (excerpt)\nimport { getLoadedPlugins } from '../plugins/registry';\n\nuseEffect(() => {\n  (async () => {\n    const plugins = await getLoadedPlugins();\n    const widgets = plugins.flatMap(p => Object.entries(p.widgets || {}).map(([name, Comp]) => ({\n      id: `${p.id}:${name}`,\n      title: name,\n      resource: 'plugin.widget',\n      action: 'view',\n      render: () => <Comp />,\n    })));\n    setPluginWidgets(widgets);\n  })();\n}, []);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Plugin SDK with stamped requests and SSE:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/plugins/sdk.ts (excerpt)\nexport function createPluginSdk(pluginId: string, qc: QueryClient) {\n  const base = (import.meta as any).env?.VITE_BFF_BASE_URL || '';\n  const apiFetch = async (path: string, init?: RequestInit) => {\n    const res = await fetch(`${base}/api${path.startsWith('/') ? path : '/' + path}` , {\n      ...(init || {}),\n      credentials: 'include',\n      headers: { 'X-Plugin-Id': pluginId, ...(init?.headers || {}) }\n    });\n    if (!res.ok) throw new Error(`${res.status}`);\n    return res;\n  };\n  const subscribe = (path: string, onMessage: (data: any) => void) => {\n    const url = `${base}/api${path}`;\n    const es = new EventSource(url, { withCredentials: true } as any);\n    es.onmessage = (e) => onMessage(JSON.parse(e.data));\n    return () => es.close();\n  };\n  return { /* api, sse, authz ... as described above */ };\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"gating-flow-visual",children:"Gating flow (visual)"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n  M[Manifest loaded] --\x3e R[Routes/widgets resolved]\n  R --\x3e G{Authorized via PDP}\n  G --\x3e|no| H[Hide route/widget]\n  G --\x3e|yes| S[Show in SPA]\n  S --\x3e C[Calls carry X-Plugin-Id]\n  C --\x3e E[Enforced by BFF allow-lists]"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
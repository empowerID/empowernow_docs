"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[6592],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var i=r(96540);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}},33598:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"services/crud-service/explanation/nowconnect-crud-reliability-enhancements","title":"NowConnect + CRUD Service reliability enhancements (LDAP/AD)","description":"Idempotent group membership operations, NowConnect routing validation, expanded metrics, and configurable knobs for bulk scale.","source":"@site/docs/services/crud-service/explanation/nowconnect-crud-reliability-enhancements.md","sourceDirName":"services/crud-service/explanation","slug":"/services/crud-service/explanation/nowconnect-crud-reliability-enhancements","permalink":"/empowernow_docs/docs/services/crud-service/explanation/nowconnect-crud-reliability-enhancements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/explanation/nowconnect-crud-reliability-enhancements.md","tags":[],"version":"current","frontMatter":{"id":"nowconnect-crud-reliability-enhancements","title":"NowConnect + CRUD Service reliability enhancements (LDAP/AD)","description":"Idempotent group membership operations, NowConnect routing validation, expanded metrics, and configurable knobs for bulk scale.","sidebar_label":"NowConnect + CRUD reliability"},"sidebar":"tutorialSidebar","previous":{"title":"node-handlers","permalink":"/empowernow_docs/docs/services/crud-service/explanation/node-handlers"},"next":{"title":"Secrets enforcement (PEP/PDP) \u2014 Executive overview","permalink":"/empowernow_docs/docs/services/crud-service/explanation/secrets-executive-overview"}}');var s=r(74848),o=r(28453);const c={id:"nowconnect-crud-reliability-enhancements",title:"NowConnect + CRUD Service reliability enhancements (LDAP/AD)",description:"Idempotent group membership operations, NowConnect routing validation, expanded metrics, and configurable knobs for bulk scale.",sidebar_label:"NowConnect + CRUD reliability"},t=void 0,l={},d=[{value:"Audience",id:"audience",level:3},{value:"High-level outcomes",id:"high-level-outcomes",level:2},{value:"Routing via NowConnect (OpenLDAP)",id:"routing-via-nowconnect-openldap",level:2},{value:"NowConnect cloud observability",id:"nowconnect-cloud-observability",level:2},{value:"LDAP connector changes (OpenLDAP path)",id:"ldap-connector-changes-openldap-path",level:2},{value:"Reliability changes",id:"reliability-changes",level:3},{value:"Config knobs (read from connector config)",id:"config-knobs-read-from-connector-config",level:3},{value:"Active Directory connector changes",id:"active-directory-connector-changes",level:2},{value:"Reliability changes",id:"reliability-changes-1",level:3},{value:"Operational guidance",id:"operational-guidance",level:2},{value:"Recommended settings for bulk operations",id:"recommended-settings-for-bulk-operations",level:3},{value:"Runbooks",id:"runbooks",level:3},{value:"Backwards compatibility",id:"backwards-compatibility",level:2},{value:"Recently implemented (formerly near-term roadmap)",id:"recently-implemented-formerly-near-term-roadmap",level:2},{value:"Quick validation status",id:"quick-validation-status",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"audience",children:"Audience"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CRUD Service admins and DC Ops/DevOps/SRE teams."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"high-level-outcomes",children:"High-level outcomes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"All LDAP/AD group membership operations are now idempotent and batch-safe."}),"\n",(0,s.jsx)(n.li,{children:"End-to-end routing through NowConnect is validated and observable with new metrics."}),"\n",(0,s.jsx)(n.li,{children:"Intermittent \u201cattribute type not present\u201d/\u201ctype or value exists\u201d errors no longer break workflows."}),"\n",(0,s.jsx)(n.li,{children:"Configurable knobs added for bulk scale control."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"routing-via-nowconnect-openldap",children:"Routing via NowConnect (OpenLDAP)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["New system config: ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/systems/av_openldap_nowconnect.yaml"})," points to ",(0,s.jsx)(n.code,{children:"base_url: nowconnect-cloud"})," on port ",(0,s.jsx)(n.code,{children:"389"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["To force tests/workflows through NowConnect without changing existing references to ",(0,s.jsx)(n.code,{children:"av_openldap"}),", shadow it at runtime:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Set ",(0,s.jsx)(n.code,{children:"SERVICE_CONFIG_DIR"})," to a temp directory that contains ",(0,s.jsx)(n.code,{children:"systems/av_openldap.yaml"})," copied from ",(0,s.jsx)(n.code,{children:"av_openldap_nowconnect.yaml"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example test-run override:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker compose -f docker-compose-nowconnect.yml run --rm \\\r\n  -e OPENLDAP_URL=ldap://nowconnect-cloud -e OPENLDAP_PORT=389 \\\r\n  -e OPENLDAP_BASE_DN=dc=example,dc=org \\\r\n  -e OPENLDAP_USERNAME=cn=admin,dc=example,dc=org \\\r\n  -e OPENLDAP_PASSWORD=admin \\\r\n  crud-service sh -lc '\r\n    mkdir -p /tmp/nowconnect/systems;\r\n    cp /app/config/systems/av_openldap_nowconnect.yaml /tmp/nowconnect/systems/av_openldap.yaml;\r\n    export SERVICE_CONFIG_DIR=/tmp/nowconnect;\r\n    pytest -q tests/integration/test_openldap_readonly_extended.py::test_anonymous_bind_search\r\n  '\n"})}),"\n",(0,s.jsx)(n.h2,{id:"nowconnect-cloud-observability",children:"NowConnect cloud observability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Metrics endpoint (inside container): ",(0,s.jsx)(n.code,{children:"http://localhost:8765/metrics"})]}),"\n",(0,s.jsxs)(n.li,{children:["New Prometheus metrics in ",(0,s.jsx)(n.code,{children:"nowconnect-cloud"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nowconnect_write_drain_seconds{connector,phase}"}),": histogram for socket write/drain latency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nowconnect_inbound_queue_size{connector}"}),": current inbound queue depth"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nowconnect_listener_errors_total{connector,type}"}),": error counter for listener/session"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nowconnect_pdp_decisions_total{result,connector}"}),": PDP authorize result counter"]}),"\n",(0,s.jsxs)(n.li,{children:["Existing: ",(0,s.jsx)(n.code,{children:"nowconnect_tcp_connections_total{connector}"}),", ",(0,s.jsx)(n.code,{children:"nowconnect_tcp_bytes_total{direction,connector}"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Quick check (inside container):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker compose -f docker-compose-nowconnect.yml exec nowconnect-cloud sh -lc \"\r\npython - <<'PY'\r\nimport urllib.request\r\nd = urllib.request.urlopen('http://localhost:8765/metrics', timeout=3).read().decode()\r\nfor l in d.splitlines():\r\n    if l.startswith('nowconnect_tcp_connections_total') or \\\r\n       l.startswith('nowconnect_tcp_bytes_total') or \\\r\n       l.startswith('nowconnect_write_drain_seconds') or \\\r\n       l.startswith('nowconnect_inbound_queue_size') or \\\r\n       l.startswith('nowconnect_listener_errors_total') or \\\r\n       l.startswith('nowconnect_pdp_decisions_total'):\r\n        print(l)\r\nPY\"\n"})}),"\n",(0,s.jsx)(n.p,{children:"What to look for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Connections and bytes increase while running LDAP via ",(0,s.jsx)(n.code,{children:"nowconnect-cloud"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Write/drain histogram records non-zero counts under the ",(0,s.jsx)(n.code,{children:"addomain"})," connector during activity."]}),"\n",(0,s.jsxs)(n.li,{children:["Zero or near-zero ",(0,s.jsx)(n.code,{children:"nowconnect_listener_errors_total"})," in steady state."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ldap-connector-changes-openldap-path",children:"LDAP connector changes (OpenLDAP path)"}),"\n",(0,s.jsxs)(n.p,{children:["File: ",(0,s.jsx)(n.code,{children:"CRUDService/src/connectors/ldap_connector.py"})]}),"\n",(0,s.jsx)(n.h3,{id:"reliability-changes",children:"Reliability changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Idempotent modify:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If a MODIFY_REPLACE fails due to missing attribute (e.g., \u201cnoSuchAttribute\u201d, \u201cattribute type not present\u201d), it automatically retries as MODIFY_ADD."}),"\n",(0,s.jsx)(n.li,{children:"Adds and deletes treat \u201ctype or value exists\u201d and \u201cnoSuchAttribute/attribute type not present\u201d as success."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Membership updates (",(0,s.jsx)(n.code,{children:"update_group_members"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Computes a diff from current state vs requested, to avoid redundant operations."}),"\n",(0,s.jsx)(n.li,{children:"Batches values (configurable) and applies add-first then delete, preventing schema violations."}),"\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.code,{children:"groupOfNames"})," (MUST member), avoids transitioning to zero members; optional anchor support to keep non-empty during mutations."]}),"\n",(0,s.jsxs)(n.li,{children:["Uses Permissive Modify control (OID ",(0,s.jsx)(n.code,{children:"1.2.840.113556.1.4.1413"}),") when enabled."]}),"\n",(0,s.jsx)(n.li,{children:"Top-level tolerance for benign idempotent errors returns success instead of failing the operation."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"config-knobs-read-from-connector-config",children:"Config knobs (read from connector config)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_batch_size"}),": int (default 500)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_max_concurrency"}),": int (default 4) [reserved for future concurrency controls]"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enable_permissive_modify"}),": bool (default true) \u2014 enables server-side permissive modify where supported"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enable_assertion_control"}),": bool (default true) \u2014 enables RFC 4528 optimistic concurrency for membership modifications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_anchor_dn"}),": string (optional) \u2014 DN used as temporary anchor for ",(0,s.jsx)(n.code,{children:"groupOfNames"})," to avoid zero-member transitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verify_member_dns"}),": bool (default true) \u2014 optional pre-flight DN existence checks"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example YAML snippet:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'connection:\r\n  server:\r\n    base_url: nowconnect-cloud\r\n    port: 389\r\n    use_ssl: false\r\n    base_dn: dc=example,dc=org\r\n  credentials:\r\n    username: cn=admin,dc=example,dc=org\r\n    password: admin\r\n\r\npool_size: 5\r\npage_size: 100\r\nmembership_batch_size: 500\r\nmembership_max_concurrency: 4\r\nenable_permissive_modify: true\r\nenable_assertion_control: true\r\nmembership_anchor_dn: "uid=anchor,ou=anchors,dc=example,dc=org"  # optional\r\nverify_member_dns: true\n'})}),"\n",(0,s.jsx)(n.p,{children:"Behavioral notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Previously erroring deletes/adds when already absent/present are now treated as success."}),"\n",(0,s.jsx)(n.li,{children:"REPLACE of missing attribute is auto-converted to ADD."}),"\n",(0,s.jsxs)(n.li,{children:["Add-first ordering prevents temporary schema violations for ",(0,s.jsx)(n.code,{children:"groupOfNames"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"active-directory-connector-changes",children:"Active Directory connector changes"}),"\n",(0,s.jsxs)(n.p,{children:["File: ",(0,s.jsx)(n.code,{children:"CRUDService/src/connectors/ad_connector.py"})]}),"\n",(0,s.jsx)(n.h3,{id:"reliability-changes-1",children:"Reliability changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Added the same configuration knobs as above for parity:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_batch_size"}),", ",(0,s.jsx)(n.code,{children:"membership_max_concurrency"}),", ",(0,s.jsx)(n.code,{children:"enable_permissive_modify"}),", ",(0,s.jsx)(n.code,{children:"enable_assertion_control"}),", ",(0,s.jsx)(n.code,{children:"verify_member_dns"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Group membership operations:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"add_to_group"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reads current members, computes diff, applies ADDs in batches with Permissive Modify and idempotent handling (treats \u201ctype or value exists\u201d as success)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"remove_from_group"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reads current members, computes diff, applies DELETEs in batches with Permissive Modify and idempotent handling (treats \u201cnoSuchAttribute/attribute type not present\u201d as success)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example config excerpt:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"server:\r\n  base_url: ad.example.corp\r\n  port: 636\r\n  use_ssl: true\r\npool_size: 10\r\nmembership_batch_size: 500\r\nenable_permissive_modify: true\r\nenable_assertion_control: true\r\nverify_member_dns: true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Assertion control + idempotency reduces races for concurrent writers; the connector re-diffs and retries on assertion failure."}),"\n",(0,s.jsx)(n.li,{children:"The changes avoid failing on benign duplicate/non-existent membership operations and scale large list changes in bounded batches."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"operational-guidance",children:"Operational guidance"}),"\n",(0,s.jsx)(n.h3,{id:"recommended-settings-for-bulk-operations",children:"Recommended settings for bulk operations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Start with:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_batch_size"}),": 200\u2013500"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"membership_max_concurrency"}),": 4\u20138 (when concurrency support is introduced)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enable_permissive_modify"}),": true"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enable_assertion_control"}),": true"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verify_member_dns"}),": true (optional pre-flight)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"runbooks",children:"Runbooks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["End-to-end \u201cping-pong\u201d check:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Run a read-only LDAP search via ",(0,s.jsx)(n.code,{children:"nowconnect-cloud"})," (as shown above)."]}),"\n",(0,s.jsx)(n.li,{children:"Confirm NowConnect metrics counters increase, and no listener errors."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Bulk membership change dry-run:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use a small test group, run add/remove of 1k entries, verify successful completion and stable latencies."}),"\n",(0,s.jsx)(n.li,{children:"Watch membership batch metrics."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"backwards-compatibility",children:"Backwards compatibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Membership operations now return success when attempting to:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add values already present."}),"\n",(0,s.jsx)(n.li,{children:"Delete values not present."}),"\n",(0,s.jsx)(n.li,{children:"Replace a missing attribute (automatically converted to add)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["If you require strict failure on those cases, set ",(0,s.jsx)(n.code,{children:"enable_permissive_modify: false"})," and adjust workflows to avoid idempotent handling (not recommended for large, concurrent or rerun-prone operations)."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"recently-implemented-formerly-near-term-roadmap",children:"Recently implemented (formerly near-term roadmap)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Assertion control (RFC 4528) to guard against concurrent writer races (re-diff and retry on assertion failure)."}),"\n",(0,s.jsxs)(n.li,{children:["Membership-specific Prometheus metrics:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nowconnect_ldap_membership_batch_total{action,system}"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nowconnect_ldap_membership_values_total{action}"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"nowconnect_ldap_membership_batch_seconds"})," (histogram)"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"nowconnect_ldap_membership_errors_total{code}"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Optional DN verification (",(0,s.jsx)(n.code,{children:"verify_member_dns"}),") before membership changes."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-validation-status",children:"Quick validation status"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"LDAP suite through NowConnect: green for user/group lifecycle after changes."}),"\n",(0,s.jsx)(n.li,{children:"AD connector: membership add/remove now batched and idempotent; ready for bulk use."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example smoke:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Lifecycle test via NowConnect \u2014 now passes\r\ndocker compose -f docker-compose-nowconnect.yml run --rm \\\r\n  -e OPENLDAP_URL=ldap://nowconnect-cloud -e OPENLDAP_PORT=389 \\\r\n  -e OPENLDAP_BASE_DN=dc=example,dc=org \\\r\n  -e OPENLDAP_USERNAME=cn=admin,dc=example,dc=org \\\r\n  -e OPENLDAP_PASSWORD=admin \\\r\n  crud-service pytest -q tests/integration/test_openldap_write_path.py::test_user_group_lifecycle\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"NowConnect metrics show connections/bytes increment during tests; write/drain latency histograms record activity."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"See also:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"services/nowconnect/how-to/operational-validation-health"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"services/nowconnect/explanation/metrics-and-reliability"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"services/crud-service/explanation/ldap-connector-idempotency"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);
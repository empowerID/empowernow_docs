"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8559],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(96540);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}},90723:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"services/crud-service/reference/mcp_security_governance","title":"mcp_security_governance","description":"MCP Security & Governance (CRUDService)","source":"@site/docs/services/crud-service/reference/mcp_security_governance.md","sourceDirName":"services/crud-service/reference","slug":"/services/crud-service/reference/mcp_security_governance","permalink":"/empowernow_docs/docs/services/crud-service/reference/mcp_security_governance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/reference/mcp_security_governance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"mcp_opt_in_annotations","permalink":"/empowernow_docs/docs/services/crud-service/reference/mcp_opt_in_annotations"},"next":{"title":"mcp_tool_recipes","permalink":"/empowernow_docs/docs/services/crud-service/reference/mcp_tool_recipes"}}');var r=s(74848),c=s(28453);const o={},t=void 0,d={},l=[{value:"MCP Security &amp; Governance (CRUDService)",id:"mcp-security--governance-crudservice",level:2},{value:"Scope model",id:"scope-model",level:3},{value:"PDP and authorization",id:"pdp-and-authorization",level:3},{value:"Transport and CSRF",id:"transport-and-csrf",level:3},{value:"Recommended deployment",id:"recommended-deployment",level:3},{value:"Observability",id:"observability",level:3},{value:"Environment flags and limits",id:"environment-flags-and-limits",level:3},{value:"Threat considerations",id:"threat-considerations",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"mcp-security--governance-crudservice",children:"MCP Security & Governance (CRUDService)"}),"\n",(0,r.jsx)(n.h3,{id:"scope-model",children:"Scope model"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp.tools.discovery"})," \u2013 required to list tools via REST or ",(0,r.jsx)(n.code,{children:"tools/list"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mcp.tools.invoke"})," \u2013 required to invoke via ",(0,r.jsx)(n.code,{children:"tools/invoke|tools/call"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Scopes are validated in CRUDService. When proxied by the BFF, session auth is enforced at the edge and service\u2011side scopes are still required downstream."}),"\n",(0,r.jsx)(n.h3,{id:"pdp-and-authorization",children:"PDP and authorization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Loopback MCP endpoints reuse CRUDService\u2019s PDP settings. Enable/disable enforcement via ",(0,r.jsx)(n.code,{children:"config/pdp.yaml"})," (",(0,r.jsx)(n.code,{children:"enable_authorization"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Accepts scopes in ",(0,r.jsx)(n.code,{children:"user.scope"})," or ",(0,r.jsx)(n.code,{children:"normalized_permissions"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"transport-and-csrf",children:"Transport and CSRF"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["CRUDService exempts ",(0,r.jsx)(n.code,{children:"/mcp/*"})," from CSRF and origin validation for server\u2011side clients."]}),"\n",(0,r.jsxs)(n.li,{children:["Always use the BFF proxy (",(0,r.jsx)(n.code,{children:"/api/crud/mcp/*"}),") from browsers and enterprise UIs to keep session protections in place."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"recommended-deployment",children:"Recommended deployment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Expose ",(0,r.jsx)(n.code,{children:"/api/crud/mcp/tools/list"})," and ",(0,r.jsx)(n.code,{children:"/api/crud/mcp/jsonrpc"})," via BFF routing to CRUDService."]}),"\n",(0,r.jsx)(n.li,{children:"Use session \u2192 service token flow in the BFF to call CRUDService with proper scopes."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"observability",children:"Observability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Structured logs for ",(0,r.jsx)(n.code,{children:"mcp_tools_list_*"})," and ",(0,r.jsx)(n.code,{children:"mcp_jsonrpc_*"})," include correlation IDs and durations."]}),"\n",(0,r.jsxs)(n.li,{children:["Disable OpenTelemetry locally and in tests with ",(0,r.jsx)(n.code,{children:"OTEL_DISABLED=true"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"environment-flags-and-limits",children:"Environment flags and limits"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_LOOPBACK_WORKFLOW_DIRECT_INVOKE=true"})," \u2013 start workflows immediately on invoke (dev/test only)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_MAX_TOOLS"})," \u2013 cap publication to protect clients with small catalogs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MCP_DUPLICATE_POLICY=fail"})," \u2013 fail fast on naming collisions (pre\u2011cap and final names)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ALLOW_NONFIPS_FOR_TESTS=true"})," \u2013 optionally bypass FIPS in test environments."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"threat-considerations",children:"Threat considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Tools expose actions; restrict publication to the minimum set needed."}),"\n",(0,r.jsx)(n.li,{children:"Prefer read\u2011only GET endpoints for MCP Resources; keep side\u2011effects behind roles and scopes."}),"\n",(0,r.jsx)(n.li,{children:"Ensure tokens used by agents/UIs carry only discovery/invoke scopes as needed."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
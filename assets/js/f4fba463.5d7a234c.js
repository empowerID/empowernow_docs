"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9147],{28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var i=n(96540);const t={},s=i.createContext(t);function l(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:r},e.children)}},36006:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"services/crud-service/how-to/enable-mtls","title":"Enable mTLS for CRUD Service APIs","description":"Step-by-step to enable mTLS at the edge (Traefik/Nginx), forward the verified client certificate, enforce PoP binding, and verify end-to-end.","source":"@site/docs/services/crud-service/how-to/enable-mtls.md","sourceDirName":"services/crud-service/how-to","slug":"/services/crud-service/how-to/enable-mtls","permalink":"/empowernow_docs/docs/services/crud-service/how-to/enable-mtls","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/how-to/enable-mtls.md","tags":[],"version":"current","frontMatter":{"title":"Enable mTLS for CRUD Service APIs","description":"Step-by-step to enable mTLS at the edge (Traefik/Nginx), forward the verified client certificate, enforce PoP binding, and verify end-to-end.","sidebar_label":"Enable mTLS (Dev & Prod)","keywords":["mTLS","Traefik","Nginx","PoP","sender-binding","CRUD Service","EmpowerNow"]},"sidebar":"tutorialSidebar","previous":{"title":"BFF startup: DCR IAT","permalink":"/empowernow_docs/docs/services/crud-service/how-to/bff-startup-dcr-iat"},"next":{"title":"Overview","permalink":"/empowernow_docs/docs/services/crud-service/secrets/"}}');var t=n(74848),s=n(28453);const l={title:"Enable mTLS for CRUD Service APIs",description:"Step-by-step to enable mTLS at the edge (Traefik/Nginx), forward the verified client certificate, enforce PoP binding, and verify end-to-end.",sidebar_label:"Enable mTLS (Dev & Prod)",keywords:["mTLS","Traefik","Nginx","PoP","sender-binding","CRUD Service","EmpowerNow"]},c=void 0,a={},d=[{value:"What you\u2019ll enable",id:"what-youll-enable",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Dev (Docker + Traefik)",id:"dev-docker--traefik",level:3},{value:"Prod (Kubernetes)",id:"prod-kubernetes",level:3},{value:"Quick visual",id:"quick-visual",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Observability",id:"observability",level:3},{value:"Related",id:"related",level:3}];function o(e){const r={code:"code",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h3,{id:"what-youll-enable",children:"What you\u2019ll enable"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Inbound mTLS at the edge with CA verification."}),"\n",(0,t.jsx)(r.li,{children:"Forward the verified client certificate as a trusted header to CRUD Service."}),"\n",(0,t.jsxs)(r.li,{children:["Optional/required sender-binding (PoP) between JWT ",(0,t.jsx)(r.code,{children:"cnf.x5t#S256"})," and the client cert thumbprint."]}),"\n",(0,t.jsx)(r.li,{children:"Certificate-to-identity mapping into canonical ARNs."}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"See background and design details in Reference \u2192 mTLS (Design & Guide)."}),"\n",(0,t.jsx)(r.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Traefik or Nginx ingress in front of CRUD Service."}),"\n",(0,t.jsx)(r.li,{children:"A CA certificate to validate client certificates."}),"\n",(0,t.jsx)(r.li,{children:"Ability to mount/update Traefik dynamic config or Nginx Ingress annotations."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"dev-docker--traefik",children:"Dev (Docker + Traefik)"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Traefik dynamic config: add mTLS and pass the client certificate"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"# traefik/dynamic.yml\r\ntls:\r\n  options:\r\n    mtls:\r\n      minVersion: VersionTLS12\r\n      clientAuth:\r\n        clientAuthType: RequireAndVerifyClientCert\r\n        caFiles:\r\n          - /certs/ca.crt\r\n\r\nhttp:\r\n  middlewares:\r\n    strip-external-client-cert:\r\n      headers:\r\n        removeRequestHeaders:\r\n          - X-Forwarded-Tls-Client-Cert\r\n          - X-Forwarded-Client-Cert\r\n          - X-Forwarded-Client-Cert-Chain\r\n          - X-Forwarded-Tls-Client-Cert-Signature\r\n          - XFCC\r\n    mtls-passcert:\r\n      passTLSClientCert:\r\n        pem: true\r\n        info:\r\n          subject: true\r\n          issuer: true\r\n          notBefore: true\r\n          notAfter: true\r\n          sans: true\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsx)(r.li,{children:"Attach to CRUD router (labels in compose)"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:'- "traefik.http.routers.crud.tls=true"\r\n- "traefik.http.routers.crud.tls.options=mtls@file"\r\n- "traefik.http.routers.crud.middlewares=strip-external-client-cert@file,mtls-passcert@file,security-headers@file,rate-limit@file"\n'})}),"\n",(0,t.jsxs)(r.ol,{start:"3",children:["\n",(0,t.jsxs)(r.li,{children:["App settings (env or ",(0,t.jsx)(r.code,{children:"/app/config"}),")"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-env",children:"INBOUND_AUTH_MODE=bearer_plus_mtls_optional\r\nBINDING_REQUIRED_PATHS=/workflow/start,/workflow/resume,/execute\r\nFORWARDED_CLIENT_CERT_HEADER=X-Forwarded-Tls-Client-Cert\r\nTRUSTED_PROXY_CIDRS=172.16.0.0/12,10.0.0.0/8\r\nCERT_IDENTITY_MAPPINGS=/app/config/cert_identity_mappings.yaml\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"4",children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Restart Traefik and CRUD Service; verify Traefik dashboard shows mTLS enabled for ",(0,t.jsx)(r.code,{children:"crud"})," router."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Verify with curl"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -sS https://crud.local/health \\\r\n  --cert client.pem --key client.key\r\n\r\ncurl -sS https://crud.local/execute \\\r\n  --cert client.pem --key client.key \\\r\n  -H "Authorization: Bearer $JWT" \\\r\n  -d \'{"action":"ping","system":"demo","object_type":"user"}\'\n'})}),"\n",(0,t.jsx)(r.p,{children:"Expected:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Optional mode: non-listed paths accept bearer-only; listed paths enforce PoP."}),"\n",(0,t.jsxs)(r.li,{children:["Required mode (",(0,t.jsx)(r.code,{children:"bearer_plus_mtls_required"}),"): missing cert or PoP mismatch \u2192 401."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"prod-kubernetes",children:"Prod (Kubernetes)"}),"\n",(0,t.jsx)(r.p,{children:"Option A: Traefik (CRDs)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"apiVersion: traefik.containo.us/v1alpha1\r\nkind: IngressRoute\r\nspec:\r\n  entryPoints: [ websecure ]\r\n  routes:\r\n    - match: Host(`crud.prod.example.com`)\r\n      kind: Rule\r\n      services:\r\n        - name: crud-service\r\n          port: 8000\r\n      middlewares:\r\n        - name: mtls-passcert\r\n  tls:\r\n    options:\r\n      name: mtls\r\n      namespace: traefik\n"})}),"\n",(0,t.jsx)(r.p,{children:"Option B: Nginx Ingress"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:'metadata:\r\n  annotations:\r\n    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"\r\n    nginx.ingress.kubernetes.io/auth-tls-secret: "default/mtls-ca"\r\n    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"\n'})}),"\n",(0,t.jsxs)(r.p,{children:["App header name for Nginx: set ",(0,t.jsx)(r.code,{children:"FORWARDED_CLIENT_CERT_HEADER=ssl-client-cert"}),"."]}),"\n",(0,t.jsx)(r.h3,{id:"quick-visual",children:"Quick visual"}),"\n",(0,t.jsx)(r.mermaid,{value:'flowchart TD\r\n  A["Client with cert + JWT"] --\x3e B["Ingress (verify client cert)"]\r\n  B --\x3e C["Forward verified cert header"]\r\n  C --\x3e D["CRUD Service: parse cert, compute x5t"]\r\n  D --\x3e E{ "PoP required?" }\r\n  E --\x3e|"yes"| F{ "JWT.cnf.x5t == cert x5t?" }\r\n  F --\x3e|"yes"| G["Allow"]\r\n  F --\x3e|"no"| H["401 sender_binding_mismatch"]\r\n  E --\x3e|"no"| G'}),"\n",(0,t.jsx)(r.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["401 ",(0,t.jsx)(r.code,{children:"certificate_missing"}),": ingress not forwarding cert or wrong header name."]}),"\n",(0,t.jsxs)(r.li,{children:["401 ",(0,t.jsx)(r.code,{children:"sender_binding_mismatch"}),": JWT ",(0,t.jsx)(r.code,{children:"cnf.x5t#S256"})," doesn\u2019t match cert thumbprint."]}),"\n",(0,t.jsx)(r.li,{children:"400 on PEM parse: oversized/malformed header; check proxy and header limits."}),"\n",(0,t.jsxs)(r.li,{children:["Verify Traefik ",(0,t.jsx)(r.code,{children:"tls.options.mtls"})," in dashboard; check app logs for ",(0,t.jsx)(r.code,{children:"mtls_thumbprint_present=true"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"observability",children:"Observability"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Metrics: ",(0,t.jsx)(r.code,{children:"mtls_auth_success_total"}),", ",(0,t.jsx)(r.code,{children:"mtls_auth_failure_total{reason}"}),", ",(0,t.jsx)(r.code,{children:"mtls_pop_mismatch_total"}),"."]}),"\n",(0,t.jsx)(r.li,{children:"Kafka audit: success/failure with minimal, non-sensitive data (thumbprint only)."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"related",children:"Related"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Reference \u2192 mTLS (Design & Guide)"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[185],{28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var r=s(96540);const o={},t=r.createContext(o);function d(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(t.Provider,{value:n},e.children)}},88526:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"services/crud-service/explanation/data-model","title":"data-model","description":"Data model: nodes, edges, workflow","source":"@site/docs/services/crud-service/explanation/data-model.md","sourceDirName":"services/crud-service/explanation","slug":"/services/crud-service/explanation/data-model","permalink":"/empowernow_docs/docs/services/crud-service/explanation/data-model","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/explanation/data-model.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"checkpointing","permalink":"/empowernow_docs/docs/services/crud-service/explanation/checkpointing"},"next":{"title":"edge-conditions-templating","permalink":"/empowernow_docs/docs/services/crud-service/explanation/edge-conditions-templating"}}');var o=s(74848),t=s(28453);const d={},i=void 0,c={},l=[{value:"Data model: nodes, edges, workflow",id:"data-model-nodes-edges-workflow",level:3},{value:"Minimal YAML example",id:"minimal-yaml-example",level:4},{value:"Visual",id:"visual",level:4}];function a(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h3,{id:"data-model-nodes-edges-workflow",children:"Data model: nodes, edges, workflow"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Node types"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"ACTION, FUNCTION, USER_INTERACTION, LOG, SET_VARIABLE, FOREACH, START, END, CANCEL, AGENT"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Node status lifecycle"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"PENDING \u2192 ACTIVE \u2192 COMPLETED | FAILED | SKIPPED | WAITING (for user input)"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Edges"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"from"})," \u2192 ",(0,o.jsx)(n.code,{children:"to"})," with optional ",(0,o.jsx)(n.code,{children:"condition"})]}),"\n",(0,o.jsx)(n.li,{children:"Multiple outbound edges can be true and activate in the same pass"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Workflow"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Holds ",(0,o.jsx)(n.code,{children:"nodes"}),", ",(0,o.jsx)(n.code,{children:"edges"}),", and computed ",(0,o.jsx)(n.code,{children:"dependencies"})," (reverse edges) used to determine readiness"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"minimal-yaml-example",children:"Minimal YAML example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'nodes:\r\n  start:\r\n    type: START\r\n  fetch:\r\n    type: ACTION\r\n    depends_on: [start]\r\n    config:\r\n      system: my_system\r\n      action: get_thing\r\n  transform:\r\n    type: FUNCTION\r\n    depends_on: [fetch]\r\n    config:\r\n      function: my_transform\r\n  end:\r\n    type: END\r\n    depends_on: [transform]\r\nedges:\r\n  - from: fetch\r\n    to: transform\r\n    condition: "{{ response.success }}"\r\n  - from: start\r\n    to: fetch\n'})}),"\n",(0,o.jsx)(n.h4,{id:"visual",children:"Visual"}),"\n",(0,o.jsx)(n.mermaid,{value:"graph TD\r\n  start([START])--\x3efetch[ACTION]\r\n  fetch -- response.success --\x3e transform[FUNCTION]\r\n  transform --\x3e end_node([END])"})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3812],{18911:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"services/crud-service/how-to/mcp-quickstart","title":"mcp-quickstart","description":"MCP Quickstart for CRUDService","source":"@site/docs/services/crud-service/how-to/mcp-quickstart.md","sourceDirName":"services/crud-service/how-to","slug":"/services/crud-service/how-to/mcp-quickstart","permalink":"/empowernow_docs/docs/services/crud-service/how-to/mcp-quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/how-to/mcp-quickstart.md","tags":[],"version":"current","frontMatter":{}}');var t=n(74848),o=n(28453);const c={},i=void 0,a={},l=[{value:"MCP Quickstart for CRUDService",id:"mcp-quickstart-for-crudservice",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Architecture (transport)",id:"architecture-transport",level:3},{value:"1) Discover tools (JSON\u2011RPC)",id:"1-discover-tools-jsonrpc",level:3},{value:"2) Health check (invoke)",id:"2-health-check-invoke",level:3},{value:"3) Invoke a system tool",id:"3-invoke-a-system-tool",level:3},{value:"4) Invoke a workflow tool",id:"4-invoke-a-workflow-tool",level:3},{value:"Cursor setup (optional)",id:"cursor-setup-optional",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3}];function d(e){const r={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"mcp-quickstart-for-crudservice",children:"MCP Quickstart for CRUDService"}),"\n",(0,t.jsx)(r.p,{children:"This quickstart gets you listing and invoking Loopback MCP tools in minutes, via the BFF proxy."}),"\n",(0,t.jsx)(r.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["A Bearer token with scopes: ",(0,t.jsx)(r.code,{children:"mcp.tools.discovery"}),", ",(0,t.jsx)(r.code,{children:"mcp.tools.invoke"})]}),"\n",(0,t.jsxs)(r.li,{children:["BFF URL: ",(0,t.jsx)(r.code,{children:"https://<bff-host>"})]}),"\n",(0,t.jsxs)(r.li,{children:["Content type: ",(0,t.jsx)(r.code,{children:"application/json"})]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"architecture-transport",children:"Architecture (transport)"}),"\n",(0,t.jsx)(r.mermaid,{value:"flowchart LR\r\n  Cursor[Client / Agent / CLI] -- JSON-RPC (HTTP) --\x3e BFF[/api/crud/mcp/jsonrpc]\r\n  BFF --\x3e CRUD[/mcp/jsonrpc]\r\n  CRUD --\x3e GEN[Loopback Tool Generator]\r\n  GEN --\x3e CRUD\r\n  CRUD --\x3e BFF\r\n  BFF --\x3e Cursor"}),"\n",(0,t.jsx)(r.h3,{id:"1-discover-tools-jsonrpc",children:"1) Discover tools (JSON\u2011RPC)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" \\\r\n  -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"1","method":"tools/list"}\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq\n'})}),"\n",(0,t.jsx)(r.p,{children:"Expected shape:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{"jsonrpc":"2.0","id":"1","result":{"tools":[{"name":"system.health","description":"...","inputSchema":{...},"source":"system","metadata":{...}}]}}\n'})}),"\n",(0,t.jsx)(r.p,{children:"View\u2011scoped discovery (for clients that cap visible tools):"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{"jsonrpc":"2.0","id":"11","method":"tools/list","params":{"limit":50}}\' \\\r\n  https://<bff-host>/api/crud/mcp/entra/jsonrpc | jq\n'})}),"\n",(0,t.jsx)(r.h3,{id:"2-health-check-invoke",children:"2) Health check (invoke)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{\r\n    "jsonrpc":"2.0","id":"2","method":"tools/call",\r\n    "params":{"name":"system.health","arguments":{"verbose":true}}\r\n  }\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | jq\n'})}),"\n",(0,t.jsx)(r.h3,{id:"3-invoke-a-system-tool",children:"3) Invoke a system tool"}),"\n",(0,t.jsx)(r.p,{children:"Example (Entra user by ID):"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'USER_ID=00000000-0000-0000-0000-000000000000\r\ncurl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{\r\n    "jsonrpc":"2.0","id":"3","method":"tools/call",\r\n    "params":{"name":"entra.cont.account.get_by_id","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}\r\n  }\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | jq\n'})}),"\n",(0,t.jsx)(r.p,{children:"Invoke within a view:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{\r\n    "jsonrpc":"2.0","id":"3a","method":"tools/call",\r\n    "params":{"name":"entra.cont.account.get_by_id","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}\r\n  }\' \\\r\n  https://<bff-host>/api/crud/mcp/entra/jsonrpc | jq -r \'.result.content[0].text\' | jq\n'})}),"\n",(0,t.jsx)(r.h3,{id:"4-invoke-a-workflow-tool",children:"4) Invoke a workflow tool"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'curl -s -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \\\r\n  -d \'{\r\n    "jsonrpc":"2.0","id":"4","method":"tools/call",\r\n    "params":{"name":"wf.entraid.user.view","arguments":{"SystemIdentifier":"\'"$USER_ID"\'"}}\r\n  }\' \\\r\n  https://<bff-host>/api/crud/mcp/jsonrpc | jq -r \'.result.content[0].text\' | jq\n'})}),"\n",(0,t.jsxs)(r.p,{children:["By default, workflows validate inputs and return an accepted stub. To start immediately (dev/test), set ",(0,t.jsx)(r.code,{children:"MCP_LOOPBACK_WORKFLOW_DIRECT_INVOKE=true"})," on CRUDService."]}),"\n",(0,t.jsx)(r.h3,{id:"cursor-setup-optional",children:"Cursor setup (optional)"}),"\n",(0,t.jsxs)(r.p,{children:["Create or edit ",(0,t.jsx)(r.code,{children:"~/.cursor/mcp.json"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'{\r\n  "mcpServers": {\r\n    "crud-mcp": {\r\n      "type": "streamable-http",\r\n      "url": "https://<bff-host>/api/crud/mcp/jsonrpc",\r\n      "headers": {\r\n        "Authorization": "Bearer <ACCESS_TOKEN_WITH_scopes_mcp.tools.discovery_mcp.tools.invoke>",\r\n        "Content-Type": "application/json"\r\n      }\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["In Cursor, enable ",(0,t.jsx)(r.code,{children:"crud-mcp"}),", then run: \u201cList tools from crud-mcp.\u201d"]}),"\n",(0,t.jsx)(r.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"403 on list or invoke \u2192 token missing required scope(s)"}),"\n",(0,t.jsx)(r.li,{children:"Empty list \u2192 verify ServiceConfigs are mounted and readable"}),"\n",(0,t.jsxs)(r.li,{children:["No direct workflow start \u2192 set ",(0,t.jsx)(r.code,{children:"MCP_LOOPBACK_WORKFLOW_DIRECT_INVOKE=true"})]}),"\n",(0,t.jsx)(r.li,{children:"CSRF errors \u2192 ensure you use the BFF MCP proxy URL"}),"\n",(0,t.jsxs)(r.li,{children:["Client catalogue caps (~50\u201360 tools) \u2192 use virtual views: ",(0,t.jsx)(r.code,{children:"/api/crud/mcp/{view}/jsonrpc"})," with ",(0,t.jsx)(r.code,{children:"limit"}),"/",(0,t.jsx)(r.code,{children:"cursor"})]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>i});var s=n(96540);const t={},o=s.createContext(t);function c(e){const r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9144],{17780:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"services/crud-service/how-to/migration-guide-visual-designer","title":"Migration Guide \u2014 YAML Workflows to Visual Workflow Designer","description":"This guide helps you migrate existing YAML workflows to the Visual Workflow Designer.","source":"@site/docs/services/crud-service/how-to/migration-guide-visual-designer.md","sourceDirName":"services/crud-service/how-to","slug":"/services/crud-service/how-to/migration-guide-visual-designer","permalink":"/empowernow_docs/docs/services/crud-service/how-to/migration-guide-visual-designer","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/how-to/migration-guide-visual-designer.md","tags":[{"inline":true,"label":"service:crud","permalink":"/empowernow_docs/docs/tags/service-crud"},{"inline":true,"label":"type:how-to","permalink":"/empowernow_docs/docs/tags/type-how-to"},{"inline":true,"label":"visual-designer","permalink":"/empowernow_docs/docs/tags/visual-designer"}],"version":"current","frontMatter":{"id":"migration-guide-visual-designer","title":"Migration Guide \u2014 YAML Workflows to Visual Workflow Designer","sidebar_label":"Migration to Visual Designer","tags":["service:crud","type:how-to","visual-designer"]},"sidebar":"tutorialSidebar","previous":{"title":"CRUD Service","permalink":"/empowernow_docs/docs/services/crud-service/"},"next":{"title":"BFF startup: DCR IAT","permalink":"/empowernow_docs/docs/services/crud-service/how-to/bff-startup-dcr-iat"}}');var s=n(74848),t=n(28453);const l={id:"migration-guide-visual-designer",title:"Migration Guide \u2014 YAML Workflows to Visual Workflow Designer",sidebar_label:"Migration to Visual Designer",tags:["service:crud","type:how-to","visual-designer"]},o=void 0,a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Benefits of Migration",id:"benefits-of-migration",level:3},{value:"Pre-Migration Checklist",id:"pre-migration-checklist",level:2},{value:"Migration Strategies",id:"migration-strategies",level:2},{value:"Strategy 1: Direct Import (Recommended)",id:"strategy-1-direct-import-recommended",level:3},{value:"Strategy 2: Gradual Recreation",id:"strategy-2-gradual-recreation",level:3},{value:"Strategy 3: Hybrid Approach",id:"strategy-3-hybrid-approach",level:3},{value:"Step-by-Step Migration",id:"step-by-step-migration",level:2},{value:"Step 1: Prepare Your YAML Workflow",id:"step-1-prepare-your-yaml-workflow",level:3},{value:"Step 2: Import into Visual Designer",id:"step-2-import-into-visual-designer",level:3},{value:"Step 3: Review Auto-Generated Visual",id:"step-3-review-auto-generated-visual",level:3},{value:"Step 4: Enhance the Visual Workflow",id:"step-4-enhance-the-visual-workflow",level:3},{value:"Step 5: Validate the Migration",id:"step-5-validate-the-migration",level:3},{value:"Step 6: Test Thoroughly",id:"step-6-test-thoroughly",level:3},{value:"Common Patterns",id:"common-patterns",level:2},{value:"Sequential",id:"sequential",level:3},{value:"Conditional",id:"conditional",level:3},{value:"Parallel",id:"parallel",level:3},{value:"Validation and Testing",id:"validation-and-testing",level:2},{value:"Testing Checklist",id:"testing-checklist",level:3},{value:"Test Execution (API example)",id:"test-execution-api-example",level:3},{value:"Rollback Procedures",id:"rollback-procedures",level:2},{value:"Migration Best Practices",id:"migration-best-practices",level:2},{value:"CRUD Service Workflows \u2014 YAML \u2192 SQL Runbook",id:"crud-service-workflows--yaml--sql-runbook",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Commands (Windows PowerShell)",id:"commands-windows-powershell",level:3}];function d(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:"This guide helps you migrate existing YAML workflows to the Visual Workflow Designer."}),"\n",(0,s.jsx)(i.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#overview",children:"Overview"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#pre-migration-checklist",children:"Pre-Migration Checklist"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#migration-strategies",children:"Migration Strategies"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#step-by-step-migration",children:"Step-by-Step Migration"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#common-patterns",children:"Common Patterns"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#validation-and-testing",children:"Validation and Testing"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"#rollback-procedures",children:"Rollback Procedures"})}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"The Visual Workflow Designer supports importing existing YAML workflows and provides tools to help you modernize and enhance them with visual editing capabilities."}),"\n",(0,s.jsx)(i.h3,{id:"benefits-of-migration",children:"Benefits of Migration"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Visual representation of complex workflows"}),"\n",(0,s.jsx)(i.li,{children:"Easier maintenance and updates"}),"\n",(0,s.jsx)(i.li,{children:"Better documentation through visual flow"}),"\n",(0,s.jsx)(i.li,{children:"Enhanced collaboration between technical and business users"}),"\n",(0,s.jsx)(i.li,{children:"Reduced errors through visual validation"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"pre-migration-checklist",children:"Pre-Migration Checklist"}),"\n",(0,s.jsx)(i.p,{children:"Before starting migration, ensure you have:"}),"\n",(0,s.jsxs)(i.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Backed up all existing workflows"]}),"\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Documented current workflow dependencies"]}),"\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Identified critical workflows for pilot migration"]}),"\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Allocated time for testing migrated workflows"]}),"\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Trained users on the Visual Designer"]}),"\n",(0,s.jsxs)(i.li,{className:"task-list-item",children:[(0,s.jsx)(i.input,{type:"checkbox",disabled:!0})," ","Set up version control for workflows"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"migration-strategies",children:"Migration Strategies"}),"\n",(0,s.jsx)(i.h3,{id:"strategy-1-direct-import-recommended",children:"Strategy 1: Direct Import (Recommended)"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Import existing YAML directly"}),"\n",(0,s.jsx)(i.li,{children:"Visual Designer converts to visual format"}),"\n",(0,s.jsx)(i.li,{children:"Review and enhance in visual editor"}),"\n",(0,s.jsx)(i.li,{children:"Test thoroughly before deployment"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"strategy-2-gradual-recreation",children:"Strategy 2: Gradual Recreation"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Analyze existing workflow logic"}),"\n",(0,s.jsx)(i.li,{children:"Recreate step-by-step in Visual Designer"}),"\n",(0,s.jsx)(i.li,{children:"Add improvements during recreation"}),"\n",(0,s.jsx)(i.li,{children:"Run old and new workflows in parallel"}),"\n",(0,s.jsx)(i.li,{children:"Switch over after validation"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"strategy-3-hybrid-approach",children:"Strategy 3: Hybrid Approach"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Keep critical workflows in YAML"}),"\n",(0,s.jsx)(i.li,{children:"Create new workflows visually"}),"\n",(0,s.jsx)(i.li,{children:"Gradually migrate as needed"}),"\n",(0,s.jsx)(i.li,{children:"Maintain both formats during transition"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"step-by-step-migration",children:"Step-by-Step Migration"}),"\n",(0,s.jsx)(i.h3,{id:"step-1-prepare-your-yaml-workflow",children:"Step 1: Prepare Your YAML Workflow"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:'name: legacy_approval_workflow\r\nversion: 1.0.0\r\ndescription: Legacy approval process\r\n\r\nsteps:\r\n  fetch_request:\r\n    type: command\r\n    system: ServiceNow\r\n    action: get_record\r\n    params:\r\n      table: sc_request\r\n      sys_id: "{{request_id}}"\r\n  \r\n  check_amount:\r\n    type: condition\r\n    depends_on: [fetch_request]\r\n    condition: "amount > 1000"\r\n    branches:\r\n      true: manager_approval\r\n      false: auto_approve\n'})}),"\n",(0,s.jsx)(i.h3,{id:"step-2-import-into-visual-designer",children:"Step 2: Import into Visual Designer"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Open Visual Designer"}),"\n",(0,s.jsx)(i.li,{children:"Click Import \u2192 From YAML"}),"\n",(0,s.jsx)(i.li,{children:"Paste or upload your YAML file"}),"\n",(0,s.jsx)(i.li,{children:"Click Import"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"step-3-review-auto-generated-visual",children:"Step 3: Review Auto-Generated Visual"}),"\n",(0,s.jsx)(i.p,{children:"The system will create visual nodes for each step, connections from dependencies, and an automatic layout. Review node types, connections, and missing configs."}),"\n",(0,s.jsx)(i.h3,{id:"step-4-enhance-the-visual-workflow",children:"Step 4: Enhance the Visual Workflow"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Improve layout and alignment"}),"\n",(0,s.jsx)(i.li,{children:"Add descriptions and labels"}),"\n",(0,s.jsx)(i.li,{children:"Enhance logic: error handling, notifications, parallel branches"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"step-5-validate-the-migration",children:"Step 5: Validate the Migration"}),"\n",(0,s.jsx)(i.p,{children:"The system validates configuration, required parameters, and dependency graphs."}),"\n",(0,s.jsx)(i.h3,{id:"step-6-test-thoroughly",children:"Step 6: Test Thoroughly"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Unit test nodes"}),"\n",(0,s.jsx)(i.li,{children:"Integration test workflow"}),"\n",(0,s.jsx)(i.li,{children:"Regression test vs original"}),"\n",(0,s.jsx)(i.li,{children:"Performance test"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,s.jsx)(i.h3,{id:"sequential",children:"Sequential"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"steps:\r\n  step1: { type: command, action: create_ticket }\r\n  step2: { type: command, depends_on: [step1], action: send_email }\r\n  step3: { type: command, depends_on: [step2], action: update_status }\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Visual: ",(0,s.jsx)(i.code,{children:"[Start] \u2192 [Create Ticket] \u2192 [Send Email] \u2192 [Update Status] \u2192 [End]"})]}),"\n",(0,s.jsx)(i.h3,{id:"conditional",children:"Conditional"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"steps:\r\n  evaluate:\r\n    type: condition\r\n    condition: \"priority == 'high'\"\r\n    branches: { true: urgent_path, false: normal_path }\n"})}),"\n",(0,s.jsx)(i.h3,{id:"parallel",children:"Parallel"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-yaml",children:"steps:\r\n  parallel_tasks:\r\n    type: parallel\r\n    branches:\r\n      email: { type: command, action: send_email }\r\n      log: { type: command, action: create_log }\n"})}),"\n",(0,s.jsx)(i.h2,{id:"validation-and-testing",children:"Validation and Testing"}),"\n",(0,s.jsx)(i.p,{children:"Automated validation checks syntax, logic, and system constraints."}),"\n",(0,s.jsx)(i.h3,{id:"testing-checklist",children:"Testing Checklist"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Nodes configured"}),"\n",(0,s.jsx)(i.li,{children:"Connections correct"}),"\n",(0,s.jsx)(i.li,{children:"Variables mapped"}),"\n",(0,s.jsx)(i.li,{children:"Error handling present"}),"\n",(0,s.jsx)(i.li,{children:"Performance acceptable"}),"\n",(0,s.jsx)(i.li,{children:"Output matches original"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"test-execution-api-example",children:"Test Execution (API example)"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:'POST /api/workflows/{id}/test\r\n{ "test_data": { "request_id": "REQ0001234", "amount": 1500, "priority": "high" },\r\n  "compare_with": "legacy_workflow_id" }\n'})}),"\n",(0,s.jsx)(i.h2,{id:"rollback-procedures",children:"Rollback Procedures"}),"\n",(0,s.jsx)(i.p,{children:"Immediate rollback: stop new executions, restore prior version, document issues, fix and retry."}),"\n",(0,s.jsx)(i.p,{children:"API restore example:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:'PUT /api/workflows/{id}/restore\r\n{ "version": "1.0.0" }\n'})}),"\n",(0,s.jsx)(i.h2,{id:"migration-best-practices",children:"Migration Best Practices"}),"\n",(0,s.jsx)(i.p,{children:"Do: start small, document changes, involve stakeholders, keep backups, use version control, test extensively."}),"\n",(0,s.jsx)(i.p,{children:"Don\u2019t: migrate everything at once, skip testing, ignore warnings, delete originals, or rush."}),"\n",(0,s.jsx)(i.h2,{id:"crud-service-workflows--yaml--sql-runbook",children:"CRUD Service Workflows \u2014 YAML \u2192 SQL Runbook"}),"\n",(0,s.jsxs)(i.p,{children:["Concrete runbook to import YAMLs into ",(0,s.jsx)(i.code,{children:"visual_workflow_definitions"})," via Docker Compose stack."]}),"\n",(0,s.jsx)(i.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Docker Desktop; compose file ",(0,s.jsx)(i.code,{children:"CRUDService/docker-compose-authzen4.yml"})]}),"\n",(0,s.jsxs)(i.li,{children:["YAMLs in ",(0,s.jsx)(i.code,{children:"ServiceConfigs/CRUDService/config/workflows"})]}),"\n",(0,s.jsx)(i.li,{children:"DB migrations applied (alembic service)"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"commands-windows-powershell",children:"Commands (Windows PowerShell)"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-powershell",children:'cd C:\\source\\repos\\CRUDService\r\ndocker-compose -f docker-compose-authzen4.yml up -d db; docker-compose -f docker-compose-authzen4.yml up -d alembic\r\ndocker-compose -f docker-compose-authzen4.yml run --rm crud-service python /app/src/scripts/migrate_workflows_to_db.py\r\ndocker-compose -f docker-compose-authzen4.yml exec db psql -U postgres -d workflow_db -c "SELECT COUNT(*) FROM visual_workflow_definitions;"\n'})}),"\n",(0,s.jsxs)(i.p,{children:["Troubleshooting: check ",(0,s.jsx)(i.code,{children:"DATABASE_URL"}),", workflow directory mounts, DB health, file extensions."]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var r=n(96540);const s={},t=r.createContext(s);function l(e){const i=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);
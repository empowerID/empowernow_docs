"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9340],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var s=i(96540);const r={},l=s.createContext(r);function c(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(l.Provider,{value:n},e.children)}},94909:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"source_content/design_hammad_design","title":"design_hammad_design","description":"High-value, low-effort and must-do to-dos","source":"@site/docs/source_content/design_hammad_design.md","sourceDirName":"source_content","slug":"/source_content/design_hammad_design","permalink":"/empowernow_docs/docs/source_content/design_hammad_design","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/design_hammad_design.md","tags":[],"version":"current","frontMatter":{}}');var r=i(74848),l=i(28453);const c={},d=void 0,o={},t=[{value:"High-value, low-effort and must-do to-dos",id:"high-value-low-effort-and-must-do-to-dos",level:3},{value:"Developer design spec (focused on \u201cbest-in-class data shaping\u201d)",id:"developer-design-spec-focused-on-best-in-class-data-shaping",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"high-value-low-effort-and-must-do-to-dos",children:"High-value, low-effort and must-do to-dos"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["JSON/YAML governance","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add JSONSchema validation for mapping/filters/providers YAML and CI check."}),"\n",(0,r.jsx)(n.li,{children:"Add config hot-reload for mapping/filters/providers; bump mapping version and clear caches."}),"\n",(0,r.jsx)(n.li,{children:"Document YAML governance and update README with DSL & config reference."}),"\n",(0,r.jsxs)(n.li,{children:["Include template gating flag ",(0,r.jsx)(n.code,{children:"ENABLE_MAPPING_TEMPLATES"}),", ",(0,r.jsx)(n.code,{children:"filters.limits"})," (mapping takes precedence), plugin entrypoints, spans (",(0,r.jsx)(n.code,{children:"mapping.eval"}),", ",(0,r.jsx)(n.code,{children:"pdp.gate"}),"), and reload/version metrics."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Data shaping (mapping DSL)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Implement MappingEngine function registry and built-ins: coalesce, join, lower, upper, unique, sort, split, replace, regex, to_int, to_bool, when (conditional), default."}),"\n",(0,r.jsxs)(n.li,{children:["Support per-attribute transform pipelines via ",(0,r.jsx)(n.code,{children:"{ pipe: [...] }"})," in YAML."]}),"\n",(0,r.jsxs)(n.li,{children:["Enforce per-attribute options: ",(0,r.jsx)(n.code,{children:"type"}),", ",(0,r.jsx)(n.code,{children:"required"}),", ",(0,r.jsx)(n.code,{children:"default"}),", ",(0,r.jsx)(n.code,{children:"omit_if_empty"}),", ",(0,r.jsx)(n.code,{children:"multi: {unique_sorted: true}"}),", ",(0,r.jsx)(n.code,{children:"max_items"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Integrate ",(0,r.jsx)(n.code,{children:"utils/plugin_loader"})," to register custom mapping functions."]}),"\n",(0,r.jsxs)(n.li,{children:["Extend ",(0,r.jsx)(n.code,{children:"schema.example.yaml"})," with group object and attribute projection profiles."]}),"\n",(0,r.jsxs)(n.li,{children:["Implement attribute projection profiles per object; use when ",(0,r.jsx)(n.code,{children:"attributes is None"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Instrument mapping with metrics/tracing: mapping latency, attributes computed/dropped."}),"\n",(0,r.jsx)(n.li,{children:"Write unit tests for new DSL built-ins, pipelines, YAML validation, hot-reload."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Aggregator and cookie polish (must-do correctness + small scope)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Load ",(0,r.jsx)(n.code,{children:"merge_rules"})," from mapping YAML and pass to ",(0,r.jsx)(n.code,{children:"DirectoryAggregator"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Complete aggregator merge rules for scalars/lists and precedence behavior."}),"\n",(0,r.jsx)(n.li,{children:"Add cookie size metrics and warnings; ensure oversize \u2192 53 with empty paged cookie control."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See also: ",(0,r.jsx)(n.a,{href:"/empowernow_docs/docs/source_content/virtualization_phase2",children:"Virtualization Phase 2 \u2014 Data Shaping, Merging, and Projection"})," for the consolidated docs on merge rules, projection profiles, PDP gating, and aggregator paging."]}),"\n",(0,r.jsx)(n.h3,{id:"developer-design-spec-focused-on-best-in-class-data-shaping",children:"Developer design spec (focused on \u201cbest-in-class data shaping\u201d)"}),"\n",(0,r.jsx)(n.p,{children:"Scope"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Deliver a robust, configurable data shaping layer with:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["YAML-defined objects (",(0,r.jsx)(n.code,{children:"person"}),", ",(0,r.jsx)(n.code,{children:"group"}),", etc.), attribute mappings, allowlist/matching rules, limits, and merge rules."]}),"\n",(0,r.jsx)(n.li,{children:"Transform pipelines and rich built-ins for schema normalization."}),"\n",(0,r.jsx)(n.li,{children:"Deterministic paging pipeline integrating mapping, PDP gating, and aggregator merge semantics."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Constrain to search-only MVP; multi-source aggregator supported but defer advanced policies beyond documented merge rules."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Alignment with CRUDService patterns (adopt what fits)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Adopt function registry pattern for mapping built-ins","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use a lightweight registry (inspired by ",(0,r.jsx)(n.code,{children:"function_registry.py"}),") to register core and plugin functions for the MappingEngine."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Reuse filter semantics as deterministic built-ins (not templating in mapping)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provide ",(0,r.jsx)(n.code,{children:"quote"})," (escaping), ",(0,r.jsx)(n.code,{children:"ldap_single"})," (first-of-one), and boolean normalization as MappingEngine built-ins."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Keep Jinja templating at the provider/connector layer only","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"System definitions (e.g., AD/Azure YAML) may use Jinja for request shaping via provider templating; the VDS LDAP mapping path remains deterministic and non-templated by default."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Optional, sandboxed template node for rare mapping cases","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allow ",(0,r.jsx)(n.code,{children:'{ template: "..." }'})," with a curated, safe Jinja environment (no I/O, limited filters); disabled by default, feature-flagged."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add dependency analysis for mapping","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compute JSONPath dependencies per attribute for validation, cache keying, and prefetch planning."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Avoid heavy loaders/storage abstractions","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Retain simple file-based config with JSONSchema validation and optional hot-reload; do not port large loader stacks."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Config model (YAML)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["files:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config/mapping.yaml"}),": objects, attributes, built-ins, ",(0,r.jsx)(n.code,{children:"merge_rules"}),", projection profiles."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config/filters.yaml"}),": ",(0,r.jsx)(n.code,{children:"filters.allow_attrs"}),", ",(0,r.jsx)(n.code,{children:"filters.matching"}),", limits (optional)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config/providers.yaml"})," or existing connectors YAML: directories and sources."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["schema (enforced via JSONSchema):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objects.<name>"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"base_dn"}),": string"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rdn"}),": string"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"objectClasses"}),": list[string]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"attributes"}),": map attrName \u2192 spec","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["spec forms:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["string JSONPath: ",(0,r.jsx)(n.code,{children:'"$.foo.bar"'})]}),"\n",(0,r.jsxs)(n.li,{children:["literal: ",(0,r.jsx)(n.code,{children:'"static"'})," or numeric/bool"]}),"\n",(0,r.jsxs)(n.li,{children:["built-in call: ",(0,r.jsx)(n.code,{children:'{ func: "concat", args: [...] }'})]}),"\n",(0,r.jsxs)(n.li,{children:["pipeline: ",(0,r.jsx)(n.code,{children:'{ pipe: [ <spec>, {"lower": true}, {"split": ","}, {"unique": true}, {"sort": "ci"} ] }'})]}),"\n",(0,r.jsxs)(n.li,{children:["template (optional): ",(0,r.jsx)(n.code,{children:'{ template: "Full Name: {{ result.profile.given_name }} {{ result.profile.family_name }}" }'})," (safe env, curated filters only)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["options:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": string | number | bool | list | dn"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"required"}),": bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default"}),": any"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"omit_if_empty"}),": bool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"multi"}),": ",(0,r.jsx)(n.code,{children:"{ unique_sorted: bool, max_items: int }"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"projection_profiles"})," (optional): map profileName \u2192 [attrs]. Used by executor when ",(0,r.jsx)(n.code,{children:"attributes is None"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pdp"}),": ",(0,r.jsx)(n.code,{children:"{ attribute_gate: bool }"})," default true"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"merge_rules"})," (optional):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"precedence"}),": [systemName]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"attributes"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<attr>"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'{ pick: first_present, sources: ["sys1.field", "sys2.field"] }'})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'{ merge_unique: { sources: ["sys1.list", "sys2.list"], sort: "ci" } }'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"allow_attrs"}),": [attr]"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"matching"}),": ",(0,r.jsx)(n.code,{children:"{ attr: caseIgnore|caseExact }"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"limits"}),": ",(0,r.jsx)(n.code,{children:"sizeLimit"}),", ",(0,r.jsx)(n.code,{children:"timeLimitMs"}),", ",(0,r.jsx)(n.code,{children:"defaultPageSize"})," (also allowed under ",(0,r.jsx)(n.code,{children:"mapping.limits"}),"; mapping takes precedence)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mapping Engine enhancements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Function registry","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Registry pattern: ",(0,r.jsx)(n.code,{children:"register(name: str, fn: Callable)"}),"; seeded with built-ins."]}),"\n",(0,r.jsxs)(n.li,{children:["Built-ins:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"concat(*args)"}),", ",(0,r.jsx)(n.code,{children:"coalesce(a,b,...)"}),", ",(0,r.jsx)(n.code,{children:"join(list, sep)"}),", ",(0,r.jsx)(n.code,{children:"split(str, sep)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lower(x)"}),", ",(0,r.jsx)(n.code,{children:"upper(x)"}),", ",(0,r.jsx)(n.code,{children:"trim(x)"}),", ",(0,r.jsx)(n.code,{children:"replace(s, pattern, repl)"}),", ",(0,r.jsx)(n.code,{children:"regex(s, pattern, group?)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unique(list)"}),", ",(0,r.jsx)(n.code,{children:"sort(list, mode=ci|cs)"}),", ",(0,r.jsx)(n.code,{children:"to_int(x, default?)"}),", ",(0,r.jsx)(n.code,{children:"to_bool(x, default?)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"when(cond, then, else)"}),", where ",(0,r.jsx)(n.code,{children:"cond"})," is truthy or comparison ",(0,r.jsx)(n.code,{children:'{func:"eq",args:[...]}'})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Pipelines","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Evaluate ",(0,r.jsx)(n.code,{children:'{ pipe: [spec, {"lower": true}, {"split": ","}, {"unique": true}, {"sort": "ci"} ] }'})]}),"\n",(0,r.jsx)(n.li,{children:"Each dict step maps to a simple transform function; order preserved."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Dependency analysis","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compute referenced JSONPath keys per attribute (and per object) to validate mappings, improve error messages, and inform cache/prefetch strategies."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Constraints enforcement","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["After computing each attribute:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Type check and cast where allowed."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"required"}),": if missing/empty \u2192 drop entry or log; for MVP, drop attribute and expose metric; consider strict mode later."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"omit_if_empty"}),": drop if ",(0,r.jsx)(n.code,{children:"None"}),"/empty string/list."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"multi.unique_sorted"}),": dedupe and sort (case-insensitive if configured)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_items"}),": truncate deterministically."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Projection profiles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In ",(0,r.jsx)(n.code,{children:"SearchExecutor._query_backend"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"attributes is None"}),", pick ",(0,r.jsx)(n.code,{children:"person.projection_profiles.default"})," (or include all non-operational attributes if not provided)."]}),"\n",(0,r.jsxs)(n.li,{children:["Always include ",(0,r.jsx)(n.code,{children:"dn"}),"; PDP gating applied after projection when PDP enabled."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"YAML hot-reload and versioning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.code,{children:"ConfigReloader"})," watching mapping/filters/providers; on change:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Reload config; compute ",(0,r.jsx)(n.code,{children:"v_hash"})," small hash; update ",(0,r.jsx)(n.code,{children:"deps.mapping_cfg"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Clear relevant L1/L2 caches for subjects and mappings; bump internal version for cookie envelope."}),"\n",(0,r.jsxs)(n.li,{children:["Emit metric ",(0,r.jsx)(n.code,{children:"config_reload_total"})," and ",(0,r.jsx)(n.code,{children:"mapping_version"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Directory Aggregator merge rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Accept ",(0,r.jsx)(n.code,{children:"merge_rules"})," in constructor; wire from ",(0,r.jsx)(n.code,{children:"MappingLoader.config.objects.<dir>.merge_rules"})," or top-level."]}),"\n",(0,r.jsxs)(n.li,{children:["Current implementation already supports ",(0,r.jsx)(n.code,{children:"first_present"})," and ",(0,r.jsx)(n.code,{children:"merge_unique"}),"; finalize behavior:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Scalars: ",(0,r.jsx)(n.code,{children:"first_present"})," using precedence list; optional ",(0,r.jsx)(n.code,{children:"fallback"})," source map."]}),"\n",(0,r.jsxs)(n.li,{children:["Lists: merge unique; optional ",(0,r.jsx)(n.code,{children:"sort: ci|cs"}),"; maintain stable order by precedence then lexicographic."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Ensure composite cursor tracks per-source \u201clast consumed\u201d ",(0,r.jsx)(n.code,{children:"{subject_cf,id}"})," and uses start-after semantics."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Cookie robustness"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Enforce ",(0,r.jsx)(n.code,{children:"max_cookie_bytes"})," strictly in ",(0,r.jsx)(n.code,{children:"sign_cookie"})," and expose metric ",(0,r.jsx)(n.code,{children:"cookie_oversize_total"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Tests:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Oversize composite cursor \u2192 LdapError(53) at executor; protocol returns paged response with empty cookie."}),"\n",(0,r.jsx)(n.li,{children:"Rotation: primary/previous acceptance; tamper \u2192 reject."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Observability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Metrics additions:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mapping_latency_seconds"})," histogram; ",(0,r.jsx)(n.code,{children:"mapping_attrs_computed_total"}),", ",(0,r.jsx)(n.code,{children:"mapping_attrs_dropped_total{reason}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config_reload_total"}),", ",(0,r.jsx)(n.code,{children:"mapping_version"})," gauge"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"cookie_oversize_total"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Tracing spans: ",(0,r.jsx)(n.code,{children:"mapping.eval"}),", ",(0,r.jsx)(n.code,{children:"aggregator.merge"}),", ",(0,r.jsx)(n.code,{children:"pdp.gate"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Tests (must add)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"DSL built-ins and pipelines (unit)"}),"\n",(0,r.jsx)(n.li,{children:"Per-attribute constraints enforcement"}),"\n",(0,r.jsx)(n.li,{children:"Projection profiles behavior and default"}),"\n",(0,r.jsx)(n.li,{children:"Mapping hot-reload: version bump; cache invalidation"}),"\n",(0,r.jsx)(n.li,{children:"Aggregator merge rules correctness (scalars, lists, precedence) and churn invariants"}),"\n",(0,r.jsx)(n.li,{children:"Cookie oversize and rotation semantics"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Minimal code changes (where)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/dsl/mapping_eval.py"}),": add function registry, pipelines, constraints, expand built-ins."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/dsl/mapping_loader.py"}),": load ",(0,r.jsx)(n.code,{children:"merge_rules"}),", ",(0,r.jsx)(n.code,{children:"projection_profiles"}),"; return in ",(0,r.jsx)(n.code,{children:"MappingConfig"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/exec/directory_aggregator.py"}),": consume ",(0,r.jsx)(n.code,{children:"merge_rules"})," from config; finalize merge logic; keep composite cursor behavior; minor refactor for clarity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/exec/search_executor.py"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When ",(0,r.jsx)(n.code,{children:"attributes is None"}),", use projection profile if available."]}),"\n",(0,r.jsxs)(n.li,{children:["Wire ",(0,r.jsx)(n.code,{children:"merge_rules"})," from ",(0,r.jsx)(n.code,{children:"mapping_cfg"})," when constructing aggregator (if deps not already wired)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/utils/paging_cookie.py"}),": strict size enforcement + metric hook."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/observability/metrics.py"}),": add counters/histograms per above."]}),"\n",(0,r.jsx)(n.li,{children:"Config reload: new module or extend loader with watcher; update deps and caches."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/utils/templating.py"}),": provide a safe, minimal Jinja env used only if ",(0,r.jsx)(n.code,{children:"{ template: ... }"})," is enabled."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"src/vds/dsl/dependency_analyzer.py"})," (new): extract JSONPath dependencies from attribute specs; integrate in validation and diagnostics."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Prioritization (HV/LE and must-do)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"JSONSchema validation + CI (low effort, high risk reduction)"}),"\n",(0,r.jsx)(n.li,{children:"DSL function registry + core built-ins + pipelines (medium effort, high data shaping value)"}),"\n",(0,r.jsx)(n.li,{children:"Attribute constraints enforcement (low-medium effort, high data quality)"}),"\n",(0,r.jsx)(n.li,{children:"Projection profiles (low effort, high UX)"}),"\n",(0,r.jsx)(n.li,{children:"Aggregator merge rules completion (medium effort, correctness)"}),"\n",(0,r.jsx)(n.li,{children:"Cookie size metrics and oversize behavior (low effort, correctness)"}),"\n",(0,r.jsx)(n.li,{children:"Dependency analysis for mapping (low effort, improves validation/observability)"}),"\n",(0,r.jsx)(n.li,{children:"Hot-reload + version bump + cache clear (medium effort, operability)"}),"\n",(0,r.jsx)(n.li,{children:"Observability additions (low effort, future-proof)"}),"\n",(0,r.jsx)(n.li,{children:"Docs and examples (low effort)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you confirm priorities, I\u2019ll mark the first todo in progress and implement JSONSchema validation and projection profiles next."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9345],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(96540);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},55410:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"services/pdp/explanation/rest_api_contract","title":"REST API Contract \u2014 Application-Only Pattern","description":"Canonical reference: scopedpolicydesign.md. This document describes the clean REST surface using a single application identifier.","source":"@site/docs/services/pdp/explanation/rest_api_contract.md","sourceDirName":"services/pdp/explanation","slug":"/services/pdp/explanation/rest_api_contract","permalink":"/empowernow_docs/docs/services/pdp/explanation/rest_api_contract","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/pdp/explanation/rest_api_contract.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PDP Admin Guide \u2014 Domain & Application Policy Model","permalink":"/empowernow_docs/docs/services/pdp/explanation/admin-guide"},"next":{"title":"EmpowerNow Experience (End\u2011User App)","permalink":"/empowernow_docs/docs/services/experience/"}}');var t=i(74848),a=i(28453);const s={},o="REST API Contract \u2014 Application-Only Pattern",c={},l=[{value:"Principles",id:"principles",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"Request example (only pattern)",id:"request-example-only-pattern",level:2},{value:"Response examples",id:"response-examples",level:2},{value:"Evaluate sequence",id:"evaluate-sequence",level:2},{value:"UI integration hint",id:"ui-integration-hint",level:2}];function p(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rest-api-contract--application-only-pattern",children:"REST API Contract \u2014 Application-Only Pattern"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Canonical reference: ",(0,t.jsx)(n.code,{children:"scoped_policy_design.md"}),". This document describes the clean REST surface using a single application identifier."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Single request pattern: client provides ",(0,t.jsx)(n.code,{children:"resource.properties.pdp_application"})]}),"\n",(0,t.jsxs)(n.li,{children:["Accept arbitrary properties (AuthZEN-compliant); only ",(0,t.jsx)(n.code,{children:"pdp_application"})," used for policy resolution"]}),"\n",(0,t.jsx)(n.li,{children:"Domain/environment are internal metadata"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GET /api/v1/applications"})," \u2014 list apps (optional filters for power users)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GET /api/v1/applications/{app_id}"})," \u2014 app detail (domain/env metadata optional)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GET /api/v1/applications/{app_id}/policies"})," \u2014 policies with source info"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"POST /api/v1/applications/{app_id}/evaluate"})," \u2014 evaluate authorization for app"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GET /api/v1/debug/applications/{app_id}/policy-resolution"})," \u2014 debug policy sources"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"request-example-only-pattern",children:"Request example (only pattern)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "subject": {"id": "user123"},\r\n  "resource": {\r\n    "type": "document",\r\n    "id": "doc-123",\r\n    "properties": {"pdp_application": "sharepoint-prod"}\r\n  },\r\n  "action": {"name": "read"}\r\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"response-examples",children:"Response examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\r\n  "allowed": true,\r\n  "obligations": [\r\n    {"id": "log_access", "attributes": {"level": "detailed"}}\r\n  ],\r\n  "constraints": []\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Error codes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"400 \u2014 invalid request schema"}),"\n",(0,t.jsx)(n.li,{children:"404 \u2014 unknown application id"}),"\n",(0,t.jsx)(n.li,{children:"409 \u2014 configuration integrity error (refer to debug endpoints)"}),"\n",(0,t.jsx)(n.li,{children:"500 \u2014 evaluation error (check logs / tracing)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"evaluate-sequence",children:"Evaluate sequence"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant Client\r\n  participant API as REST API\r\n  participant PDP\r\n\r\n  Client->>API: POST /applications/{app_id}/evaluate\r\n  API->>PDP: Forward AuthZEN request (ensure pdp_application == app_id)\r\n  PDP--\x3e>API: Decision\r\n  API--\x3e>Client: 200 OK (permit/deny + obligations)"}),"\n",(0,t.jsx)(n.h2,{id:"ui-integration-hint",children:"UI integration hint"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Single dropdown to pick application; all policy inheritance handled by backend"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);
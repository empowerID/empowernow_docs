"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8921],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var s=r(96540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},50791:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"services/nowconnect/how-to/kubernetes-deploy","title":"kubernetes-deploy","description":"Kubernetes Deployment Guide (Helm/Kustomize)","source":"@site/docs/services/nowconnect/how-to/kubernetes-deploy.md","sourceDirName":"services/nowconnect/how-to","slug":"/services/nowconnect/how-to/kubernetes-deploy","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/kubernetes-deploy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/how-to/kubernetes-deploy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Enable HA","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/enable-ha"},"next":{"title":"ldaps-multi-backend","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/ldaps-multi-backend"}}');var t=r(74848),o=r(28453);const i={},a=void 0,c={},l=[{value:"Kubernetes Deployment Guide (Helm/Kustomize)",id:"kubernetes-deployment-guide-helmkustomize",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Helm (template-style values)",id:"helm-template-style-values",level:3},{value:"Kustomize overlay (example)",id:"kustomize-overlay-example",level:3},{value:"Capacity and sizing notes",id:"capacity-and-sizing-notes",level:3},{value:"Diagram (k8s topology)",id:"diagram-k8s-topology",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"kubernetes-deployment-guide-helmkustomize",children:"Kubernetes Deployment Guide (Helm/Kustomize)"}),"\n",(0,t.jsxs)(n.p,{children:["This guide provides Helm and Kustomize blueprints for deploying NowConnect Cloud Hub with optional HA mesh and ingress mTLS for ",(0,t.jsx)(n.code,{children:"/mesh"}),". Includes capacity notes and recommended settings."]}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Namespace created; Ingress Controller (Traefik or Nginx)"}),"\n",(0,t.jsxs)(n.li,{children:["Secrets for ",(0,t.jsx)(n.code,{children:"cloud.yaml"}),", JWKS URL/audience, and optional mesh CA/cert/key"]}),"\n",(0,t.jsx)(n.li,{children:"Redis (managed or in-cluster) for HA Registry"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"helm-template-style-values",children:"Helm (template-style values)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'replicaCount: 2\r\nimage:\r\n  repository: your-registry/nowconnect-cloud\r\n  tag: latest\r\nenv:\r\n  NC_CONFIG: /app/config/cloud.yaml\r\nvolumeMounts:\r\n  - name: config\r\n    mountPath: /app/config\r\n  - name: mesh-certs\r\n    mountPath: /app/certs\r\nvolumes:\r\n  - name: config\r\n    secret:\r\n      secretName: nowconnect-config\r\n  - name: mesh-certs\r\n    secret:\r\n      secretName: nowconnect-mesh-certs\r\nservice:\r\n  ports:\r\n    - name: tunnel\r\n      port: 8765\r\n      targetPort: 8765\r\n    - name: ldap\r\n      port: 389\r\n      targetPort: 389\r\ningress:\r\n  enabled: true\r\n  className: traefik\r\n  hosts:\r\n    - host: api.example.com\r\n      paths:\r\n        - path: /tunnel\r\n          pathType: Prefix\r\n          serviceName: nowconnect\r\n          servicePort: 8765\r\n        - path: /mesh\r\n          pathType: Prefix\r\n          serviceName: nowconnect\r\n          servicePort: 8765\r\n  annotations:\r\n    traefik.ingress.kubernetes.io/router.tls: "true"\r\n    traefik.ingress.kubernetes.io/router.tls.options: mtls@file\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Traefik dynamic options ConfigMap (referenced by ",(0,t.jsx)(n.code,{children:"mtls@file"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: traefik-dynamic\r\n  namespace: kube-system\r\ndata:\r\n  traefik_dynamic.yml: |\r\n    tls:\r\n      options:\r\n        mtls:\r\n          clientAuth:\r\n            clientAuthType: RequireAndVerifyClientCert\r\n            caFiles:\r\n              - /etc/traefik/mesh/mesh_ca.pem\n"})}),"\n",(0,t.jsx)(n.h3,{id:"kustomize-overlay-example",children:"Kustomize overlay (example)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"resources:\r\n  - deployment.yaml\r\n  - service.yaml\r\n  - ingress.yaml\r\n  - config-secret.yaml\r\n  - mesh-certs-secret.yaml\r\n\r\npatches:\r\n  - path: replicas-patch.yaml\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"replicas-patch.yaml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: nowconnect\r\nspec:\r\n  replicas: 2\n"})}),"\n",(0,t.jsx)(n.h3,{id:"capacity-and-sizing-notes",children:"Capacity and sizing notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Start with 0.5\u20131 vCPU and 512\u20131024 MiB RAM per hub, then size by:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Agents and concurrent connections"}),"\n",(0,t.jsxs)(n.li,{children:["RTT between hubs (impacts ",(0,t.jsx)(n.code,{children:"send_queue_depth"})," and inflight bytes)"]}),"\n",(0,t.jsx)(n.li,{children:"Throughput per connector"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Redis: provision for registry size and updates; enable HA in production."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"diagram-k8s-topology",children:"Diagram (k8s topology)"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\r\n  subgraph Cluster\r\n    NC1[NowConnect Hub A]\r\n    NC2[NowConnect Hub B]\r\n    SVC[(Service 8765)]\r\n    IG[Ingress]\r\n  end\r\n  AG[Premise Agent] -- WSS /tunnel --\x3e IG\r\n  NC1 <--\x3e|/mesh mTLS| IG\r\n  NC2 <--\x3e|/mesh mTLS| IG\r\n  NC1 --\x3e R[(Redis)]\r\n  NC2 --\x3e R"})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7630],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},95598:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"source_content/membership_service_reviewers_guide","title":"Membership Service Reviewer\'s Guide","description":"This guide helps evaluators trial the EmpowerNow Membership Service with a focus on AI authorization, user-bound identities, spending/budget controls, and graph-powered delegation. It provides business context, architecture, data/schema overview, key APIs, and a real-world case study with hands-on steps.","source":"@site/docs/source_content/membership_service_reviewers_guide.md","sourceDirName":"source_content","slug":"/source_content/membership_service_reviewers_guide","permalink":"/empowernow_docs/docs/source_content/membership_service_reviewers_guide","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/membership_service_reviewers_guide.md","tags":[],"version":"current","frontMatter":{}}');var r=i(74848),t=i(28453);const d={},c="Membership Service Reviewer's Guide",a={},l=[{value:"Executive introduction: what you\u2019re reviewing and why it\u2019s different",id:"executive-introduction-what-youre-reviewing-and-why-its-different",level:2},{value:"1. Why this matters: AI authorization in the enterprise",id:"1-why-this-matters-ai-authorization-in-the-enterprise",level:2},{value:"2. Architecture at a glance",id:"2-architecture-at-a-glance",level:2},{value:"3. Neo4j schema (core nodes/edges)",id:"3-neo4j-schema-core-nodesedges",level:2},{value:"4. Key features mapped to business needs",id:"4-key-features-mapped-to-business-needs",level:2},{value:"5. PIP endpoints (Membership \u2192 PDP)",id:"5-pip-endpoints-membership--pdp",level:2},{value:"6. Core APIs (search and identity)",id:"6-core-apis-search-and-identity",level:2},{value:"7. Hands-on: trial setup",id:"7-hands-on-trial-setup",level:2},{value:"8. Case study: Travel booking copilot",id:"8-case-study-travel-booking-copilot",level:2},{value:"9. Observability &amp; ops",id:"9-observability--ops",level:2},{value:"10. Review checklist",id:"10-review-checklist",level:2},{value:"11. Reference",id:"11-reference",level:2},{value:"Appendix A: PIP evaluation sequence",id:"appendix-a-pip-evaluation-sequence",level:2},{value:"Appendix B: PDP decision/constraints example",id:"appendix-b-pdp-decisionconstraints-example",level:2},{value:"Appendix F: Query cookbook (with DDL)",id:"appendix-f-query-cookbook-with-ddl",level:2},{value:"Appendix G: Audit and lineage",id:"appendix-g-audit-and-lineage",level:2},{value:"Appendix H: PIP data contracts and error taxonomy",id:"appendix-h-pip-data-contracts-and-error-taxonomy",level:2},{value:"Appendix C: Identity chain example",id:"appendix-c-identity-chain-example",level:2},{value:"Appendix D: Quickstart (curl) and Postman",id:"appendix-d-quickstart-curl-and-postman",level:2},{value:"Appendix E: ReBAC walk\u2011through and policy sketch",id:"appendix-e-rebac-walkthrough-and-policy-sketch",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",input:"input",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"membership-service-reviewers-guide",children:"Membership Service Reviewer's Guide"})}),"\n",(0,r.jsx)(n.p,{children:"This guide helps evaluators trial the EmpowerNow Membership Service with a focus on AI authorization, user-bound identities, spending/budget controls, and graph-powered delegation. It provides business context, architecture, data/schema overview, key APIs, and a real-world case study with hands-on steps."}),"\n",(0,r.jsx)(n.h2,{id:"executive-introduction-what-youre-reviewing-and-why-its-different",children:"Executive introduction: what you\u2019re reviewing and why it\u2019s different"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"What this is: an authoritative graph (FastAPI + Neo4j) for identities, delegations, capabilities, tenant/data scope, step-up hints, and identity-chaining eligibility. It exposes PIP endpoints to the PDP and is consulted by the IdP when issuing passports; Redis accelerates hot paths."}),"\n",(0,r.jsxs)(n.li,{children:["ARIA profile and extensions: ARIA (Agent Relationship-based Identity & Authorization) defines how rich authorization context is carried and enforced. In our system, the IdP emits OIDC tokens with ",(0,r.jsx)(n.code,{children:"aria_extensions"})," (e.g., ",(0,r.jsx)(n.code,{children:"budget"}),", ",(0,r.jsx)(n.code,{children:"max_steps"}),", ",(0,r.jsx)(n.code,{children:"schema_pins"}),", ",(0,r.jsx)(n.code,{children:"call_id"}),"), the PDP returns an ARIA v1 context (constraints/obligations), and the Gateway/BFF enforces them."]}),"\n",(0,r.jsxs)(n.li,{children:["Enterprise AI problems addressed:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"On-behalf-of execution: bind agents to specific users/services with explicit capabilities and lifetimes."}),"\n",(0,r.jsx)(n.li,{children:"Data scope and tenancy: constrain which tenants/rows/columns an agent can access for safe RAG."}),"\n",(0,r.jsx)(n.li,{children:"Prompt/content safety: enforce egress allowlists and schema pins via PDP constraints."}),"\n",(0,r.jsx)(n.li,{children:"Cost control: attach budget_usd and max_steps to delegations to bound spend and chain length."}),"\n",(0,r.jsx)(n.li,{children:"Downstream calls: express identity-chaining eligibility (audiences/scopes) for provider tokens."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["How it works (Authzen-aligned extensions implemented):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["PIP under ",(0,r.jsx)(n.code,{children:"/api/v1/pip/membership"}),": ",(0,r.jsx)(n.code,{children:"capabilities"}),", ",(0,r.jsx)(n.code,{children:"delegations"})," (includes ",(0,r.jsx)(n.code,{children:"budget_usd"}),", ",(0,r.jsx)(n.code,{children:"max_steps"}),"), ",(0,r.jsx)(n.code,{children:"data-scope"}),", ",(0,r.jsx)(n.code,{children:"step-up"}),", ",(0,r.jsx)(n.code,{children:"chain-eligibility"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Governance endpoints now available:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["CONTROLLED_BY: ",(0,r.jsx)(n.code,{children:"PUT /api/v1/agent/agents/{agent_id}/control"}),", ",(0,r.jsx)(n.code,{children:"GET /api/v1/agent/agents/{agent_id}/controllers"}),", ",(0,r.jsx)(n.code,{children:"DELETE /api/v1/agent/agents/{agent_id}/control"})]}),"\n",(0,r.jsxs)(n.li,{children:["Resource ownership: ",(0,r.jsx)(n.code,{children:"POST /api/v1/resources/{resource_id}/owners"}),", ",(0,r.jsx)(n.code,{children:"GET /api/v1/resources/{resource_id}/owners"}),", ",(0,r.jsx)(n.code,{children:"DELETE /api/v1/resources/{resource_id}/owners"})]}),"\n",(0,r.jsxs)(n.li,{children:["RTR authoring: ",(0,r.jsx)(n.code,{children:"POST /api/v1/rtrs/assign"}),", ",(0,r.jsx)(n.code,{children:"POST /api/v1/rtrs/assign-at"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["IdP passports embed ",(0,r.jsx)(n.code,{children:"aria_extensions.budget"})," and ",(0,r.jsx)(n.code,{children:"aria_extensions.max_steps"})," derived from active delegations."]}),"\n",(0,r.jsx)(n.li,{children:"PDP composes decision + constraints; Gateway/BFF enforces egress/schema/data_scope/step_up/identity_chain."}),"\n",(0,r.jsxs)(n.li,{children:["Graph storage: ",(0,r.jsx)(n.code,{children:"DELEGATES_TO"})," carries ",(0,r.jsx)(n.code,{children:"budget_usd"})," and ",(0,r.jsx)(n.code,{children:"max_steps"}),"; delegations link to ",(0,r.jsx)(n.code,{children:"Capability"}),"; tenants attach to users; tools map to SaaS apps with required scopes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["What\u2019s unique vs typical IAM:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Delegation-first, relationship-centric model purpose-built for AI agents (user-bound behavior)."}),"\n",(0,r.jsx)(n.li,{children:"Cost and step limits on the delegation edge, not just coarse account quotas."}),"\n",(0,r.jsx)(n.li,{children:"Identity-chaining eligibility as a first-class API for safe provider-scoped tokens."}),"\n",(0,r.jsx)(n.li,{children:"Data-scope computed and returned in enforcement-ready form (e.g., SQL filter + tenant_ids)."}),"\n",(0,r.jsx)(n.li,{children:"Reproducible evaluation: seeds, unit/integration tests, and Postman collection included."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["How to evaluate quickly:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Seed Neo4j with ",(0,r.jsx)(n.code,{children:"membership/seeds/pip_minimal.cypher"})," and run ",(0,r.jsx)(n.code,{children:"membership/scripts/seed_neo4j.py"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Exercise the PIP endpoints with the sample IDs (see examples below) via curl/Postman."}),"\n",(0,r.jsx)(n.li,{children:"Compare PDP constraints output with your enforcement layer to validate fit."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"ARIA at a glance (where it shows up):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["PDP: returns ARIA v1 rich context under ",(0,r.jsx)(n.code,{children:"context.constraints"})," and ",(0,r.jsx)(n.code,{children:"context.obligations"})," (AuthZEN request semantics)."]}),"\n",(0,r.jsx)(n.li,{children:"Membership: PIP supplies the graph truth PDP needs (capabilities, data_scope, step_up, chain_eligibility)."}),"\n",(0,r.jsx)(n.li,{children:"Gateway/BFF: enforces constraints (egress allowlist, schema pins, budget, step_up, identity_chain)."}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant App\r\n  participant IdP\r\n  participant PDP\r\n  participant Membership\r\n  participant Gateway\r\n  App->>IdP: OIDC (PAR + DPoP + private_key_jwt)\r\n  IdP--\x3e>App: Token with aria_extensions {...}\r\n  App->>PDP: AuthZEN evaluate(subject, action, resource, context)\r\n  PDP->>Membership: PIP queries (caps/data_scope/step_up/chain_eligibility)\r\n  Membership--\x3e>PDP: results\r\n  PDP--\x3e>App: decision + ARIA v1 constraints/obligations\r\n  App->>Gateway: Enforce constraints on tool/API calls"}),"\n",(0,r.jsx)(n.p,{children:"Glossary (quick):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["ARIA: Agent Relationship-based Identity & Authorization; rich context carried in ",(0,r.jsx)(n.code,{children:"aria_extensions"})," and PDP responses."]}),"\n",(0,r.jsxs)(n.li,{children:["AuthZEN: authorization request semantics ",(0,r.jsx)(n.code,{children:"{subject, action, resource, context}"})," used by our PDP."]}),"\n",(0,r.jsx)(n.li,{children:"Actor (act) claim: standard OIDC claim indicating on\u2011behalf\u2011of principal for user\u2011bound agents."}),"\n",(0,r.jsx)(n.li,{children:"ID\u2011JAG: Identity Assertion JWT used as a JWT Bearer grant (RFC 7523) after Token Exchange (RFC 8693) per the Identity & Authorization Chaining profile."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Cross\u2011App Access (Identity & Authorization Chaining) \u2013 Membership\u2019s role:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why it matters: eliminates per\u2011app interactive consent for AI tools while centralizing policy at the IdP."}),"\n",(0,r.jsxs)(n.li,{children:["Membership tie\u2011in: ",(0,r.jsx)(n.code,{children:"chain-eligibility"})," PIP returns allowed audiences/scopes for safe chaining; PDP consumes this to constrain downstream token issuance by resource providers."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Industry momentum & naming:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Vendors (e.g., Okta) describe this profile as \u201cCross\u2011App Access.\u201d Our implementation follows the same RFC pattern (8693 + 7523) with a dedicated Identity Assertion endpoint and Membership PIP ",(0,r.jsx)(n.code,{children:"chain-eligibility"})," to bound audiences/scopes."]}),"\n",(0,r.jsx)(n.li,{children:"Names vary, but the flow is the same: IdP sits in the middle, issues a short\u2011lived assertion, resource app AS validates and mints its own token."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-why-this-matters-ai-authorization-in-the-enterprise",children:"1. Why this matters: AI authorization in the enterprise"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Problem: AI agents operate \u201con behalf of\u201d users and services, touching sensitive data, systems, and budgets."}),"\n",(0,r.jsxs)(n.li,{children:["Risks addressed:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Identity binding: ensure an agent is truly acting for a specific user/service pair."}),"\n",(0,r.jsx)(n.li,{children:"Delegation clarity: explicitly constrain what an agent can do (capabilities) and for how long."}),"\n",(0,r.jsx)(n.li,{children:"Data scope: enforce tenant/row/column restrictions for safe retrieval-augmented generation."}),"\n",(0,r.jsx)(n.li,{children:"Prompt/content security: prevent data exfiltration, schema drift, and over-permissive calls."}),"\n",(0,r.jsx)(n.li,{children:"Spend control: bound per-call, per-plan budgets and chain-token issuance."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Outcome: auditable authorization decisions with graph truth and policy overlays, enabling safe AI adoption."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-architecture-at-a-glance",children:"2. Architecture at a glance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Membership Service (FastAPI + Neo4j): source of truth for identities, delegations, capabilities, and metadata."}),"\n",(0,r.jsx)(n.li,{children:"PDP (AuthZ engine): computes allow/deny with constraints; calls Membership PIP for data_scope, step_up, and identity_chain."}),"\n",(0,r.jsx)(n.li,{children:"IdP: issues passports with budget and max_steps based on active delegations."}),"\n",(0,r.jsx)(n.li,{children:"BFF/Gateway: enforces constraints (egress allowlist, schema pins, budget, data_scope) at runtime."}),"\n",(0,r.jsx)(n.li,{children:"Redis: caching for hot paths; Kafka (optional) for events and audit."}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:'graph LR\r\n  U["User"] --\x3e I["IdP (Passport Issuer)"]\r\n  A["AI Agent / Service"] --\x3e I\r\n  I --\x3e|"Passport (budget, max_steps, schema pins)"| G["Gateway / BFF"]\r\n  G --\x3e P["PDP"]\r\n  P --\x3e|"PIP calls"| M["Membership Service"]\r\n  M --\x3e N[("Neo4j Graph")]\r\n  M --\x3e R[("Redis Cache")]\r\n  P --\x3e C["Constraints: egress, schema pins, data_scope, step_up, identity_chain"]\r\n  G --\x3e T["SaaS Tool / API"]'}),"\n",(0,r.jsx)(n.h2,{id:"3-neo4j-schema-core-nodesedges",children:"3. Neo4j schema (core nodes/edges)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Nodes: ",(0,r.jsx)(n.code,{children:"User"})," (Identity), ",(0,r.jsx)(n.code,{children:"Agent"})," (AI/service principal), ",(0,r.jsx)(n.code,{children:"Delegation"}),", ",(0,r.jsx)(n.code,{children:"Capability"}),", ",(0,r.jsx)(n.code,{children:"Tenant"}),", ",(0,r.jsx)(n.code,{children:"Tool"}),", ",(0,r.jsx)(n.code,{children:"SaaSApp"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Relationships:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"(:User)-[:DELEGATES_TO]->(:Delegation)-[:BINDS]->(:Agent)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"(:Delegation)-[:HAS_CAPABILITY]->(:Capability)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"(:User)-[:BELONGS_TO]->(:Tenant)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"(:Agent)-[:CAN_INVOKE]->(:Tool)-[:REQUIRES]->(:SaaSApp {scopes: [...]})"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Indices/constraints: see ",(0,r.jsx)(n.code,{children:"ServiceConfigs/membership/config/neo4j_indices.yaml"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Model invariants and lifecycles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Labels: ",(0,r.jsx)(n.code,{children:"Identity"})," is the root label; ",(0,r.jsx)(n.code,{children:"User"}),"/",(0,r.jsx)(n.code,{children:"Agent"})," are specializations; ",(0,r.jsx)(n.code,{children:"Account"}),", ",(0,r.jsx)(n.code,{children:"Tenant"}),", ",(0,r.jsx)(n.code,{children:"Tool"}),", ",(0,r.jsx)(n.code,{children:"SaaSApp"})," as typed nodes."]}),"\n",(0,r.jsxs)(n.li,{children:["Uniqueness: ",(0,r.jsx)(n.code,{children:"Identity.id"}),", ",(0,r.jsx)(n.code,{children:"Agent.id"}),", ",(0,r.jsx)(n.code,{children:"Tool.id"}),", ",(0,r.jsx)(n.code,{children:"MCPService.id"}),", and ",(0,r.jsx)(n.code,{children:"DELEGATES_TO.id"})," are unique; see ",(0,r.jsx)(n.code,{children:"storage/graph_modules/graph_schema.py"})," and ",(0,r.jsx)(n.code,{children:"storage/graph_store.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DELEGATES_TO"})," lifecycle: ",(0,r.jsx)(n.code,{children:"status in {active, revoked, expired}"}),"; validity checked as ",(0,r.jsx)(n.code,{children:"d.expires_at IS NULL OR d.expires_at > datetime()"}),"; expiry sweeper marks overdue edges (APOC with fallback)."]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"erDiagram\r\n  User ||--o{ Delegation : DELEGATES_TO\r\n  Delegation }o--|| Agent : BINDS\r\n  Delegation ||--o{ Capability : HAS_CAPABILITY\r\n  User }o--|| Tenant : BELONGS_TO\r\n  Agent }o--|| Tool : CAN_INVOKE\r\n  Tool }o--|| SaaSApp : REQUIRES\r\n\r\n  User {\r\n    string id\r\n    string mfa_level\r\n  }\r\n  Delegation {\r\n    string id\r\n    string status\r\n    datetime valid_from\r\n    datetime valid_until\r\n    float budget_usd\r\n    int max_steps\r\n    string jkt\r\n    string constraints\r\n  }\r\n  Agent {\r\n    string id\r\n  }\r\n  Capability {\r\n    string id\r\n  }\r\n  Tenant {\r\n    string id\r\n    string name\r\n  }\r\n  Tool {\r\n    string id\r\n  }\r\n  SaaSApp {\r\n    string id\r\n    string[] scopes\r\n  }"}),"\n",(0,r.jsx)(n.p,{children:"Common Cypher snippets:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cypher",children:"// Active capabilities for a user-bound agent\r\nMATCH (u:User {id:$user_id})-[:DELEGATES_TO]->(d:Delegation {status:'active'})-[:BINDS]->(a:Agent {id:$agent_id})\r\nMATCH (d)-[:HAS_CAPABILITY]->(c:Capability)\r\nRETURN collect(DISTINCT c.id) AS capabilities;\r\n\r\n// Delegations with budget/steps\r\nMATCH (u:User {id:$user_id})-[:DELEGATES_TO]->(d:Delegation)-[:BINDS]->(a:Agent {id:$agent_id})\r\nRETURN d.id AS delegation_id, d.status, d.budget_usd, d.max_steps, d.expires_at;\r\n\r\n// Tenants for data scope\r\nMATCH (u:User {id:$sid})-[:BELONGS_TO]->(t:Tenant)\r\nOPTIONAL MATCH (u)-[:ASSIGNED_TO]->(:Project)-[:OWNED_BY]->(tp:Tenant)\r\nWITH collect(DISTINCT t.id) + collect(DISTINCT tp.id) AS tids\r\nRETURN [x IN tids WHERE x IS NOT NULL] AS tenant_ids;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"4-key-features-mapped-to-business-needs",children:"4. Key features mapped to business needs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["User-bound identities and delegation","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: bind an agent to a specific user; avoid \u201cloose\u201d service accounts."}),"\n",(0,r.jsxs)(n.li,{children:["How: ",(0,r.jsx)(n.code,{children:"DELEGATES_TO"})," with capabilities, status, time bounds, budget_usd, max_steps."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Data scope and tenancy","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: ensure agents only query/see allowed tenants/rows/columns."}),"\n",(0,r.jsxs)(n.li,{children:["How: derive ",(0,r.jsx)(n.code,{children:"tenant_ids"})," and ",(0,r.jsx)(n.code,{children:"row_filter_sql"})," (fail-closed to 1=0)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Step-up hints","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: trigger MFA for sensitive actions."}),"\n",(0,r.jsxs)(n.li,{children:["How: compute from user\u2019s ",(0,r.jsx)(n.code,{children:"mfa_level"})," or policy."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Identity chaining (downstream API calls)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: safely exchange the agent-user binding into provider-scoped tokens."}),"\n",(0,r.jsx)(n.li,{children:"How: return allowable audiences/scopes for a tool\u2019s provider."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Spend and budget controls","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: prevent runaway cost; enforce plan budgets and step limits."}),"\n",(0,r.jsxs)(n.li,{children:["How: aggregate budget across delegations; IdP embeds ",(0,r.jsx)(n.code,{children:"budget.initial"})," and ",(0,r.jsx)(n.code,{children:"max_steps"})," in JWT."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Prompt/content security (via PDP + Gateway)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Why: block secret leakage, unsafe egress, schema violations."}),"\n",(0,r.jsx)(n.li,{children:"How: PDP returns constraints (egress allowlist, schema pins, disallowed phrases) that gateway enforces."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-pip-endpoints-membership--pdp",children:"5. PIP endpoints (Membership \u2192 PDP)"}),"\n",(0,r.jsxs)(n.p,{children:["Base prefix: ",(0,r.jsx)(n.code,{children:"/api/v1/pip/membership"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /capabilities?user_id=&agent_id="})," \u2192 ",(0,r.jsx)(n.code,{children:'{ capabilities: ["mcp:flights:search", ...] }'})]}),"\n",(0,r.jsx)(n.li,{children:"Example (seeded demo):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{ "capabilities": ["mcp:flights:book", "mcp:flights:search"] }\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /delegations?user_id=&agent_id=&status=active"})," \u2192 list with ",(0,r.jsx)(n.code,{children:"budget_usd"}),", ",(0,r.jsx)(n.code,{children:"max_steps"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Pagination: ",(0,r.jsx)(n.code,{children:"limit"})," (1\u2013500, default 50), ",(0,r.jsx)(n.code,{children:"offset"})," (>=0). Server caps large responses."]}),"\n",(0,r.jsx)(n.li,{children:"Example (seeded demo):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\r\n  { "delegation_id": "delegation:demo1-to-agent1", "status": "active", "max_steps": 5, "budget_usd": 25.0, "expires_at": null }\r\n]\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /data-scope?subject_id=&resource_type="})," \u2192 ",(0,r.jsx)(n.code,{children:"{ tenant_ids: [...], row_filter_sql, column_mask }"})]}),"\n",(0,r.jsx)(n.li,{children:"Example (seeded demo):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{ "tenant_ids": ["tenant:acme"], "row_filter_sql": "tenant_id IN (\'tenant:acme\')", "column_mask": {} }\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /step-up?subject_id="})," \u2192 ",(0,r.jsx)(n.code,{children:"{ mfa_required, level }"})]}),"\n",(0,r.jsx)(n.li,{children:"Example (seeded demo; default strong when mfa_level is none):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{ "mfa_required": true, "level": "strong" }\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /chain-eligibility?user_id=&agent_id=&tool_id="})," \u2192 ",(0,r.jsx)(n.code,{children:"[ { audience, scopes } ]"})]}),"\n",(0,r.jsx)(n.li,{children:"Example (seeded demo):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[{ "audience": "api.flights.com", "scopes": ["flights.read", "flights.write"] }]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"6-core-apis-search-and-identity",children:"6. Core APIs (search and identity)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/v1/identity_nodes/search"})," \u2192 search by ",(0,r.jsx)(n.code,{children:"node_type"}),", ",(0,r.jsx)(n.code,{children:"search"}),", ",(0,r.jsx)(n.code,{children:"system"}),", optional filters; pagination."]}),"\n",(0,r.jsx)(n.li,{children:"Example request (seeded demo):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/api/v1/identity_nodes/search?node_type=Person&search=John&system=active_directory&limit=10&skip=0\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Returns: list of nodes; optional filters excluded when unset."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/v1/identity_nodes/search/with-metadata"})," \u2192 adds ",(0,r.jsx)(n.code,{children:"total"}),", ",(0,r.jsx)(n.code,{children:"has_more"}),", and optional ",(0,r.jsx)(n.code,{children:"relationships"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Example response shape:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "nodes": [ { "id": "person1", "name": "John", "relationships": { } } ],\r\n  "total": 1,\r\n  "limit": 10,\r\n  "skip": 0,\r\n  "has_more": false,\r\n  "relationships": {}\r\n}\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/v1/identity_nodes/count"})," \u2192 count by ",(0,r.jsx)(n.code,{children:"node_type"}),"/",(0,r.jsx)(n.code,{children:"search"}),"/",(0,r.jsx)(n.code,{children:"system"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Example query params are normalized in routes to exclude nulls."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All routes accept only non-null parameters; optional filters are excluded when unset."}),"\n",(0,r.jsx)(n.p,{children:"Search semantics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Filters are ANDed."}),"\n",(0,r.jsx)(n.li,{children:"Substring matches are case-insensitive by default (implementation-specific in graph layer)."}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"use_fulltext=true"})," (metadata route) when relevance scoring and fuzzy matching are desirable."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Indexes and constraints (selection):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["From ",(0,r.jsx)(n.code,{children:"ServiceConfigs/membership/config/neo4j_indices.yaml"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pip_support"}),": ",(0,r.jsx)(n.code,{children:"Tenant(id,name)"}),", ",(0,r.jsx)(n.code,{children:"MCPService(id,api_endpoint)"}),", ",(0,r.jsx)(n.code,{children:"Tool(id)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"identity_pk"}),": ",(0,r.jsx)(n.code,{children:"Person(id)"}),", ",(0,r.jsx)(n.code,{children:"Account(id)"}),", ",(0,r.jsx)(n.code,{children:"Group(id)"}),", etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"identity_search"}),": ",(0,r.jsx)(n.code,{children:"Identity(job_title,email,country,telephone)"})]}),"\n",(0,r.jsxs)(n.li,{children:["Full-text: labels ",(0,r.jsx)(n.code,{children:"Identity, Person, AIAgent, Group, Account"})," on properties ",(0,r.jsx)(n.code,{children:"name, display_name, email, job_title, country, telephone"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"7-hands-on-trial-setup",children:"7. Hands-on: trial setup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Seed Neo4j with a minimal dataset:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"python membership/scripts/seed_neo4j.py --uri bolt://localhost:7687 --user neo4j --password test"})}),"\n",(0,r.jsxs)(n.li,{children:["Or against the compose container: ",(0,r.jsx)(n.code,{children:"bolt://localhost:7688"}),", password ",(0,r.jsx)(n.code,{children:"password123"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Verify seeds:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"membership/scripts/quick_check.py"})," prints counts and sample relations."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Run focused tests:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["PIP router unit/integration tests in ",(0,r.jsx)(n.code,{children:"membership/tests"})," (see README snippets)."]}),"\n",(0,r.jsx)(n.li,{children:"Identity search unit tests (routes/services) should pass as of this guide."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"8-case-study-travel-booking-copilot",children:"8. Case study: Travel booking copilot"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Scenario: A travel copilot agent books flights \u201con behalf of\u201d employees."}),"\n",(0,r.jsxs)(n.li,{children:["Identities:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user:demo1"})," belongs to tenant ",(0,r.jsx)(n.code,{children:"tenant:acme"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Agent ",(0,r.jsx)(n.code,{children:"agent:svc-123:for:demo1"})," bound by an active delegation with capabilities ",(0,r.jsx)(n.code,{children:"mcp:flights:search"}),", ",(0,r.jsx)(n.code,{children:"mcp:flights:book"}),", budget ",(0,r.jsx)(n.code,{children:"$25"}),", max_steps ",(0,r.jsx)(n.code,{children:"5"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Flow:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["IdP issues a token with ",(0,r.jsx)(n.code,{children:'aria_extensions.budget={"unit":"usd","amount":25}'}),", ",(0,r.jsx)(n.code,{children:"aria_extensions.max_steps=5"})," and schema pins."]}),"\n",(0,r.jsxs)(n.li,{children:["PDP calls Membership PIP: verifies capability for ",(0,r.jsx)(n.code,{children:"mcp:flights:search"}),"; returns ",(0,r.jsx)(n.code,{children:"data_scope"})," and ",(0,r.jsx)(n.code,{children:"step_up"})," (strong if needed); returns ",(0,r.jsx)(n.code,{children:"identity_chain"})," for ",(0,r.jsx)(n.code,{children:"api.flights.com"})," with scopes."]}),"\n",(0,r.jsx)(n.li,{children:"Gateway enforces egress allowlist, budget, schema pins; tool call proceeds."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Why it matters:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The agent is strictly constrained on actions, data, and cost."}),"\n",(0,r.jsx)(n.li,{children:"Auditability: all decisions logged with graph truth and constraints."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"9-observability--ops",children:"9. Observability & ops"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Health: ",(0,r.jsx)(n.code,{children:"/health"})," endpoints from services."]}),"\n",(0,r.jsx)(n.li,{children:"Metrics: Prometheus counters/histograms for key operations."}),"\n",(0,r.jsx)(n.li,{children:"Logs: structured logs on request start/success/error with correlation IDs."}),"\n",(0,r.jsx)(n.li,{children:"Kafka (optional): delegation events for audit and analytics."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"10-review-checklist",children:"10. Review checklist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Identity binding:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Active ",(0,r.jsx)(n.code,{children:"DELEGATES_TO"})," edges exist with status/ttl/jkt as appropriate"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Capabilities anchored on delegations"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Data scope:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.code,{children:"data_scope"})," returns correct tenant_ids and fail-closed when unknown"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Policy integration:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","PDP includes constraints for egress/schema/prompt rules"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Budget/steps:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Token includes ",(0,r.jsx)(n.code,{children:"aria_extensions.budget"})," and ",(0,r.jsx)(n.code,{children:"aria_extensions.max_steps"})," per delegations"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Tool chaining:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.code,{children:"chain-eligibility"})," lists correct audiences/scopes for target tool"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Search UX:","\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Search endpoints perform as expected; metadata endpoints return ",(0,r.jsx)(n.code,{children:"total"}),"/",(0,r.jsx)(n.code,{children:"has_more"})," and optional ",(0,r.jsx)(n.code,{children:"relationships"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"11-reference",children:"11. Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Config:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ServiceConfigs/membership/config/settings.yaml"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ServiceConfigs/membership/config/neo4j_indices.yaml"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Seeds/tests:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"membership/seeds/pip_minimal.cypher"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"membership/scripts/seed_neo4j.py"}),", ",(0,r.jsx)(n.code,{children:"membership/scripts/quick_check.py"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"membership/tests/*"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Design docs:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"mcp_gateway/docs/________newdesign10_membership.md"})}),"\n",(0,r.jsx)(n.li,{children:"PDP and IdP design counterparts for constraints and passport flows"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"For questions or deep-dive sessions, contact the engineering team and reference decision logs with correlation IDs from your trial runs."}),"\n",(0,r.jsx)(n.h2,{id:"appendix-a-pip-evaluation-sequence",children:"Appendix A: PIP evaluation sequence"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant PDP\r\n  participant Membership\r\n  participant Neo4j\r\n  participant Gateway\r\n  PDP->>Membership: GET /api/v1/pip/membership/capabilities\r\n  Membership->>Neo4j: Match user->delegation->agent capabilities\r\n  Neo4j--\x3e>Membership: caps[]\r\n  Membership--\x3e>PDP: {capabilities}\r\n  PDP->>Membership: GET /data-scope?subject_id&resource_type\r\n  Membership->>Neo4j: Compute tenant_ids\r\n  Neo4j--\x3e>Membership: tenant_ids\r\n  Membership--\x3e>PDP: {tenant_ids, row_filter_sql}\r\n  PDP->>Membership: GET /step-up?subject_id\r\n  Membership->>Neo4j: mfa_level\r\n  Neo4j--\x3e>Membership: level\r\n  Membership--\x3e>PDP: {mfa_required, level}\r\n  PDP->>Membership: GET /chain-eligibility?user_id&agent_id&tool_id\r\n  Membership->>Neo4j: tool->SaaSApp(scopes)\r\n  Neo4j--\x3e>Membership: {audience, scopes}\r\n  Membership--\x3e>PDP: [eligibility]\r\n  PDP--\x3e>Gateway: decision + constraints"}),"\n",(0,r.jsx)(n.h2,{id:"appendix-b-pdp-decisionconstraints-example",children:"Appendix B: PDP decision/constraints example"}),"\n",(0,r.jsx)(n.h2,{id:"appendix-f-query-cookbook-with-ddl",children:"Appendix F: Query cookbook (with DDL)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Capability check (user\u2192agent): uses ",(0,r.jsx)(n.code,{children:"DELEGATES_TO"})," with ",(0,r.jsx)(n.code,{children:"status='active'"})," and validity window; indexed by relationship properties. See ",(0,r.jsx)(n.code,{children:"storage/graph_modules/graph_delegation.py"})," and ",(0,r.jsx)(n.code,{children:"storage/graph_store.py"})," for constraints and indexes."]}),"\n",(0,r.jsxs)(n.li,{children:["Data scope: ",(0,r.jsx)(n.code,{children:"MATCH (u {id:$sid}) OPTIONAL MATCH (u)-[:BELONGS_TO]->(t:Tenant) OPTIONAL MATCH (u)-[:ASSIGNED_TO]->(:Project)-[:OWNED_BY]->(tp:Tenant) ... LIMIT 1"})," \u2013 backed by ",(0,r.jsx)(n.code,{children:"Tenant(id)"})," and full\u2011text indices for identity search."]}),"\n",(0,r.jsxs)(n.li,{children:["Chain eligibility: ",(0,r.jsx)(n.code,{children:"MATCH (t:Tool {id:$tool_id})<-[:PROVIDES]-(s:MCPService) RETURN s.api_endpoint, s.auth_config_metadata LIMIT 1"})," \u2013 backed by ",(0,r.jsx)(n.code,{children:"Tool(id)"})," and ",(0,r.jsx)(n.code,{children:"MCPService(id)"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Tip: Run ",(0,r.jsx)(n.code,{children:"EXPLAIN"})," on these queries against the seeded dataset; indexes are declared in code (see ",(0,r.jsx)(n.code,{children:"graph_mcp.py"}),", ",(0,r.jsx)(n.code,{children:"graph_agent.py"}),", ",(0,r.jsx)(n.code,{children:"graph_store.py"}),")."]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-g-audit-and-lineage",children:"Appendix G: Audit and lineage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Events: delegation add/update/revoke and relation changes emit Kafka events when configured; see ",(0,r.jsx)(n.code,{children:"services/membership.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Logs: ",(0,r.jsx)(n.code,{children:"structured_log"})," around delegation and identity operations with correlation IDs; use these to reconstruct decision trails."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-h-pip-data-contracts-and-error-taxonomy",children:"Appendix H: PIP data contracts and error taxonomy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Version: responses include stable shapes; future changes will add a ",(0,r.jsx)(n.code,{children:"version"})," field. Suggested consumer default is strict field validation."]}),"\n",(0,r.jsxs)(n.li,{children:["Error taxonomy (minimum):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["200 + empty/safe default when no relationship: ",(0,r.jsx)(n.code,{children:"{capabilities: []}"}),", ",(0,r.jsx)(n.code,{children:'{tenant_ids: [], row_filter_sql: "1=0"}'}),", ",(0,r.jsx)(n.code,{children:"[]"})," for chain eligibility."]}),"\n",(0,r.jsx)(n.li,{children:"4xx for validation errors (missing params), 5xx for backend errors (Neo4j/Redis unavailable)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "decision": true,\r\n  "context": {\r\n    "constraints": {\r\n      "egress": {"allow": ["api.openai.com:443", "tools.example.com:443"]},\r\n      "schema_pins": {"tool:flights": {"schema_version": "1.0", "schema_hash": "sha256:..."}},\r\n      "data_scope": {"tenant_ids": ["tenant:acme"], "row_filter_sql": "tenant_id IN (\'tenant:acme\')", "column_mask": {}},\r\n      "step_up": {"mfa_required": false, "level": "strong"},\r\n      "identity_chain": {"allowed_audiences": ["api.flights.com"], "allowed_scopes": ["flights.read","flights.write"], "max_token_ttl_seconds": 300}\r\n    },\r\n    "obligations": [{"id": "emit_receipt"}],\r\n    "decision_id": "..."\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"appendix-c-identity-chain-example",children:"Appendix C: Identity chain example"}),"\n",(0,r.jsx)(n.p,{children:"Eligibility response:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[{"audience": "api.flights.com", "scopes": ["flights.read", "flights.write"]}]\n'})}),"\n",(0,r.jsx)(n.p,{children:"Provider token request (conceptual):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"POST /oauth/token\r\naudience=api.flights.com&scope=flights.read%20flights.write&act_sub=agent:svc-123:for:...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"appendix-d-quickstart-curl-and-postman",children:"Appendix D: Quickstart (curl) and Postman"}),"\n",(0,r.jsx)(n.p,{children:"curl examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Capabilities\r\ncurl -s "https://membership.ocg.labs.empowernow.ai/api/v1/pip/membership/capabilities?user_id=user:demo1&agent_id=agent:svc-123:for:demo1"\r\n\r\n# Data scope\r\ncurl -s "https://membership.ocg.labs.empowernow.ai/api/v1/pip/membership/data-scope?subject_id=user:demo1&resource_type=record"\r\n\r\n# Search\r\ncurl -s "https://membership.ocg.labs.empowernow.ai/api/v1/identity_nodes/search?node_type=Person&search=John&system=active_directory&limit=10&skip=0"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Postman: import ",(0,r.jsx)(n.code,{children:"membership/docs/postman/membership_review.postman_collection.json"})," and set the ",(0,r.jsx)(n.code,{children:"baseUrl"})," variable."]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-e-rebac-walkthrough-and-policy-sketch",children:"Appendix E: ReBAC walk\u2011through and policy sketch"}),"\n",(0,r.jsx)(n.p,{children:"ReBAC example: \u201cJohn can approve expense in cost center CC-100\u201d"}),"\n",(0,r.jsx)(n.p,{children:"Graph walk (conceptual):"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart LR\r\n  U[User: John] -- MEMBER_OF --\x3e G[Group: Approvers]\r\n  G -- ASSIGNED_TO --\x3e BR[BusinessRole: ExpenseApprover]\r\n  BR -- SCOPED_TO --\x3e C[CostCenter: CC-100]\r\n  R[ExpenseReport: 987] -- BELONGS_TO --\x3e C"}),"\n",(0,r.jsx)(n.p,{children:"Cypher check (illustrative):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cypher",children:"MATCH (u:User {id:$user_id})-[:MEMBER_OF]->(:Group)-[:ASSIGNED_TO]->(br:BusinessRole {name:'ExpenseApprover'})\r\nMATCH (br)-[:SCOPED_TO]->(cc:CostCenter {id:$cost_center_id})\r\nMATCH (r:ExpenseReport {id:$report_id})-[:BELONGS_TO]->(cc)\r\nRETURN r.id AS report_id LIMIT 1;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Policy sketch (conceptual) \u2013 PDP combines graph truth with authored conditions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'allow:\r\n  when: action == "expense.approve"\r\n  and: constraints.capabilities contains "expense:approve"\r\n  and: data_scope.tenant_ids contains resource.tenant_id\r\n  and: rebac.expense_approver_for(resource.cost_center_id) == true\r\nobligations:\r\n  - id: emit_receipt\r\n  - id: tee_analytics\n'})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The Membership PIP can expose helper endpoints to answer specific relationship predicates, but most trials use PDP orchestration to merge constraints (capabilities + data_scope) with authored rules."}),"\n",(0,r.jsx)(n.li,{children:"Keep ReBAC queries narrow and index-backed (CostCenter.id, BusinessRole.name)."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);
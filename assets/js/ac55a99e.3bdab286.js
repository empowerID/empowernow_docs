"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4741],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(96540);const i={},c=s.createContext(i);function o(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:n},e.children)}},68724:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"services/crud-service/secrets/SECRETS_DEVOPS_GUIDE","title":"Secrets Management DevOps Guide","description":"How to run CRUDService secrets across Docker/Kubernetes and automate reads/rotation from CI (GitHub Actions)","source":"@site/docs/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE.md","sourceDirName":"services/crud-service/secrets","slug":"/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE.md","tags":[],"version":"current","frontMatter":{"title":"Secrets Management DevOps Guide","description":"How to run CRUDService secrets across Docker/Kubernetes and automate reads/rotation from CI (GitHub Actions)"},"sidebar":"tutorialSidebar","previous":{"title":"Secrets rotation \u2014 background and end\u2011to\u2011end flow","permalink":"/empowernow_docs/docs/services/crud-service/secrets/rotation"},"next":{"title":"OpenBao to Production \u2014 HA, Load Balancing, and Integration","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_HA_OPENBAO"}}');var i=r(74848),c=r(28453);const o={title:"Secrets Management DevOps Guide",description:"How to run CRUDService secrets across Docker/Kubernetes and automate reads/rotation from CI (GitHub Actions)"},a=void 0,t={},d=[{value:"Secrets Management DevOps Guide (Docker, Kubernetes, GitHub)",id:"secrets-management-devops-guide-docker-kubernetes-github",level:2},{value:"What this implements",id:"what-this-implements",level:3},{value:"1) Configuration model",id:"1-configuration-model",level:2},{value:"Global env (PEP, policy, audits)",id:"global-env-pep-policy-audits",level:3},{value:"Provider configuration (Vault-compatible)",id:"provider-configuration-vault-compatible",level:3},{value:"2) Docker Compose",id:"2-docker-compose",level:2},{value:"Dev (YAML provider)",id:"dev-yaml-provider",level:3},{value:"Prod (OpenBao KVv2)",id:"prod-openbao-kvv2",level:3},{value:"3) Kubernetes",id:"3-kubernetes",level:2},{value:"4) CI automation (GitHub Actions)",id:"4-ci-automation-github-actions",level:2},{value:"5) Supported operations and examples",id:"5-supported-operations-and-examples",level:2},{value:"6) Security guidance",id:"6-security-guidance",level:2},{value:"7) Troubleshooting",id:"7-troubleshooting",level:2},{value:"8) Internal service mapping",id:"8-internal-service-mapping",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"secrets-management-devops-guide-docker-kubernetes-github",children:"Secrets Management DevOps Guide (Docker, Kubernetes, GitHub)"}),"\n",(0,i.jsx)(n.p,{children:"This guide explains how to run and consume the CRUDService secrets engine across Docker and Kubernetes, and how to automate secret reads/rotations from CI (GitHub Actions). It is derived from the production code paths and supported providers."}),"\n",(0,i.jsx)(n.h3,{id:"what-this-implements",children:"What this implements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Providers: ",(0,i.jsx)(n.code,{children:"yaml"})," (dev-only), ",(0,i.jsx)(n.code,{children:"openbao+kv2"}),", ",(0,i.jsx)(n.code,{children:"hashicorp+kv2"})," via hvac"]}),"\n",(0,i.jsxs)(n.li,{children:["Canonical URIs: ",(0,i.jsx)(n.code,{children:"<provider>[+engine]://<mount>/<path>#<fragment>?<params>"})]}),"\n",(0,i.jsx)(n.li,{children:"Endpoints: CRUD, rotate, versions/metadata, bulk, copy/move, SSE events"}),"\n",(0,i.jsx)(n.li,{children:"PEP: VaultService enforces PDP decisions, audience/scope, sender-binding, anti-replay"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Key implementation references:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Rotation endpoint and PDP/scope enforcement","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"CRUDService/src/api/secrets_routes.py"})," \u2192 POST ",(0,i.jsx)(n.code,{children:"/api/secrets/rotate"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Rotation controller (KVv2): write new version + best-effort old/new lookup + Kafka audit","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"CRUDService/src/services/rotation_controller.py"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Provider strategies: OpenBao/HashiCorp KVv2 via hvac","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"CRUDService/src/vault_strategies/openbao_vault_strategy.py"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Canonical URI parser and tenant mount guard","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"CRUDService/src/secret_uri.py"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["System mapping to APIs (internal service-to-service use)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/systems/secrets.yaml"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"1-configuration-model",children:"1) Configuration model"}),"\n",(0,i.jsx)(n.h3,{id:"global-env-pep-policy-audits",children:"Global env (PEP, policy, audits)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TENANT_ID"})," (default: ",(0,i.jsx)(n.code,{children:"dev"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"})," (CSV, e.g. ",(0,i.jsx)(n.code,{children:"secret,kv"}),") \u2013 tenant mount guard"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SECRETS_AUDIENCE"})," (default: ",(0,i.jsx)(n.code,{children:"crud.secrets"}),") \u2013 expected audience when ",(0,i.jsx)(n.code,{children:"aud"})," present"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SECRETS_API_REQUIRE_AUTH"})," (default: ",(0,i.jsx)(n.code,{children:"false"}),") \u2013 require session/bearer on ",(0,i.jsx)(n.code,{children:"/api/secrets/*"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SECRETS_ENFORCE_SCOPES"})," (default: ",(0,i.jsx)(n.code,{children:"false"}),") \u2013 enforce per-endpoint scopes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TENANT_SALT"})," or ",(0,i.jsx)(n.code,{children:"SECRET_TENANT_SALT"})," \u2013 HMAC salt to compute non\u2011leaky ",(0,i.jsx)(n.code,{children:"resource_ref"})," in audits"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ENVIRONMENT"})," \u2013 non\u2011dev disables YAML writes/deletes"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Optional fallback toggles (not recommended for prod):"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"VAULT_ENABLE_FALLBACK"}),", ",(0,i.jsx)(n.code,{children:"VAULT_FALLBACK_ORDER"})," \u2013 provider fallback when a secret/path is missing"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"provider-configuration-vault-compatible",children:"Provider configuration (Vault-compatible)"}),"\n",(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.code,{children:"openbao"})," or ",(0,i.jsx)(n.code,{children:"hashicorp"})," (KVv2):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Required keys (env): ",(0,i.jsx)(n.code,{children:"OPENBAO_URL"}),"/",(0,i.jsx)(n.code,{children:"HASHICORP_URL"})," (or ",(0,i.jsx)(n.code,{children:"VAULT_URL"}),"), and either ",(0,i.jsx)(n.code,{children:"OPENBAO_TOKEN"}),"/",(0,i.jsx)(n.code,{children:"HASHICORP_TOKEN"})," (or ",(0,i.jsx)(n.code,{children:"VAULT_TOKEN"}),") or AppRole with ",(0,i.jsx)(n.code,{children:"OPENBAO_ROLE_ID"})," + ",(0,i.jsx)(n.code,{children:"OPENBAO_SECRET_ID"})," (analogous for HashiCorp)"]}),"\n",(0,i.jsxs)(n.li,{children:["Optional: ",(0,i.jsx)(n.code,{children:"VAULT_TIMEOUT"}),", ",(0,i.jsx)(n.code,{children:"VAULT_VERIFY_SSL"})," (",(0,i.jsx)(n.code,{children:"true"}),"/",(0,i.jsx)(n.code,{children:"false"}),"), ",(0,i.jsx)(n.code,{children:"VAULT_POOL_SIZE"}),", ",(0,i.jsx)(n.code,{children:"VAULT_TOKEN_RENEWAL_THRESHOLD"}),", ",(0,i.jsx)(n.code,{children:"VAULT_MAX_CONCURRENT_OPERATIONS"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Dev YAML provider:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"YAML_VAULT_PATH"})," \u2013 path to dev secrets YAML (e.g., ",(0,i.jsx)(n.code,{children:"/app/config/data/dev_secrets.yaml"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2-docker-compose",children:"2) Docker Compose"}),"\n",(0,i.jsx)(n.h3,{id:"dev-yaml-provider",children:"Dev (YAML provider)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crudservice:\r\n    image: your-registry/crudservice:latest\r\n    environment:\r\n      ENVIRONMENT: dev\r\n      YAML_VAULT_PATH: /app/config/data/dev_secrets.yaml\r\n      TENANT_ID: dev\r\n      TENANT_ALLOWED_MOUNTS: secret\r\n      SECRETS_API_REQUIRE_AUTH: "false"\r\n      SECRETS_ENFORCE_SCOPES: "false"\r\n      # Optional auditing salt\r\n      # TENANT_SALT: "..."\r\n    volumes:\r\n      - ../ServiceConfigs/CRUDService/config/data/dev_secrets.yaml:/app/config/data/dev_secrets.yaml:ro\r\n    ports:\r\n      - "9100:9100"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Populate YAML quickly from local ",(0,i.jsx)(n.code,{children:".env"})," files using the bootstrap script (dev only):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"python scripts/yaml_dev_bootstrap.py --manifest scripts/bootstrap_manifest.yaml --out ..\\ServiceConfigs\\CRUDService\\config\\data\\dev_secrets.yaml --mount secret --clear\n"})}),"\n",(0,i.jsx)(n.h3,{id:"prod-openbao-kvv2",children:"Prod (OpenBao KVv2)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crudservice:\r\n    image: your-registry/crudservice:latest\r\n    environment:\r\n      ENVIRONMENT: prod\r\n      TENANT_ID: acme\r\n      TENANT_ALLOWED_MOUNTS: secret\r\n      SECRETS_API_REQUIRE_AUTH: "true"\r\n      SECRETS_ENFORCE_SCOPES: "true"\r\n      SECRETS_AUDIENCE: crud.secrets\r\n      TENANT_SALT: ${TENANT_SALT}\r\n      # Vault-compatible provider (OpenBao shown)\r\n      OPENBAO_URL: https://openbao.acme.local\r\n      OPENBAO_TOKEN: ${OPENBAO_TOKEN} # or use AppRole below\r\n      # OPENBAO_ROLE_ID: ${OPENBAO_ROLE_ID}\r\n      # OPENBAO_SECRET_ID: ${OPENBAO_SECRET_ID}\r\n      VAULT_TIMEOUT: 30\r\n      VAULT_VERIFY_SSL: "true"\r\n      VAULT_POOL_SIZE: 10\r\n      VAULT_TOKEN_RENEWAL_THRESHOLD: 600\r\n      VAULT_MAX_CONCURRENT_OPERATIONS: 50\r\n    ports:\r\n      - "9100:9100"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Notes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The service reads secrets provider credentials from environment variables (no ",(0,i.jsx)(n.code,{children:"_FILE"})," convention). Inject them through your secret management for Compose deployments."]}),"\n",(0,i.jsxs)(n.li,{children:["For HashiCorp Vault, replace ",(0,i.jsx)(n.code,{children:"OPENBAO_*"})," with ",(0,i.jsx)(n.code,{children:"HASHICORP_*"})," (same keys) or use ",(0,i.jsx)(n.code,{children:"VAULT_*"})," fallbacks where applicable."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3-kubernetes",children:"3) Kubernetes"}),"\n",(0,i.jsxs)(n.p,{children:["Use a ",(0,i.jsx)(n.code,{children:"Secret"})," for tokens/AppRole, and a ",(0,i.jsx)(n.code,{children:"ConfigMap"})," (or inline env) for non\u2011sensitive settings."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  name: crud-secrets-provider\r\ntype: Opaque\r\nstringData:\r\n  OPENBAO_TOKEN: "${OPENBAO_TOKEN}"\r\n  # Or AppRole:\r\n  # OPENBAO_ROLE_ID: "..."\r\n  # OPENBAO_SECRET_ID: "..."\r\n---\r\napiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: crud-config\r\ndata:\r\n  ENVIRONMENT: "prod"\r\n  TENANT_ID: "acme"\r\n  TENANT_ALLOWED_MOUNTS: "secret"\r\n  SECRETS_API_REQUIRE_AUTH: "true"\r\n  SECRETS_ENFORCE_SCOPES: "true"\r\n  SECRETS_AUDIENCE: "crud.secrets"\r\n  VAULT_VERIFY_SSL: "true"\r\n---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: crudservice\r\nspec:\r\n  replicas: 2\r\n  selector:\r\n    matchLabels:\r\n      app: crudservice\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: crudservice\r\n    spec:\r\n      containers:\r\n        - name: crudservice\r\n          image: your-registry/crudservice:latest\r\n          ports:\r\n            - containerPort: 9100\r\n          env:\r\n            - name: ENVIRONMENT\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: ENVIRONMENT } }\r\n            - name: TENANT_ID\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: TENANT_ID } }\r\n            - name: TENANT_ALLOWED_MOUNTS\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: TENANT_ALLOWED_MOUNTS } }\r\n            - name: SECRETS_API_REQUIRE_AUTH\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: SECRETS_API_REQUIRE_AUTH } }\r\n            - name: SECRETS_ENFORCE_SCOPES\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: SECRETS_ENFORCE_SCOPES } }\r\n            - name: SECRETS_AUDIENCE\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: SECRETS_AUDIENCE } }\r\n            - name: OPENBAO_URL\r\n              value: "https://openbao.acme.local"\r\n            - name: OPENBAO_TOKEN\r\n              valueFrom: { secretKeyRef: { name: crud-secrets-provider, key: OPENBAO_TOKEN } }\r\n            # Or AppRole:\r\n            # - name: OPENBAO_ROLE_ID\r\n            #   valueFrom: { secretKeyRef: { name: crud-secrets-provider, key: OPENBAO_ROLE_ID } }\r\n            # - name: OPENBAO_SECRET_ID\r\n            #   valueFrom: { secretKeyRef: { name: crud-secrets-provider, key: OPENBAO_SECRET_ID } }\r\n            - name: VAULT_TIMEOUT\r\n              value: "30"\r\n            - name: VAULT_VERIFY_SSL\r\n              valueFrom: { configMapKeyRef: { name: crud-config, key: VAULT_VERIFY_SSL } }\r\n            - name: VAULT_POOL_SIZE\r\n              value: "10"\r\n            - name: VAULT_TOKEN_RENEWAL_THRESHOLD\r\n              value: "600"\r\n            - name: VAULT_MAX_CONCURRENT_OPERATIONS\r\n              value: "50"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Dev on Kubernetes with YAML provider (not recommended beyond local clusters): mount a ",(0,i.jsx)(n.code,{children:"ConfigMap"})," with ",(0,i.jsx)(n.code,{children:"dev_secrets.yaml"})," and set ",(0,i.jsx)(n.code,{children:"YAML_VAULT_PATH"})," accordingly."]}),"\n",(0,i.jsx)(n.h2,{id:"4-ci-automation-github-actions",children:"4) CI automation (GitHub Actions)"}),"\n",(0,i.jsxs)(n.p,{children:["The API supports reads and rotations with PDP/scope enforcement. When ",(0,i.jsx)(n.code,{children:"SECRETS_API_REQUIRE_AUTH=true"})," and ",(0,i.jsx)(n.code,{children:"SECRETS_ENFORCE_SCOPES=true"}),", the access token must carry:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Audience: ",(0,i.jsx)(n.code,{children:"crud.secrets"})," (or your ",(0,i.jsx)(n.code,{children:"SECRETS_AUDIENCE"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Scopes: e.g., ",(0,i.jsx)(n.code,{children:"secrets.read"}),", ",(0,i.jsx)(n.code,{children:"secrets.rotate"}),", etc."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example: rotate a KVv2 secret fragment via GitHub Actions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'name: Rotate secret\r\non:\r\n  workflow_dispatch:\r\njobs:\r\n  rotate:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - name: Call CRUDService rotate (OpenBao KVv2)\r\n        env:\r\n          API_BASE: ${{ secrets.CRUD_BASE_URL }} # e.g., https://crud.yourdomain\r\n          TOKEN: ${{ secrets.CRUD_BEARER_TOKEN }} # must include audience/scope\r\n        run: |\r\n          uri="openbao+kv2://secret/app/api#token"\r\n          body=$(jq -nc --arg u "$uri" --argjson v \'{"token":"new-value"}\' \'{uri:$u, value:$v}\')\r\n          curl -sS -X POST "$API_BASE/api/secrets/rotate" \\\r\n            -H "Authorization: Bearer $TOKEN" \\\r\n            -H "Content-Type: application/json" \\\r\n            --data "$body"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Read a pinned version:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'      - name: Read versioned value\r\n        env:\r\n          API_BASE: ${{ secrets.CRUD_BASE_URL }}\r\n          TOKEN: ${{ secrets.CRUD_BEARER_TOKEN }}\r\n        run: |\r\n          uri="openbao+kv2://secret/app/api#token&version=12"\r\n          curl -sS "$API_BASE/api/secrets/value?uri=$uri" -H "Authorization: Bearer $TOKEN"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Bulk operations (set/delete/undelete/destroy/rotate) are available via POST ",(0,i.jsx)(n.code,{children:"/api/secrets/bulk"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"5-supported-operations-and-examples",children:"5) Supported operations and examples"}),"\n",(0,i.jsx)(n.p,{children:"All operations use Canonical URIs. For KVv2, fragments represent individual keys within the secret object; without a fragment, payloads must be JSON objects."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Read (provider-backed):"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl "$CRUD/api/secrets/value?uri=openbao+kv2://secret/app/api#token" -H "Authorization: Bearer $TOKEN"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rotate (YAML dev behaves like update):"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "$CRUD/api/secrets/rotate" -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" -d \'{\r\n  "uri": "openbao+kv2://secret/app/api#token",\r\n  "value": {"token":"s3cr3t-new"}\r\n}\'\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Versions metadata:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl "$CRUD/api/secrets/versions?uri=openbao+kv2://secret/app/api" -H "Authorization: Bearer $TOKEN"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Undelete versions:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "$CRUD/api/secrets/undelete" -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" -d \'{\r\n  "uri": "openbao+kv2://secret/app/api",\r\n  "versions": [3,4]\r\n}\'\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Destroy versions:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST "$CRUD/api/secrets/destroy-versions" -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" -d \'{\r\n  "uri": "openbao+kv2://secret/app/api",\r\n  "versions": [1,2]\r\n}\'\n'})}),"\n",(0,i.jsx)(n.h2,{id:"6-security-guidance",children:"6) Security guidance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Enable ",(0,i.jsx)(n.code,{children:"SECRETS_API_REQUIRE_AUTH"})," and ",(0,i.jsx)(n.code,{children:"SECRETS_ENFORCE_SCOPES"})," in production"]}),"\n",(0,i.jsx)(n.li,{children:"Prefer AppRole (role_id/secret_id) over static tokens for Vault"}),"\n",(0,i.jsxs)(n.li,{children:["Keep ",(0,i.jsx)(n.code,{children:"VAULT_VERIFY_SSL=true"}),"; only disable for controlled dev clusters"]}),"\n",(0,i.jsxs)(n.li,{children:["Restrict ",(0,i.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"})," to the precise set used per tenant"]}),"\n",(0,i.jsxs)(n.li,{children:["Set ",(0,i.jsx)(n.code,{children:"TENANT_SALT"})," to enable non\u2011leaky audit references in Kafka and SSE"]}),"\n",(0,i.jsxs)(n.li,{children:["YAML provider is dev\u2011only; it is automatically blocked for writes/deletes when ",(0,i.jsx)(n.code,{children:"ENVIRONMENT"})," is not dev/test"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"7-troubleshooting",children:"7) Troubleshooting"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"403 on rotate/read: missing scope or PDP denial; ensure token scopes and PDP rules allow the operation"}),"\n",(0,i.jsxs)(n.li,{children:["400 ",(0,i.jsx)(n.code,{children:"UNSUPPORTED_ENGINE"}),": canonical URI engine not supported (KVv2 required for Vault providers)"]}),"\n",(0,i.jsxs)(n.li,{children:["400 ",(0,i.jsx)(n.code,{children:"TENANT_MOUNT_MISMATCH"}),": mount not in ",(0,i.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"})]}),"\n",(0,i.jsx)(n.li,{children:"404 on fragment: path exists but key is absent \u2013 check fragment vs object payload"}),"\n",(0,i.jsx)(n.li,{children:"Token renewal failures: check provider token/AppRole and network access; hvac renewal is automatic before reads/writes"}),"\n",(0,i.jsxs)(n.li,{children:["Version errors on pinned reads: deleted/destroyed versions raise explicit errors; omit ",(0,i.jsx)(n.code,{children:"version"})," to read latest"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"8-internal-service-mapping",children:"8) Internal service mapping"}),"\n",(0,i.jsxs)(n.p,{children:["Internal components can call the secrets API using the system mapping at ",(0,i.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/systems/secrets.yaml"})," (inject ",(0,i.jsx)(n.code,{children:"INTERNAL_EXECUTION_TOKEN"}),"). This mapping exposes ",(0,i.jsx)(n.code,{children:"value"}),", ",(0,i.jsx)(n.code,{children:"create_or_update"}),", ",(0,i.jsx)(n.code,{children:"delete"}),", ",(0,i.jsx)(n.code,{children:"destroy"}),", ",(0,i.jsx)(n.code,{children:"rotate"}),", ",(0,i.jsx)(n.code,{children:"bulk"}),", ",(0,i.jsx)(n.code,{children:"copy"}),", ",(0,i.jsx)(n.code,{children:"move"}),", and metadata operations that forward to the HTTP endpoints."]})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);
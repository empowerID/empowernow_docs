"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7339],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var s=i(96540);const r={},c=s.createContext(r);function d(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(c.Provider,{value:n},e.children)}},62912:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"services/nowconnect/explanation/ha-v2-architecture","title":"NowConnect V2 High Availability (HA) \u2013 Architecture and operations","description":"V2 HA design for NowConnect Cloud/Premise: modes, config, wiring, control/data planes, health/readiness, metrics, failure modes, and test/runbook guidance.","source":"@site/docs/services/nowconnect/explanation/ha-v2-architecture.md","sourceDirName":"services/nowconnect/explanation","slug":"/services/nowconnect/explanation/ha-v2-architecture","permalink":"/empowernow_docs/docs/services/nowconnect/explanation/ha-v2-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/explanation/ha-v2-architecture.md","tags":[],"version":"current","frontMatter":{"id":"ha-v2-architecture","title":"NowConnect V2 High Availability (HA) \u2013 Architecture and operations","description":"V2 HA design for NowConnect Cloud/Premise: modes, config, wiring, control/data planes, health/readiness, metrics, failure modes, and test/runbook guidance.","sidebar_label":"HA V2 architecture & ops"},"sidebar":"tutorialSidebar","previous":{"title":"architecture","permalink":"/empowernow_docs/docs/services/nowconnect/explanation/architecture"},"next":{"title":"Metrics and reliability","permalink":"/empowernow_docs/docs/services/nowconnect/explanation/metrics-and-reliability"}}');var r=i(74848),c=i(28453);const d={id:"ha-v2-architecture",title:"NowConnect V2 High Availability (HA) \u2013 Architecture and operations",description:"V2 HA design for NowConnect Cloud/Premise: modes, config, wiring, control/data planes, health/readiness, metrics, failure modes, and test/runbook guidance.",sidebar_label:"HA V2 architecture & ops"},o=void 0,l={},t=[{value:"NowConnect High Availability",id:"nowconnect-high-availability",level:2},{value:"Trust boundaries and controls",id:"trust-boundaries-and-controls",level:3},{value:"Overview",id:"overview",level:2},{value:"High\u2011level architecture",id:"highlevel-architecture",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Readiness decision flow",id:"readiness-decision-flow",level:3},{value:"Cloud wiring",id:"cloud-wiring",level:2},{value:"Control plane \u2013 DistributedRegistry",id:"control-plane--distributedregistry",level:2},{value:"Ownership and epoch fencing",id:"ownership-and-epoch-fencing",level:3},{value:"Data plane \u2013 Mesh WS between hubs",id:"data-plane--mesh-ws-between-hubs",level:2},{value:"Mesh link state machine",id:"mesh-link-state-machine",level:3},{value:"Listener selection and forwarding",id:"listener-selection-and-forwarding",level:2},{value:"Endpoints and security",id:"endpoints-and-security",level:2},{value:"Metrics (Prometheus)",id:"metrics-prometheus",level:2},{value:"Failure modes (degrade behavior)",id:"failure-modes-degrade-behavior",level:2},{value:"Test matrix and QA guidance",id:"test-matrix-and-qa-guidance",level:2},{value:"DevOps notes (enablement &amp; rollout)",id:"devops-notes-enablement--rollout",level:2},{value:"SLOs, capacity, and dashboards",id:"slos-capacity-and-dashboards",level:2},{value:"Certificate rotation and secrets",id:"certificate-rotation-and-secrets",level:2},{value:"Validation and evidence",id:"validation-and-evidence",level:2},{value:"Code pointers",id:"code-pointers",level:2},{value:"Known gaps &amp; future work",id:"known-gaps--future-work",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"nowconnect-high-availability",children:"NowConnect High Availability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Security controls: Inbound mesh mTLS at ingress, outbound mesh mTLS support, JWT on agent tunnels, cert rotation runbook, masked logs, and platform secret storage guidance."}),"\n",(0,r.jsx)(n.li,{children:"Resilience: multi\u2011replica hubs with epoch\u2011fenced ownership, bounded queues, backpressure, and degrade behavior when Redis or mesh is impaired."}),"\n",(0,r.jsx)(n.li,{children:"Observability: readiness reflects HA state; mesh link and epoch safety metrics; golden dashboards and alerts provided below."}),"\n",(0,r.jsx)(n.li,{children:"Operability: feature\u2011flagged rollout (off \u2192 shadow \u2192 active), safe rollback, capacity tuning guidance, and perf validation runners."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"trust-boundaries-and-controls",children:"Trust boundaries and controls"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR\n  subgraph Edge Internet and Ingress\n    LB[Ingress or VIP]\n  end\n  subgraph Cloud Hubs\n    H1(Cloud Hub A)\n    H2(Cloud Hub B)\n  end\n  subgraph Control Plane\n    R[(Redis)]\n  end\n  subgraph Premise Network\n    P1(Premise Agent)\n  end\n\n  LB --\x3e|LDAP TCP| H1\n  LB --\x3e|LDAP TCP| H2\n  H1 <--\x3e|mTLS WS mesh| H2\n  H1 <--\x3e R\n  H2 <--\x3e R\n  P1 <--\x3e|JWT WS tunnel| H1\n  P1 <--\x3e|JWT WS tunnel| H2"}),"\n",(0,r.jsx)(n.p,{children:"Controls at a glance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Mesh (inbound): mTLS is enforced at ingress/proxy. When ",(0,r.jsx)(n.code,{children:"require_mtls=true"}),", the app expects TLS\u2011terminated traffic and can validate protocol headers in dev."]}),"\n",(0,r.jsx)(n.li,{children:"Mesh (outbound): the dialer supports mTLS via configured CA/cert/key; permessage\u2011deflate disabled; bounded send queues and inflight caps."}),"\n",(0,r.jsxs)(n.li,{children:["Tunnel: JWT ",(0,r.jsx)(n.code,{children:"aud=nowconnect"}),", connector scopes optional; short token TTL; TLS at ingress."]}),"\n",(0,r.jsx)(n.li,{children:"Secrets: store certs/keys via secure mounts or your platform secret manager; app does not integrate Vault directly."}),"\n",(0,r.jsx)(n.li,{children:"Logs: PII masked; security events emitted; retention follows platform policy."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Goals: multi\u2011replica Cloud hubs that can forward flows across replicas, with ownership fencing, backpressure bounds, and observability."}),"\n",(0,r.jsxs)(n.li,{children:["Modes (configurable):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"off"})," (default): single\u2011replica behavior; HA code paths not active"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadow"}),": HA plumbing enabled but traffic continues using local ownership (observe mesh/registry)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"active"}),": cross\u2011replica delivery via mesh"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"highlevel-architecture",children:"High\u2011level architecture"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph LR\n  subgraph Clients\n    C1["LDAP Client(s)"]\n  end\n\n  subgraph Cloud["NowConnect Cloud Hubs"]\n    H1(Hub A)\n    H2(Hub B)\n  end\n\n  subgraph Redis["Control Plane"]\n    R[(Redis)]\n  end\n\n  subgraph Premise["NowConnect Premise Agents"]\n    P1(Agent 1)\n    P2(Agent 2)\n  end\n\n  C1 --\x3e|LDAP| H1\n  C1 --\x3e|LDAP| H2\n  H1 <--\x3e|Mesh WS| H2\n  H1 <--\x3e R\n  H2 <--\x3e R\n  H1 <--\x3e P1\n  H2 <--\x3e P2'}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["File: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/NowConnect/config/cloud.yaml"})," (set ",(0,r.jsx)(n.code,{children:"NC_CONFIG=/app/config/cloud.yaml"}),")."]}),"\n",(0,r.jsx)(n.p,{children:"Minimal (single listener + HA shadow):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"listeners:\n  - { name: l1, bind: '0.0.0.0:389', connector: 'ldap' }\nha:\n  enabled: true\n  mode: shadow  # off|shadow|active\n  replica_id: hub-a\n  redis_url: redis://shared_redis:6379/0\n  mesh:\n    listen: 0.0.0.0:400        # optional server-side WS endpoint (ingress forwards to /mesh)\n    peers: [\"wss://cloud-b.ocg.labs.empowernow.ai/mesh\"]\n    require_mtls: true\n    tls:\n      ca_bundle: /app/certs/ca.pem\n      cert_file: /app/certs/hub-a.crt\n      key_file: /app/certs/hub-a.key\n    send_queue_depth: 1000\n    per_link_max_inflight_bytes: 8388608\n    connect_backoff_max_sec: 30\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Parsing: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/config_loader.py"})," \u2192 ",(0,r.jsx)(n.code,{children:"HAConfig"}),", ",(0,r.jsx)(n.code,{children:"HAMeshConfig"}),", ",(0,r.jsx)(n.code,{children:"HAMeshTLS"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"readiness-decision-flow",children:"Readiness decision flow"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\n  A[App start] --\x3e B{ha.enabled?}\n  B -- no --\x3e R1[ready]\n  B -- yes --\x3e C{mode==active?}\n  C -- no --\x3e R1\n  C -- yes --\x3e D{mesh healthy AND registry healthy?}\n  D -- yes --\x3e R1\n  D -- no --\x3e R2[degraded]"}),"\n",(0,r.jsx)(n.h2,{id:"cloud-wiring",children:"Cloud wiring"}),"\n",(0,r.jsxs)(n.p,{children:["File: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/app.py"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Loads config (",(0,r.jsx)(n.code,{children:"load_cloud_config"}),"); instantiates ",(0,r.jsx)(n.code,{children:"RouterRegistry"})]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"ha.enabled"}),", creates ",(0,r.jsx)(n.code,{children:"DistributedRegistry"})," (",(0,r.jsx)(n.code,{children:"redis_url"})," if present; in\u2011memory fallback)"]}),"\n",(0,r.jsxs)(n.li,{children:["Creates ",(0,r.jsx)(n.code,{children:"Hub"})," with ",(0,r.jsx)(n.code,{children:"replica_id"})," and ",(0,r.jsx)(n.code,{children:"ha_mode"})]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"ha.enabled"}),", creates ",(0,r.jsx)(n.code,{children:"MeshManager"})," with peers/TLS/backpressure settings; attaches to Hub and app state"]}),"\n",(0,r.jsxs)(n.li,{children:["Starts optional ",(0,r.jsx)(n.code,{children:"RegistrySweeper"})," when Redis is used"]}),"\n",(0,r.jsxs)(n.li,{children:["Exposes ",(0,r.jsx)(n.code,{children:"/mesh"})," (WS) and ",(0,r.jsx)(n.code,{children:"/tunnel"})," (agent WS), plus ",(0,r.jsx)(n.code,{children:"/readyz"})," and ",(0,r.jsx)(n.code,{children:"/healthz"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Readiness (",(0,r.jsx)(n.code,{children:"/readyz"}),"):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"ha.enabled && mode==active"}),": returns ",(0,r.jsx)(n.code,{children:'{ "status": "degraded" }'})," if mesh missing or distributed registry unhealthy; else ",(0,r.jsx)(n.code,{children:"ready"}),". Otherwise returns ",(0,r.jsx)(n.code,{children:"ready"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant App as FastAPI app\n  participant Cfg as load_cloud_config\n  participant Hub as Hub\n  participant Dist as DistributedRegistry\n  participant Mesh as MeshManager\n\n  App->>Cfg: load cloud.yaml\n  App->>Hub: new Hub(registry, replica_id, ha_mode)\n  alt HA enabled\n    App->>Dist: new DistributedRegistry(redis_url?)\n    App->>Mesh: new MeshManager(hub, dist, peers...)\n    App--\x3e>Hub: attach mesh reference\n  end\n  App--\x3e>App: expose /mesh, /tunnel, /readyz"}),"\n",(0,r.jsx)(n.h2,{id:"control-plane--distributedregistry",children:"Control plane \u2013 DistributedRegistry"}),"\n",(0,r.jsxs)(n.p,{children:["File: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/distributed_registry.py"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Redis\u2011backed registry (ownership and connector presence), in\u2011memory fallback when ",(0,r.jsx)(n.code,{children:"redis_url"})," absent."]}),"\n",(0,r.jsxs)(n.li,{children:["Owned by Cloud; Premise ownership is claimed during agent ",(0,r.jsx)(n.code,{children:"HELLO"})," (epoch\u2011based fencing)."]}),"\n",(0,r.jsxs)(n.li,{children:["Registry Sweeper (",(0,r.jsx)(n.code,{children:"registry_sweeper.py"}),") periodically prunes stale entries."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Key functions (intent): ",(0,r.jsx)(n.code,{children:"claim_ownership(agent_id, replica_id) -> epoch"}),", ",(0,r.jsx)(n.code,{children:"add_connectors(agent_id, connectors)"}),", ",(0,r.jsx)(n.code,{children:"list_agents(connector)"}),", ",(0,r.jsx)(n.code,{children:"get_owner(agent_id) -> (owner_replica_id, epoch)"}),", ",(0,r.jsx)(n.code,{children:"is_healthy()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"ownership-and-epoch-fencing",children:"Ownership and epoch fencing"}),"\n",(0,r.jsx)(n.mermaid,{value:'sequenceDiagram\n  participant Agent\n  participant Hub as "Cloud Hub"\n  participant Reg as "DistributedRegistry"\n\n  Agent->>Hub: HELLO(agent_id, connectors)\n  Hub->>Reg: claim_ownership(agent_id, replica_id)\n  Reg--\x3e>Hub: epoch=n\n  Hub->>Reg: add_connectors(agent_id, connectors)\n  Hub--\x3e>Agent: WELCOME(epoch=n)\n  Hub--\x3e>Agent: Frames validated against epoch and stale frames dropped'}),"\n",(0,r.jsx)(n.h2,{id:"data-plane--mesh-ws-between-hubs",children:"Data plane \u2013 Mesh WS between hubs"}),"\n",(0,r.jsxs)(n.p,{children:["File: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/mesh.py"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["One persistent WS link per peer (outbound dialer); accept inbound links via ",(0,r.jsx)(n.code,{children:"/mesh"})," handler"]}),"\n",(0,r.jsxs)(n.li,{children:["Backpressure: per\u2011link writer queue (",(0,r.jsx)(n.code,{children:"send_queue_depth"}),"), per\u2011link inflight bytes cap (",(0,r.jsx)(n.code,{children:"per_link_max_inflight_bytes"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Circuit breaker/backoff on failures (",(0,r.jsx)(n.code,{children:"connect_backoff_max_sec"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Dedup: per\u2011CID LRU ",(0,r.jsx)(n.code,{children:"last_seq"})," with cap; epoch fencing validates ",(0,r.jsx)(n.code,{children:"epoch"})," to reject stale frames"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Frames: ",(0,r.jsx)(n.code,{children:"M_OPEN/M_OPEN_ACK"}),", ",(0,r.jsx)(n.code,{children:"M_DATA"}),", ",(0,r.jsx)(n.code,{children:"M_FIN"}),", ",(0,r.jsx)(n.code,{children:"M_RST"})," carrying ",(0,r.jsx)(n.code,{children:"{cid, connector, agent_id, seq, epoch}"})]}),"\n",(0,r.jsx)(n.p,{children:"Cross\u2011replica flow (origin=Hub B, owner=Hub A):"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  participant Client\n  participant HubB as Cloud Hub B (origin)\n  participant HubA as Cloud Hub A (owner)\n  participant Agent as Premise Agent (owned by A)\n\n  Client->>HubB: LDAP connect/search\n  HubB->>HubA: M_OPEN(cid,connector,agent_id,epoch?)\n  HubA--\x3e>HubB: M_OPEN_ACK(ok=true)\n  HubA->>Agent: OPEN(cid, connector)\n  loop data\n    HubB->>HubA: M_DATA(cid, seq, b64, epoch)\n    HubA->>Agent: DATA(cid, seq, b64)\n    Agent--\x3e>HubA: DATA(cid, seq, b64)\n    HubA--\x3e>HubB: M_DATA(cid, seq, b64, epoch)\n    HubB--\x3e>Client: data\n  end\n  HubB->>HubA: M_FIN/M_RST\n  HubA->>Agent: FIN/RST"}),"\n",(0,r.jsx)(n.h3,{id:"mesh-link-state-machine",children:"Mesh link state machine"}),"\n",(0,r.jsx)(n.mermaid,{value:"stateDiagram-v2\n  [*] --\x3e Connecting\n  Connecting --\x3e Established: TLS OK\n  Connecting --\x3e Backoff: error\n  Backoff --\x3e Connecting: retry after backoff\n  Established --\x3e Backoff: link error\n  Established --\x3e Closed: shutdown\n  Backoff --\x3e Closed: disabled"}),"\n",(0,r.jsx)(n.h2,{id:"listener-selection-and-forwarding",children:"Listener selection and forwarding"}),"\n",(0,r.jsxs)(n.p,{children:["File: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/listeners.py"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If HA off or registry absent \u2192 local router"}),"\n",(0,r.jsx)(n.li,{children:"If HA shadow/active and distributed registry present: prefer a locally owned agent; otherwise use mesh and register an origin sink for return frames"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"endpoints-and-security",children:"Endpoints and security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/mesh"})," (WS): For hub\u2194hub; enforce mTLS when ",(0,r.jsx)(n.code,{children:"ha.mesh.require_mtls=true"})," (TLS often terminated at ingress)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/tunnel"})," (WS): For Premise agents; JWT with ",(0,r.jsx)(n.code,{children:"aud=nowconnect"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/healthz"}),": Always ",(0,r.jsx)(n.code,{children:"ok"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/readyz"}),": HA\u2011aware readiness (see above)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"metrics-prometheus",children:"Metrics (Prometheus)"}),"\n",(0,r.jsxs)(n.p,{children:["From ",(0,r.jsx)(n.code,{children:"mesh.py"})," and design:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_links{peer,state}"})," (MESH_LINKS)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_frames_total{dir,type}"})," (MESH_FRAMES_TOTAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_rtt_seconds_*"})," histogram (MESH_RTT_SECONDS)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_owner_epoch_mismatch_total"})," (OWNER_EPOCH_MISMATCH_TOTAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_cid_dedup_dropped_total"})," (CID_DEDUP_DROPPED_TOTAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_backpressure_drops_total{peer,reason}"})," (MESH_BACKPRESSURE_DROPS_TOTAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_link_reconnects_total"})," (MESH_LINK_RECONNECTS_TOTAL)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nowconnect_mesh_link_errors_total"})," (MESH_LINK_ERRORS_TOTAL)"]}),"\n",(0,r.jsx)(n.li,{children:"Gauges in writer loop: per\u2011link queue size and inflight bytes"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Alert ideas: Mesh P95 RTT > 20ms (5m); any queue overflow/backpressure drop > 0 (5m); epoch mismatches > 0 (5m); mesh link down > 60s. For cross\u2011replica share, base alerts on ingress/proxy connection metrics as the denominator."}),"\n",(0,r.jsx)(n.h2,{id:"failure-modes-degrade-behavior",children:"Failure modes (degrade behavior)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Redis down: serve local\u2011only; reject cross\u2011replica; ",(0,r.jsx)(n.code,{children:"/readyz"})," reports degraded"]}),"\n",(0,r.jsx)(n.li,{children:"Mesh down: only cross\u2011replica flows fail; local ownership unaffected"}),"\n",(0,r.jsx)(n.li,{children:"Owner crash: existing flows drop; agent reconnects; new flows can be owned by surviving hub"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"test-matrix-and-qa-guidance",children:"Test matrix and QA guidance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single\u2011replica regression (HA disabled) \u2013 ensure no side effects"}),"\n",(0,r.jsx)(n.li,{children:"HA happy path (2 hubs + 1 agent): M_OPEN/ACK, bidirectional DATA, FIN/RST"}),"\n",(0,r.jsx)(n.li,{children:"Owner crash; mesh partition; epoch fence; dedup; degrade scenarios as described"}),"\n",(0,r.jsxs)(n.li,{children:["Perf: use ",(0,r.jsx)(n.code,{children:"CRUDService/tools/perf_nowconnect_ldap.py"}),"; assert p99 and error budget"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"devops-notes-enablement--rollout",children:"DevOps notes (enablement & rollout)"}),"\n",(0,r.jsx)(n.p,{children:"Enable HA (shadow \u2192 active):"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Deploy Redis; set ",(0,r.jsx)(n.code,{children:"ha.enabled=true"}),", ",(0,r.jsx)(n.code,{children:"mode=shadow"}),", ",(0,r.jsx)(n.code,{children:"replica_id"})," per hub; configure ",(0,r.jsx)(n.code,{children:"mesh.peers"})," and mTLS"]}),"\n",(0,r.jsxs)(n.li,{children:["Validate ",(0,r.jsx)(n.code,{children:"/readyz"})," and mesh link metrics"]}),"\n",(0,r.jsxs)(n.li,{children:["Switch to ",(0,r.jsx)(n.code,{children:"mode=active"})," per hub"]}),"\n",(0,r.jsx)(n.li,{children:"Add LB/VIP for client traffic; scale hubs"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Certificates: configure ",(0,r.jsx)(n.code,{children:"ha.mesh.tls"})," with CA and per\u2011hub cert/key; enforce ",(0,r.jsx)(n.code,{children:"require_mtls=true"})," in production."]}),"\n",(0,r.jsx)(n.p,{children:"Scaling: add replicas and peers; ensure queue and inflight caps fit workload."}),"\n",(0,r.jsxs)(n.p,{children:["Runbooks: link down (check metrics/TLS); Redis degraded (local\u2011only mode, ",(0,r.jsx)(n.code,{children:"/readyz"})," degraded)."]}),"\n",(0,r.jsx)(n.h2,{id:"slos-capacity-and-dashboards",children:"SLOs, capacity, and dashboards"}),"\n",(0,r.jsx)(n.p,{children:"SLOs (starting points)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Availability: 99.9% per month for Cloud hubs"}),"\n",(0,r.jsx)(n.li,{children:"Mesh RTT p95: \u2264 20 ms"}),"\n",(0,r.jsx)(n.li,{children:"Cross\u2011replica share: \u2264 40% sustained (investigate if higher)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Capacity tuning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Per\u2011link send_queue_depth: 500\u20132000 depending on RTT and throughput"}),"\n",(0,r.jsx)(n.li,{children:"per_link_max_inflight_bytes: 4\u201316 MiB"}),"\n",(0,r.jsx)(n.li,{children:"Redis: size for agent count and connector updates (use eviction disabled; monitor memory)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Golden dashboards (Grafana)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mesh health: links by state; RTT p50/p95; frames and bytes by dir"}),"\n",(0,r.jsx)(n.li,{children:"Safety: owner epoch mismatches; dedup drops; backpressure counters"}),"\n",(0,r.jsx)(n.li,{children:"Throughput: TCP connections and bytes (from existing metrics)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Alerts (Prometheus rules examples)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- alert: NowConnectMeshHighRTT\n  expr: histogram_quantile(0.95, rate(nowconnect_mesh_rtt_seconds_bucket[5m])) > 0.02\n  for: 5m\n  labels: { severity: warning }\n  annotations: { summary: "Mesh RTT p95 high" }\n\n# Cross\u2011replica share requires a denominator from ingress/proxy metrics; example intentionally omitted\n'})}),"\n",(0,r.jsx)(n.h2,{id:"certificate-rotation-and-secrets",children:"Certificate rotation and secrets"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store mesh CA/cert/key via secure mounts or your platform secret manager; restrict read permissions"}),"\n",(0,r.jsx)(n.li,{children:"Rotate certificates per policy; restart the hub processes or containers to pick up new files (hot reload is not supported)"}),"\n",(0,r.jsx)(n.li,{children:"JWT for agent tunnels issued by your IdP or configured signing service; rotate per your security policy; short token TTL recommended"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Additional guidance:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensure hub certificates include Subject Alternative Names (SANs) that match the hostnames used in ",(0,r.jsx)(n.code,{children:"ha.mesh.peers"}),". Modern TLS clients ignore CN; SANs are required."]}),"\n",(0,r.jsxs)(n.li,{children:["Add expiry monitoring and alerts for hub client/server certs:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Option A (network): Prometheus blackbox_exporter probing the ",(0,r.jsx)(n.code,{children:"/mesh"})," HTTPS endpoint with client certs; alert when ",(0,r.jsx)(n.code,{children:"(probe_ssl_earliest_cert_expiry - time()) < 30*24*3600"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Option B (file): x509 exporter scraping cert files on disk; alert on days-to-expiry threshold."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Add TLS error/reconnect alerts to catch cert or trust issues:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- alert: NowConnectMeshCertExpirySoon\n  expr: (probe_ssl_earliest_cert_expiry - time()) < 30*24*3600\n  for: 10m\n  labels: { severity: warning }\n  annotations: { summary: "Mesh cert expires within 30 days" }\n\n- alert: NowConnectMeshTLSIssues\n  expr: rate(nowconnect_mesh_link_errors_total[5m]) > 0 or rate(nowconnect_mesh_link_reconnects_total[5m]) > 3\n  for: 10m\n  labels: { severity: warning }\n  annotations: { summary: "Mesh TLS errors or frequent reconnects" }\n'})}),"\n",(0,r.jsx)(n.h2,{id:"validation-and-evidence",children:"Validation and evidence"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Runner: ",(0,r.jsx)(n.code,{children:"CRUDService/tools/perf_nowconnect_ldap.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Guide: ",(0,r.jsx)(n.code,{children:"CRUDService/tools/perf_nowconnect_ldap_guide.md"})]}),"\n",(0,r.jsxs)(n.li,{children:["Sample report: ",(0,r.jsx)(n.code,{children:"CRUDService/tools/perf_nowconnect_report.md"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"code-pointers",children:"Code pointers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Config parsing: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/config_loader.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["App wiring/endpoints: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/app.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Mesh manager: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/mesh.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Listener selection: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/listeners.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Distributed registry: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/distributed_registry.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Registry sweeper: ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/registry_sweeper.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Hub (frame routing): ",(0,r.jsx)(n.code,{children:"nowconnect_cloud/hub.py"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"known-gaps--future-work",children:"Known gaps & future work"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Shadow mode coverage/metrics; peer discovery; multi\u2011tenant selection; extended soak/chaos in CI/CD"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
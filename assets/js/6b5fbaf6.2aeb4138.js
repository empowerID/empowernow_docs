"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4645],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>d});var i=r(96540);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}},87613:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"services/identity-fabric/azure-relay-bridge","title":"Azure Relay Bridge (azbridge) \u2013 Hybrid Connectivity","description":"How to use Azure Relay Bridge (azbridge) to securely connect cloud/container services to on\u2011premises LDAP/Active Directory and other services without opening inbound firewall ports.","source":"@site/docs/services/identity-fabric/azure-relay-bridge.md","sourceDirName":"services/identity-fabric","slug":"/services/identity-fabric/azure-relay-bridge","permalink":"/empowernow_docs/docs/services/identity-fabric/azure-relay-bridge","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/identity-fabric/azure-relay-bridge.md","tags":[],"version":"current","frontMatter":{"id":"azure-relay-bridge","title":"Azure Relay Bridge (azbridge) \u2013 Hybrid Connectivity","description":"How to use Azure Relay Bridge (azbridge) to securely connect cloud/container services to on\u2011premises LDAP/Active Directory and other services without opening inbound firewall ports."}}');var s=r(74848),o=r(28453);const c={id:"azure-relay-bridge",title:"Azure Relay Bridge (azbridge) \u2013 Hybrid Connectivity",description:"How to use Azure Relay Bridge (azbridge) to securely connect cloud/container services to on\u2011premises LDAP/Active Directory and other services without opening inbound firewall ports."},d=void 0,a={},t=[{value:"Overview",id:"overview",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Step-by-step flow",id:"step-by-step-flow",level:2},{value:"Example consumption",id:"example-consumption",level:2},{value:"Connection URIs",id:"connection-uris",level:3},{value:"Quick connectivity checks",id:"quick-connectivity-checks",level:3},{value:"Docker Compose example",id:"docker-compose-example",level:3},{value:"Image and flags used in EmpowerNow compose",id:"image-and-flags-used-in-empowernow-compose",level:3},{value:"Security notes",id:"security-notes",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Related",id:"related",level:2},{value:"References",id:"references",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The Azure Relay Bridge (",(0,s.jsx)(n.code,{children:"azbridge"}),") enables secure, seamless connectivity between containerized/cloud services and on\u2011premises resources (such as Active Directory Domain Controllers) without opening inbound firewall ports. In this setup, multiple ",(0,s.jsx)(n.code,{children:"azbridge"})," containers can be used to connect to different on\u2011premises endpoints:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"addomain"}),": Bridges to ",(0,s.jsx)(n.code,{children:"addomain.com"})," (LDAP on port 389)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"devdomain1"}),": Bridges to ",(0,s.jsx)(n.code,{children:"devdomain1.com"})," (LDAPS on port 636)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"sapldapvds"}),": Bridges to SAP LDAP service (LDAP on port 400)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Any service on the same Docker network (for example, ",(0,s.jsx)(n.code,{children:"crud-service"}),") can connect to these bridges as if the targets were local. Traffic is securely relayed via Azure Relay."]}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Azure Relay Bridge containers connect outbound to Azure Relay using connection strings."}),"\n",(0,s.jsxs)(n.li,{children:["Each bridge exposes a local port (via ",(0,s.jsx)(n.code,{children:"-L"}),") inside the Docker network and forwards to the remote on\u2011premises host/port through Azure Relay."]}),"\n",(0,s.jsx)(n.li,{children:"Other containers resolve the bridge container names via Docker DNS and connect as if the service were local."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\r\n    subgraph Docker Network\r\n        CRUD[crud-service]\r\n        ADDOMAIN[addomain (azbridge)]\r\n        DEVDOMAIN[devdomain1 (azbridge)]\r\n        SAPLDAP[sapldapvds (azbridge)]\r\n    end\r\n    subgraph Azure Relay\r\n        RELAY1[Azure Relay - addomain.com]\r\n        RELAY2[Azure Relay - devdomain1.com]\r\n        RELAY3[Azure Relay - sapldapvds]\r\n    end\r\n    subgraph On-Premises\r\n        DC1[addomain.com (DC)]\r\n        DC2[devdomain1.com (DC)]\r\n        SAP[SAP LDAP Service]\r\n    end\r\n\r\n    CRUD -- LDAP (389) --\x3e ADDOMAIN\r\n    CRUD -- LDAPS (636) --\x3e DEVDOMAIN\r\n    CRUD -- LDAP (400) --\x3e SAPLDAP\r\n    ADDOMAIN -- Azure Relay ConnStr --\x3e RELAY1\r\n    DEVDOMAIN -- Azure Relay ConnStr --\x3e RELAY2\r\n    SAPLDAP -- Azure Relay ConnStr --\x3e RELAY3\r\n    RELAY1 -- Secure Tunnel --\x3e DC1\r\n    RELAY2 -- Secure Tunnel --\x3e DC2\r\n    RELAY3 -- Secure Tunnel --\x3e SAP"}),"\n",(0,s.jsx)(n.h2,{id:"step-by-step-flow",children:"Step-by-step flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Startup: Each ",(0,s.jsx)(n.code,{children:"azbridge"})," container establishes a secure outbound connection to Azure Relay using its connection string."]}),"\n",(0,s.jsxs)(n.li,{children:["Port forwarding: ",(0,s.jsx)(n.code,{children:"-L"})," exposes a local port (e.g., ",(0,s.jsx)(n.code,{children:"389"}),", ",(0,s.jsx)(n.code,{children:"636"}),", ",(0,s.jsx)(n.code,{children:"400"}),") inside the Docker network."]}),"\n",(0,s.jsxs)(n.li,{children:["Service discovery: Peers resolve ",(0,s.jsx)(n.code,{children:"addomain"}),", ",(0,s.jsx)(n.code,{children:"devdomain1"}),", and ",(0,s.jsx)(n.code,{children:"sapldapvds"})," via Docker DNS."]}),"\n",(0,s.jsx)(n.li,{children:"Requests: Clients send LDAP/LDAPS to the bridge endpoints."}),"\n",(0,s.jsxs)(n.li,{children:["Relay forwarding: ",(0,s.jsx)(n.code,{children:"azbridge"})," forwards through Azure Relay to the on\u2011prem target."]}),"\n",(0,s.jsx)(n.li,{children:"Response: The on\u2011prem service responds through the same path back to the client."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-consumption",children:"Example consumption"}),"\n",(0,s.jsx)(n.h3,{id:"connection-uris",children:"Connection URIs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To connect to ",(0,s.jsx)(n.code,{children:"addomain.com"})," (LDAP): ",(0,s.jsx)(n.code,{children:"ldap://addomain:389"})]}),"\n",(0,s.jsxs)(n.li,{children:["To connect to ",(0,s.jsx)(n.code,{children:"devdomain1.com"})," (LDAPS): ",(0,s.jsx)(n.code,{children:"ldaps://devdomain1:636"})]}),"\n",(0,s.jsxs)(n.li,{children:["To connect to SAP LDAP service: ",(0,s.jsx)(n.code,{children:"ldap://sapldapvds:400"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quick-connectivity-checks",children:"Quick connectivity checks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# LDAP (addomain)\r\nldapsearch -x -H ldap://addomain:389 -s base -b "" "(objectclass=*)"\r\n\r\n# LDAPS (devdomain1)\r\nldapsearch -x -H ldaps://devdomain1:636 -s base -b "" "(objectclass=*)"\r\n\r\n# SAP LDAP\r\nldapsearch -x -H ldap://sapldapvds:400 -s base -b "" "(objectclass=*)"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose-example",children:"Docker Compose example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  addomain:\r\n    image: azure-relay-bridge\r\n    command: ["-L", "0.0.0.0:389:addomain.com:389", "-c", "${ADDOMAIN_CONNECTION_STRING}"]\r\n    environment:\r\n      - ADDOMAIN_CONNECTION_STRING=${ADDOMAIN_CONNECTION_STRING}\r\n    networks:\r\n      - crud-network\r\n\r\n  devdomain1:\r\n    image: azure-relay-bridge\r\n    command: ["-L", "0.0.0.0:636:devdomain1.com:636", "-c", "${DEVDOMAIN1_CONNECTION_STRING}"]\r\n    environment:\r\n      - DEVDOMAIN1_CONNECTION_STRING=${DEVDOMAIN1_CONNECTION_STRING}\r\n    networks:\r\n      - crud-network\r\n\r\n  sapldapvds:\r\n    image: azure-relay-bridge\r\n    command: ["-L", "0.0.0.0:400:sapldapvds:400", "-c", "${SAPLDAP_CONNECTION_STRING}"]\r\n    environment:\r\n      - SAPLDAP_CONNECTION_STRING=${SAPLDAP_CONNECTION_STRING}\r\n    networks:\r\n      - crud-network\r\n\r\nnetworks:\r\n  crud-network:\r\n    driver: bridge\n'})}),"\n",(0,s.jsx)(n.h3,{id:"image-and-flags-used-in-empowernow-compose",children:"Image and flags used in EmpowerNow compose"}),"\n",(0,s.jsxs)(n.p,{children:["If you are using the EmpowerNow image and compose in ",(0,s.jsx)(n.code,{children:"CRUDService/docker-compose-authzen4.yml"}),", the bridge services look like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'addomain:\r\n  image: eidrelease.azurecr.io/azure-relay-bridge:0.15.0\r\n  command:\r\n    - -L\r\n    - 0.0.0.0:389:addomain.com:389\r\n    - -x   # internal image flag for connection string\r\n    - "$AZBRIDGE_RELAY_ADDOMAIN_CONNSTR"\r\n  networks:\r\n    - app-network\r\n\r\ndevdomain1:\r\n  image: eidrelease.azurecr.io/azure-relay-bridge:0.15.0\r\n  command:\r\n    - -L\r\n    - 0.0.0.0:636:devdomain1.com:636\r\n    - -x\r\n    - "$AZBRIDGE_RELAY_DEVDOMAIN1_CONNSTR"\r\n  networks:\r\n    - app-network\r\n\r\nsapldapvds:\r\n  image: eidrelease.azurecr.io/azure-relay-bridge:0.15.0\r\n  command:\r\n    - -L\r\n    - 0.0.0.0:400:sapldapvds:400\r\n    - -x\r\n    - "$AZBRIDGE_RELAY_SAPLDAPVDS_CONNSTR"\r\n  networks:\r\n    - app-network\n'})}),"\n",(0,s.jsx)(n.p,{children:"Notes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Some upstream images use ",(0,s.jsx)(n.code,{children:"-c"})," for the connection string flag; the EmpowerNow image uses ",(0,s.jsx)(n.code,{children:"-x"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Always include the remote port explicitly (e.g., ",(0,s.jsx)(n.code,{children:"...:addomain.com:389"}),") for clarity across variants."]}),"\n",(0,s.jsxs)(n.li,{children:["Keep bridge containers on the same Docker network as consumers (for example, ",(0,s.jsx)(n.code,{children:"crud-service"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["See also the integrated stack example in ",(0,s.jsx)(n.code,{children:"CRUDService/docker-compose-authzen4.yml"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"security-notes",children:"Security notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No inbound firewall ports are required on the on\u2011premises network."}),"\n",(0,s.jsx)(n.li,{children:"All traffic is encrypted and authenticated via Azure Relay; prefer LDAPS (636) where applicable."}),"\n",(0,s.jsx)(n.li,{children:"Store connection strings in a secure secrets store and rotate regularly."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Connection refused: Ensure the ",(0,s.jsx)(n.code,{children:"azbridge"})," container is healthy and the connection string is valid."]}),"\n",(0,s.jsx)(n.li,{children:"Authentication failures: Verify Azure Relay namespace/authorization and the specific listener/relay configuration."}),"\n",(0,s.jsx)(n.li,{children:"Port conflicts: Confirm no other service binds the same ports within the Docker network."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related",children:"Related"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Identity Fabric overview: ",(0,s.jsx)(n.code,{children:"services/identity-fabric/index"})]}),"\n",(0,s.jsxs)(n.li,{children:["CRUD Service: ",(0,s.jsx)(n.code,{children:"services/crud-service/index"})]}),"\n",(0,s.jsxs)(n.li,{children:["BFF: ",(0,s.jsx)(n.code,{children:"services/bff/index"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Azure Relay documentation: ",(0,s.jsx)(n.code,{children:"https://learn.microsoft.com/en-us/azure/azure-relay/"})]}),"\n",(0,s.jsxs)(n.li,{children:["Azure Relay Bridge GitHub: ",(0,s.jsx)(n.code,{children:"https://github.com/Azure/azure-relay-bridge"})]}),"\n",(0,s.jsxs)(n.li,{children:["LDAP search reference: ",(0,s.jsx)(n.code,{children:"https://ldap.com/ldapsearch/"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);
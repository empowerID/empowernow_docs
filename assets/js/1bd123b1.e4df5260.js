"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[781],{28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>o});var i=s(96540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}},71166:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"services/bff/how-to/dcr-bootstrap","title":"Dynamic Client Registration (DCR) Runbook \u2014 BFF Client","description":"Purpose","source":"@site/docs/services/bff/how-to/dcr-bootstrap.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/dcr-bootstrap","permalink":"/empowernow_docs/docs/services/bff/how-to/dcr-bootstrap","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/dcr-bootstrap.md","tags":[],"version":"current","frontMatter":{"title":"Dynamic Client Registration (DCR) Runbook \u2014 BFF Client"},"sidebar":"tutorialSidebar","previous":{"title":"Configure CORS and Cookie Domain (Verified)","permalink":"/empowernow_docs/docs/services/bff/how-to/cors-cookie-domain"},"next":{"title":"DCR: wire IAT in compose","permalink":"/empowernow_docs/docs/services/bff/how-to/dcr-compose-wiring"}}');var r=s(74848),t=s(28453);const d={title:"Dynamic Client Registration (DCR) Runbook \u2014 BFF Client"},o=void 0,c={},l=[];function a(e){const n={code:"code",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Purpose"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure the BFF registers/updates its OIDC client in the IdP and rotates signing keys safely without clobbering other client settings."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Scope"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Applies to the BFF ",(0,r.jsx)(n.code,{children:"private_key_jwt"})," client managed by ",(0,r.jsx)(n.code,{children:"ms_bff/src/bootstrap/dcr_bootstrap.py"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Uses inline ",(0,r.jsx)(n.code,{children:"jwks"})," on the client record (not ",(0,r.jsx)(n.code,{children:"jwks_uri"}),"). No IdP restart is required."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["See also IdP guide: ",(0,r.jsx)(n.code,{children:"services/idp/how-to/mint-iat-and-dcr"})," for minting the Initial Access Token (IAT) and performing DCR."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["IdP DCR guide: ",(0,r.jsx)(n.code,{children:"IdP/docs/DCR_Guide.md"})]}),"\n",(0,r.jsxs)(n.li,{children:["Bootstrap helper: ",(0,r.jsx)(n.code,{children:"ms_bff_spike/ms_bff/src/bootstrap/dcr_bootstrap.py"})]}),"\n",(0,r.jsxs)(n.li,{children:["Compose wiring: ",(0,r.jsx)(n.code,{children:"CRUDService/docker-compose-authzen4.yml"})," (bff service env)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Key environment variables"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["IDP_BASE_URL: internal IdP base (e.g., ",(0,r.jsx)(n.code,{children:"http://idp-app:8002"}),")"]}),"\n",(0,r.jsx)(n.li,{children:'DCR_ENABLED: "true" to run bootstrap on start'}),"\n",(0,r.jsx)(n.li,{children:'SKIP_DCR_BOOTSTRAP: set "true" to skip'}),"\n",(0,r.jsx)(n.li,{children:"DCR_IAT: Initial Access Token for first-time registration"}),"\n",(0,r.jsxs)(n.li,{children:["DCR_CLIENT_ID: Desired client id (e.g., ",(0,r.jsx)(n.code,{children:"bff-server"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["DCR_CLIENT_PROFILE: Template/profile (e.g., ",(0,r.jsx)(n.code,{children:"code-flow-pkjwt"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["DCR_SIGNING_KEY: Path to PEM private key (e.g., ",(0,r.jsx)(n.code,{children:"/app/keys/bff-sig-001.pem"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["BFF_KID: Kid to advertise in JWKS (e.g., ",(0,r.jsx)(n.code,{children:"bff-sig-001"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"DCR_REDIRECT_URIS: Optional list; if set, see redirect update modes below"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Rotation controls (non-destructive)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'DCR_ROTATION_SAFE: "true" \u2192 enables safe rotation behavior; forces redirect merge'}),"\n",(0,r.jsxs)(n.li,{children:['DCR_REDIRECT_UPDATE_MODE: "auto" | "replace" | "merge" | "none"',"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"auto (default): only update if provided and differs"}),"\n",(0,r.jsx)(n.li,{children:"replace: use provided values exactly"}),"\n",(0,r.jsx)(n.li,{children:"merge: union of existing + provided (order preserved, no dups)"}),"\n",(0,r.jsx)(n.li,{children:"none: never modify redirect_uris"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"BFF_JWK_ROTATE_AFTER_DAYS: Days after which a new key is generated in-memory (default 30)"}),"\n",(0,r.jsx)(n.li,{children:"BFF_JWK_RETIRE_AFTER_DAYS: Retire very old keys by kid timestamp (default 60; \u22640 disables)"}),"\n",(0,r.jsx)(n.li,{children:"BFF_JWK_MAX_KEYS: Cap the number of keys kept (default 3; \u22640 disables cap)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Safe rotation \u2014 TL;DR"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Set env to avoid redirect churn and keep overlap during rotation:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"DCR_ROTATION_SAFE=true\n# optional explicit controls\n# DCR_REDIRECT_UPDATE_MODE=merge\n# BFF_JWK_MAX_KEYS=3\n# BFF_JWK_RETIRE_AFTER_DAYS=60\n# BFF_JWK_ROTATE_AFTER_DAYS=30\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Deploy/restart the BFF. The bootstrapper will:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generate a new RSA key if the PEM is missing or older than rotate_after_days"}),"\n",(0,r.jsxs)(n.li,{children:["PATCH the client ",(0,r.jsx)(n.code,{children:"jwks"})," (and ",(0,r.jsx)(n.code,{children:"redirect_uris"})," per mode)"]}),"\n",(0,r.jsx)(n.li,{children:"Persist the new PEM only after PATCH succeeds"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For an immediate rotation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Temporarily set ",(0,r.jsx)(n.code,{children:"BFF_JWK_ROTATE_AFTER_DAYS=0"})," for one restart, or delete the PEM file so a new one is generated and published."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Redirect URIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If you provide ",(0,r.jsx)(n.code,{children:"DCR_REDIRECT_URIS"}),", the update behavior follows ",(0,r.jsx)(n.code,{children:"DCR_REDIRECT_UPDATE_MODE"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["With ",(0,r.jsx)(n.code,{children:"DCR_ROTATION_SAFE=true"}),", merge semantics are used to avoid removing existing values."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"RAT/IAT handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["On first registration, ",(0,r.jsx)(n.code,{children:"DCR_IAT"})," must be present and valid."]}),"\n",(0,r.jsxs)(n.li,{children:["If PATCH returns 401/403, the bootstrapper attempts RAT auto-renew when ",(0,r.jsx)(n.code,{children:"BOOTSTRAP_ADMIN_TOKEN"})," is set; otherwise it raises a clear admin action message."]}),"\n",(0,r.jsxs)(n.li,{children:["To issue a new RAT in the IdP: see the admin DCR endpoints (e.g., ",(0,r.jsx)(n.code,{children:"/api/admin/dcr/initial-access-tokens"})," and ",(0,r.jsx)(n.code,{children:"/api/admin/dcr/clients/{client_id}/tokens"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Operational notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No IdP config or compose changes are needed for normal rotations; the IdP uses the stored inline JWKS immediately."}),"\n",(0,r.jsx)(n.li,{children:"Update only if any component has statically pinned the public key/kid outside IdP."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Observability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Logs: look for "JWKS rotated successfully" and optional redirect updates.'}),"\n",(0,r.jsxs)(n.li,{children:["Metrics (when ",(0,r.jsx)(n.code,{children:"PROM_PUSHGATEWAY_URL"})," is set): ",(0,r.jsx)(n.code,{children:'bff_dcr_status{status="success|rat_cached|rat_invalid|jwks_rotation_failed"}'}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Errors and fixes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["No cached creds and missing ",(0,r.jsx)(n.code,{children:"DCR_IAT"})," \u2192 provision a new IAT in IdP admin, set ",(0,r.jsx)(n.code,{children:"DCR_IAT"}),", restart."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"invalid_token"})," or expired IAT/RAT \u2192 issue a fresh token via IdP admin; restart."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["PATCH 4xx without auto-renew \u2192 confirm permissions/scopes, refresh IAT/RAT, or set ",(0,r.jsx)(n.code,{children:"DCR_FORCE_REPLACE=true"})," and retry registration."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Registers/updates the BFF\u2019s OAuth client at the IdP at startup"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Publishes/rotates the BFF\u2019s JWKS (public keys for ",(0,r.jsx)(n.code,{children:"private_key_jwt"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Caches ",(0,r.jsx)(n.code,{children:"client_id"})," and the ",(0,r.jsx)(n.code,{children:"registration_access_token"})," (RAT) on disk"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Pushes a status metric to Prometheus Pushgateway when configured"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"What DCR does (in our stack)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Registers/updates the BFF\u2019s OAuth client at the IdP at startup"}),"\n",(0,r.jsxs)(n.li,{children:["Publishes/rotates the BFF\u2019s JWKS (public keys for ",(0,r.jsx)(n.code,{children:"private_key_jwt"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Caches ",(0,r.jsx)(n.code,{children:"client_id"})," and the ",(0,r.jsx)(n.code,{children:"registration_access_token"})," (RAT) on disk"]}),"\n",(0,r.jsx)(n.li,{children:"Pushes a status metric to Prometheus Pushgateway when configured"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"High\u2011level flow (bootstrap)"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant BFF\n  participant DCR as dcr_bootstrap.py\n  participant IdP\n  BFF->>DCR: Start container (env loaded)\n  DCR->>DCR: Load/generate JWK from PEM (kid)\n  DCR->>DCR: Read cached creds (client_id, RAT)\n  alt cached valid\n    DCR->>IdP: GET /register/{client_id}\n    IdP--\x3e>DCR: 200 + current JWKS\n    alt kid present\n      DCR--\x3e>BFF: Ready (no changes)\n    else rotate key\n      DCR->>IdP: PATCH JWKS (add new, cap to 3)\n      IdP--\x3e>DCR: 200\n      DCR--\x3e>BFF: Ready\n    end\n  else no creds\n    DCR->>IdP: POST /register (Bearer IAT)\n    IdP--\x3e>DCR: 201 + client_id (+ RAT)\n    DCR--\x3e>BFF: Save creds, write new PEM\n  end"}),"\n",(0,r.jsx)(n.p,{children:"How to set it up"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["One-time bootstrap","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'DCR_ENABLED: "true"'})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'SKIP_DCR_BOOTSTRAP: "false"'})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'DCR_FORCE_REPLACE: "false"'})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'DCR_IAT: "<fresh IAT>"'})}),"\n",(0,r.jsxs)(n.li,{children:["Ensure the DCR payload includes ",(0,r.jsx)(n.code,{children:"token_endpoint_auth_method: private_key_jwt"})," and ",(0,r.jsx)(n.code,{children:"jwks_uri: https://<your-bff-host>/.well-known/jwks.json"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["After success (and from then on)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Remove ",(0,r.jsx)(n.code,{children:"DCR_IAT"})," from environment/config"]}),"\n",(0,r.jsxs)(n.li,{children:["Keep: ",(0,r.jsx)(n.code,{children:'DCR_ENABLED: "true"'}),", ",(0,r.jsx)(n.code,{children:'SKIP_DCR_BOOTSTRAP: "false"'}),", ",(0,r.jsx)(n.code,{children:'DCR_FORCE_REPLACE: "false"'})]}),"\n",(0,r.jsx)(n.li,{children:"Result: on every start the bootstrap is a no-op (client exists). It may PATCH client metadata when needed, but does not consume an IAT."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Prerequisites (IdP side)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["DCR enabled per ",(0,r.jsx)(n.code,{children:"DCR_Guide.md"})," and routes exposed (",(0,r.jsx)(n.code,{children:"/api/oidc/register"})," CRUD)"]}),"\n",(0,r.jsx)(n.li,{children:"Issue an Initial\u2011Access\u2011Token (IAT) for the BFF client"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Enable DCR for the BFF"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Configure environment for the bff container (compose excerpt):"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'environment:\n  DCR_ENABLED: "true"                # enable the feature in your entrypoint\n  SKIP_DCR_BOOTSTRAP: "false"       # run the bootstrap helper on start\n  IDP_BASE_URL: http://idp-app:8002  # internal IdP base (container\u2011to\u2011container)\n  DCR_IAT: <initial_access_token>    # IAT issued by IdP\n  DCR_CLIENT_ID: bff-server          # desired client_id (optional)\n  DCR_CLIENT_PROFILE: code-flow-pkjwt # IdP client profile/template\n  DCR_REDIRECT_URIS: https://<host>/auth/callback  # space or comma separated\n  DCR_SIGNING_KEY: /app/keys/bff-sig-001.pem   # PEM used for private_key_jwt\n  BFF_KID: bff-sig-001              # kid advertised in JWKS\n  DCR_ROTATION_SAFE: "true"        # non-destructive rotation mode\n  DCR_REDIRECT_UPDATE_MODE: auto    # or merge|replace|none\n  BFF_CLIENT_CRED_PATH: /app/keys/bff_client.json  # persisted creds JSON\n  BFF_JWK_ROTATE_AFTER_DAYS: "30"   # in\u2011place rotation threshold\n  BFF_JWK_RETIRE_AFTER_DAYS: "60"   # drop very old keys\n  PROM_PUSHGATEWAY_URL: http://prometheus-pushgateway:9091  # optional metrics\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Run the bootstrap on start. Options:"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Call the module from your entrypoint:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python -m ms_bff.src.bootstrap.dcr_bootstrap\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Or execute the script directly:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python /app/ms_bff_spike/ms_bff/src/bootstrap/dcr_bootstrap.py\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Verify"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["IdP: ",(0,r.jsx)(n.code,{children:"GET /api/oidc/register/{client_id}"})," shows the BFF with the advertised ",(0,r.jsx)(n.code,{children:"kid"})]}),"\n",(0,r.jsxs)(n.li,{children:["BFF: creds JSON exists at ",(0,r.jsx)(n.code,{children:"BFF_CLIENT_CRED_PATH"})," with ",(0,r.jsx)(n.code,{children:"client_id"})," (+ RAT when applicable)"]}),"\n",(0,r.jsxs)(n.li,{children:["Metrics: optionally, ",(0,r.jsx)(n.code,{children:'bff_dcr_status{status="success"}=1'})," is pushed to Pushgateway"]}),"\n",(0,r.jsxs)(n.li,{children:["JWKS: BFF serves ",(0,r.jsx)(n.code,{children:"/.well-known/jwks.json"})," and the client\u2019s ",(0,r.jsx)(n.code,{children:"jwks_uri"})," in IdP points to that URL"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Operational notes (from code)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If cached RAT is invalid/expired, the helper can use ",(0,r.jsx)(n.code,{children:"BOOTSTRAP_ADMIN_TOKEN"})," to renew it via the IdP admin endpoint and retry the PATCH."]}),"\n",(0,r.jsxs)(n.li,{children:["JWKS rotation is additive and capped to 3 keys; very old keys are dropped based on ",(0,r.jsx)(n.code,{children:"BFF_JWK_RETIRE_AFTER_DAYS"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"The helper is idempotent and can be run on every start; it only writes the PEM after a successful JWKS update/registration."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Auto-renew vs auto-rotate"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Access tokens: already auto-refreshed by the BFF\u2019s background token refresh. Nothing to change."}),"\n",(0,r.jsxs)(n.li,{children:["Registration/secret:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Don\u2019t use ",(0,r.jsx)(n.code,{children:"client_secret"})," rotation for security; prefer ",(0,r.jsx)(n.code,{children:"private_key_jwt"})," + ",(0,r.jsx)(n.code,{children:"jwks_uri"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["To \u201cauto-rotate,\u201d rotate the BFF\u2019s signing key and update the JWKS served at ",(0,r.jsx)(n.code,{children:"/.well-known/jwks.json"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Best practice: publish both old and new keys in JWKS for a grace period, then drop the old key. The IdP will re-fetch via ",(0,r.jsx)(n.code,{children:"jwks_uri"})," automatically."]}),"\n",(0,r.jsx)(n.li,{children:"This achieves continuous key rotation without using DCR again."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Missing IAT \u2192 bootstrap fails fast with a clear admin action message"}),"\n",(0,r.jsxs)(n.li,{children:["401/403 from IdP \u2192 reissue RAT or set ",(0,r.jsx)(n.code,{children:"DCR_FORCE_REPLACE=true"})," to re\u2011register"]}),"\n",(0,r.jsx)(n.li,{children:"Logs include truncated error bodies and friendly messages from the helper"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If you must rotate a shared ",(0,r.jsx)(n.code,{children:"client_secret"})," (not recommended)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The public DCR PATCH endpoint does not support updating ",(0,r.jsx)(n.code,{children:"client_secret"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Use an admin path or out-of-band update in the IdP instead."}),"\n",(0,r.jsxs)(n.li,{children:["Prefer ",(0,r.jsx)(n.code,{children:"private_key_jwt"})," with ",(0,r.jsx)(n.code,{children:"jwks_uri"})," to avoid shared secret distribution."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["IdP DCR Guide: how to turn on DCR and issue IATs \u2014 ",(0,r.jsx)(n.code,{children:"IdP/docs/DCR_Guide.md"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7130],{17182:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"services/bff/how-to/dev-vs-prod-setup","title":"Dev vs Prod Setup for SPAs","description":"Dev (separate origins)","source":"@site/docs/services/bff/how-to/dev-vs-prod-setup.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/dev-vs-prod-setup","permalink":"/empowernow_docs/docs/services/bff/how-to/dev-vs-prod-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/dev-vs-prod-setup.md","tags":[],"version":"current","frontMatter":{"title":"Dev vs Prod Setup for SPAs"},"sidebar":"tutorialSidebar","previous":{"title":"Designing New SPA API Surfaces in the BFF","permalink":"/empowernow_docs/docs/services/bff/how-to/designing-new-apis"},"next":{"title":"Upstream TLS/mTLS to CRUD","permalink":"/empowernow_docs/docs/services/bff/how-to/enable-upstream-tls-to-crud"}}');var t=o(74848),r=o(28453);const i={title:"Dev vs Prod Setup for SPAs"},c=void 0,d={},a=[];function l(e){const s={code:"code",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Dev (separate origins)"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Set ",(0,t.jsx)(s.code,{children:"VITE_BFF_BASE_URL"})," to the BFF origin (e.g., ",(0,t.jsx)(s.code,{children:"http://localhost:8000/api"})," or ",(0,t.jsx)(s.code,{children:"https://api.ocg.labs.empowernow.ai"}),")."]}),"\n",(0,t.jsx)(s.li,{children:"Ensure CORS allows your dev origin in BFF settings (present in backend config; verify per environment)."}),"\n",(0,t.jsx)(s.li,{children:"Configure hosts entries for local TLS domains if using Traefik per the QA guide."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Prod (same origin)"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Serve the SPA via Traefik with the BFF; set ",(0,t.jsx)(s.code,{children:"VITE_BFF_BASE_URL"})," to ",(0,t.jsx)(s.code,{children:"/api"})," (default in current SPAs)."]}),"\n",(0,t.jsx)(s.li,{children:"Cookies are scoped for SSO across apps/domains as configured by the BFF; no Authorization header required."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Cookie domain/path"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Session cookies are set by the BFF during auth callback; domain and path depend on deployment. For multi\u2011SPA SSO under related subdomains, align cookie domain at the parent if required by your ingress."}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>c});var n=o(96540);const t={},r=n.createContext(t);function i(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);
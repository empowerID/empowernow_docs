"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[7774],{28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var i=n(96540);const t={},s=i.createContext(t);function o(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:r},e.children)}},37357:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"services/crud-service/secrets/rotation","title":"Secrets rotation \u2014 background and end\u2011to\u2011end flow","description":"What secrets rotation is, why it matters, and how EmpowerNow implements rotation across providers","source":"@site/docs/services/crud-service/secrets/14-rotation.md","sourceDirName":"services/crud-service/secrets","slug":"/services/crud-service/secrets/rotation","permalink":"/empowernow_docs/docs/services/crud-service/secrets/rotation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/secrets/14-rotation.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"title":"Secrets rotation \u2014 background and end\u2011to\u2011end flow","description":"What secrets rotation is, why it matters, and how EmpowerNow implements rotation across providers"},"sidebar":"tutorialSidebar","previous":{"title":"Automation, /execute workflows, and AI agents","permalink":"/empowernow_docs/docs/services/crud-service/secrets/automation-execute-workflows-agents"},"next":{"title":"Secrets Management DevOps Guide","permalink":"/empowernow_docs/docs/services/crud-service/secrets/SECRETS_DEVOPS_GUIDE"}}');var t=n(74848),s=n(28453);const o={title:"Secrets rotation \u2014 background and end\u2011to\u2011end flow",description:"What secrets rotation is, why it matters, and how EmpowerNow implements rotation across providers"},a=void 0,c={},l=[{value:"Why rotation matters",id:"why-rotation-matters",level:2},{value:"Big picture",id:"big-picture",level:2},{value:"How rotation works end\u2011to\u2011end",id:"how-rotation-works-endtoend",level:2},{value:"1) Invocation: <code>secrets</code> system config maps \u201crotate\u201d to API",id:"1-invocation-secrets-system-config-maps-rotate-to-api",level:3},{value:"2) API entrypoint: plugin <code>rotate(...)</code> applies provider\u2011specific behavior",id:"2-api-entrypoint-plugin-rotate-applies-providerspecific-behavior",level:3},{value:"3) Controller: versioned write + audit for KVv2",id:"3-controller-versioned-write--audit-for-kvv2",level:3},{value:"4) Provider strategies via <code>VaultService</code>",id:"4-provider-strategies-via-vaultservice",level:3},{value:"5) Security and scoping",id:"5-security-and-scoping",level:3},{value:"6) Separate concern: BFF cookie \u201crotation\u201d (expiration refresh)",id:"6-separate-concern-bff-cookie-rotation-expiration-refresh",level:3},{value:"Examples",id:"examples",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"See also",id:"see-also",level:2}];function d(e){const r={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"why-rotation-matters",children:"Why rotation matters"}),"\n",(0,t.jsx)(r.p,{children:"Secrets (API keys, credentials, tokens) age and leak. Rotation reduces blast radius by replacing values on a cadence or event, ensuring consumers pick up new versions, and leaving a recoverable trail (versions, audits). Without rotation, compromise windows are long, detection is harder, and revocation is risky."}),"\n",(0,t.jsx)(r.h2,{id:"big-picture",children:"Big picture"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Programmatic rotation is an API\u2011first operation that writes a new value/version and emits auditable evidence."}),"\n",(0,t.jsx)(r.li,{children:"YAML (dev) treats rotation as an update; KVv2 providers (OpenBao/HashiCorp) create a new version."}),"\n",(0,t.jsx)(r.li,{children:"Authorization occurs at the PEP/PDP boundary; auditing flows to Kafka \u2192 Analytics \u2192 ClickHouse \u2192 UI."}),"\n"]}),"\n",(0,t.jsx)(r.mermaid,{value:"sequenceDiagram\r\n  participant Caller\r\n  participant API as Secrets API (PEP)\r\n  participant PDP as Policy (PDP)\r\n  participant Prov as Provider (KVv2/YAML)\r\n  Caller->>API: POST /api/secrets/rotate {uri, value}\r\n  API->>PDP: authorize(subject, tenant, resource, purpose=rotate)\r\n  PDP--\x3e>API: Permit (+ obligations) / Deny\r\n  alt Permit\r\n    API->>Prov: write new version (KVv2) or update (YAML)\r\n    Prov--\x3e>API: ok (optional new version)\r\n    API--\x3e>Caller: rotated {old_version?, new_version?}\r\n    API--\x3e>API: emit SECRET_ROTATED audit\r\n  else Deny\r\n    API--\x3e>Caller: 403\r\n  end"}),"\n",(0,t.jsx)(r.h2,{id:"how-rotation-works-endtoend",children:"How rotation works end\u2011to\u2011end"}),"\n",(0,t.jsxs)(r.h3,{id:"1-invocation-secrets-system-config-maps-rotate-to-api",children:["1) Invocation: ",(0,t.jsx)(r.code,{children:"secrets"})," system config maps \u201crotate\u201d to API"]}),"\n",(0,t.jsxs)(r.p,{children:["The system mapping exposes a rotate operation that POSTs to ",(0,t.jsx)(r.code,{children:"/api/secrets/rotate"})," with a bearer token intended for internal callers."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:'rotate:\r\n  method: "POST"\r\n  endpoint: "/api/secrets/rotate"\r\n  required_params: ["uri", "value"]\r\n  headers:\r\n    Authorization: "Bearer {{ \'INTERNAL_EXECUTION_TOKEN\' | ENV or \'internal\' }}"\r\n  body:\r\n    uri: "{{ params.uri }}"\r\n    value: "{{ params.value }}"\r\n  skip_schema_transform: true\n'})}),"\n",(0,t.jsx)(r.p,{children:"Key points"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Requires ",(0,t.jsx)(r.code,{children:"uri"})," and ",(0,t.jsx)(r.code,{children:"value"}),"."]}),"\n",(0,t.jsxs)(r.li,{children:["Uses ",(0,t.jsx)(r.code,{children:"INTERNAL_EXECUTION_TOKEN"})," and bypasses schema transforms."]}),"\n",(0,t.jsx)(r.li,{children:"Integrates with the CRUDService function plugin system to reach rotation logic."}),"\n"]}),"\n",(0,t.jsxs)(r.h3,{id:"2-api-entrypoint-plugin-rotate-applies-providerspecific-behavior",children:["2) API entrypoint: plugin ",(0,t.jsx)(r.code,{children:"rotate(...)"})," applies provider\u2011specific behavior"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Parses Canonical Secret URIs and routes by provider/engine."}),"\n",(0,t.jsxs)(r.li,{children:["YAML behaves like an update; KVv2 (OpenBao/HashiCorp) delegates to ",(0,t.jsx)(r.code,{children:"RotationController"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Highlights"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["YAML \u2192 ",(0,t.jsx)(r.code,{children:"create_or_update"})," (no version metadata)"]}),"\n",(0,t.jsxs)(r.li,{children:["KVv2 \u2192 enforce engine ",(0,t.jsx)(r.code,{children:"kv2"}),", build per\u2011fragment or object payload, then ",(0,t.jsx)(r.code,{children:"RotationController.rotate_kvv2(...)"})]}),"\n",(0,t.jsxs)(r.li,{children:["Guardrails \u2192 tenant scoping and allowed mounts (e.g., ",(0,t.jsx)(r.code,{children:"secret"}),"); fragment updates only the keyed value"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"3-controller-versioned-write--audit-for-kvv2",children:"3) Controller: versioned write + audit for KVv2"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"RotationController"})," implements rotation for KVv2 providers:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Best\u2011effort read of old version (if provider exposes ",(0,t.jsx)(r.code,{children:"get_latest_version"}),")"]}),"\n",(0,t.jsx)(r.li,{children:"Write new value via provider strategy"}),"\n",(0,t.jsx)(r.li,{children:"Best\u2011effort read of new version"}),"\n",(0,t.jsxs)(r.li,{children:["Emit Kafka audit event ",(0,t.jsx)(r.code,{children:"SECRET_ROTATED"})," including salted ",(0,t.jsx)(r.code,{children:"resource_ref"})," and ",(0,t.jsx)(r.code,{children:"kv_version"})," (when available)"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Behavioral guarantees"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Rotation succeeds if provider ",(0,t.jsx)(r.code,{children:"create_or_update_secret"})," succeeds; version lookups are best\u2011effort"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"resource_ref"})," is an HMAC of the canonical URI when configured (non\u2011leaky reference)"]}),"\n"]}),"\n",(0,t.jsxs)(r.h3,{id:"4-provider-strategies-via-vaultservice",children:["4) Provider strategies via ",(0,t.jsx)(r.code,{children:"VaultService"})]}),"\n",(0,t.jsx)(r.p,{children:"Rotation depends on strategy capabilities:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.code,{children:"create_or_update_secret(path, value)"})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"get_latest_version(path)"})," (optional)"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"VaultService"})," discovers strategies (e.g., OpenBao/HashiCorp) and wires configuration from environment variables."]}),"\n",(0,t.jsx)(r.h3,{id:"5-security-and-scoping",children:"5) Security and scoping"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Rotate is intentionally gated by the internal bearer (",(0,t.jsx)(r.code,{children:"INTERNAL_EXECUTION_TOKEN"})," header in the mapping)"]}),"\n",(0,t.jsx)(r.li,{children:"PDP checks occur at the PEP for API calls; writes are scoped by canonical URI parsing (tenant/mount guards)"}),"\n",(0,t.jsxs)(r.li,{children:["Audits are emitted (",(0,t.jsx)(r.code,{children:"SECRET_ROTATED"}),") with salted ",(0,t.jsx)(r.code,{children:"resource_ref"})," to avoid URI leakage"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"6-separate-concern-bff-cookie-rotation-expiration-refresh",children:"6) Separate concern: BFF cookie \u201crotation\u201d (expiration refresh)"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Unrelated to secrets. It refreshes cookie expirations after inactivity; values remain identical."}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(r.p,{children:"Rotate KVv2 fragment"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'POST /api/secrets/rotate\r\n{ "uri": "openbao+kv2://secret/app/api#token", "value": "new-value" }\n'})}),"\n",(0,t.jsx)(r.p,{children:"Rotate KVv2 path object"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'POST /api/secrets/rotate\r\n{ "uri": "openbao+kv2://secret/app/api", "value": { "token": "new" } }\n'})}),"\n",(0,t.jsx)(r.p,{children:"YAML (dev) treated as update"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'POST /api/secrets/rotate\r\n{ "uri": "yaml://secret/env#MY_KEY", "value": "new" }\n'})}),"\n",(0,t.jsx)(r.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"400: malformed URI or object required when no fragment"}),"\n",(0,t.jsx)(r.li,{children:"403: policy denied; verify PDP and mapping"}),"\n",(0,t.jsx)(r.li,{children:"501: provider not supported for rotation"}),"\n",(0,t.jsx)(r.li,{children:"502: provider write failure"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Authorization model (PDP): ./11-authorization-model-authzen.md"}),"\n",(0,t.jsx)(r.li,{children:"Auditing & logging: ./12-auditing-logging.md"}),"\n",(0,t.jsx)(r.li,{children:"API reference: ../reference/secrets-api.md"}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5861],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},46393:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"services/bff/how-to/spa-auth-flows","title":"SPA Auth Flows with the BFF","description":"Right mental model","source":"@site/docs/services/bff/how-to/spa-auth-flows.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/spa-auth-flows","permalink":"/empowernow_docs/docs/services/bff/how-to/spa-auth-flows","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/spa-auth-flows.md","tags":[],"version":"current","frontMatter":{"title":"SPA Auth Flows with the BFF"},"sidebar":"tutorialSidebar","previous":{"title":"Session \u2192 service token bridging","permalink":"/empowernow_docs/docs/services/bff/how-to/session-to-service-token-bridging"},"next":{"title":"SPA Integration (React)","permalink":"/empowernow_docs/docs/services/bff/how-to/spa-integration"}}');var i=s(74848),o=s(28453);const r={title:"SPA Auth Flows with the BFF"},c=void 0,d={},a=[];function l(e){const n={code:"code",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Right mental model"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The SPA delegates OAuth/OIDC to the BFF. The BFF extracts identity from ",(0,i.jsx)(n.code,{children:"id_token.sub"})," and creates a session; the SPA only uses the session cookie."]}),"\n",(0,i.jsx)(n.li,{children:"Backend service tokens used by the BFF (client-credential or token-exchange) are never exposed to the browser and are not the user identity."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Verified behavior in current SPAs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Auth provider: apps wrap ",(0,i.jsx)(n.code,{children:"<App />"})," with ",(0,i.jsx)(n.code,{children:"AuthProvider"})," from ",(0,i.jsx)(n.code,{children:"@empowernow/bff-auth-react"})," and call ",(0,i.jsx)(n.code,{children:"setBaseUrl(VITE_BFF_BASE_URL || '/api')"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Guarding: both SPAs use an ",(0,i.jsx)(n.code,{children:"AuthGuard"})," that reads ",(0,i.jsx)(n.code,{children:"{ isAuthenticated, isLoading }"})," from ",(0,i.jsx)(n.code,{children:"useAuth()"})," and allows public routes ",(0,i.jsx)(n.code,{children:"['/login', '/callback', '/auth-debug']"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Base URL: both SPAs default to ",(0,i.jsx)(n.code,{children:"/api"})," when co-hosted with the BFF; otherwise set ",(0,i.jsx)(n.code,{children:"VITE_BFF_BASE_URL"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Login flow (observed)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The guard redirects unauthenticated users to ",(0,i.jsx)(n.code,{children:"/login?returnUrl=..."}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Each frontend includes a ",(0,i.jsx)(n.code,{children:"Login"})," page under ",(0,i.jsx)(n.code,{children:"components/Login"})," that initiates auth via the BFF/IdP."]}),"\n",(0,i.jsxs)(n.li,{children:["The guard treats ",(0,i.jsx)(n.code,{children:"/callback"})," as public; callback handling is present (e.g., ",(0,i.jsx)(n.code,{children:"idp_ui/src/components/AuthCallback/index.tsx"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Logout flow"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use your app\u2019s login page or top\u2011nav to surface a logout action. The ",(0,i.jsx)(n.code,{children:"@empowernow/bff-auth-react"})," provider is expected to expose logout; the exact method name is not in this repo. If unavailable, implement a call to the BFF\u2019s auth router logout endpoint (served by BFF, not via ",(0,i.jsx)(n.code,{children:"routes.yaml"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sequence (high level)"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant UI as SPA\n  participant BFF\n  participant IdP\n  UI->>UI: Navigate to /login\n  UI->>BFF: Start login (redirect)\n  BFF->>IdP: OAuth authorize\n  IdP--\x3e>BFF: Callback with code\n  BFF--\x3e>UI: Sets session cookie; redirect to returnUrl\n  UI->>BFF: API calls using cookies"}),"\n",(0,i.jsx)(n.p,{children:"Public routes vs guards (verified)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Public: ",(0,i.jsx)(n.code,{children:"/login"}),", ",(0,i.jsx)(n.code,{children:"/callback"}),", ",(0,i.jsx)(n.code,{children:"/auth-debug"})]}),"\n",(0,i.jsxs)(n.li,{children:["Guard everything else using ",(0,i.jsx)(n.code,{children:"AuthGuard"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Reading current auth state"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"const { isAuthenticated, isLoading } = useAuth()"})," from ",(0,i.jsx)(n.code,{children:"@empowernow/bff-auth-react"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["This repo does not include a user profile hook/shape; surface minimal UI based on ",(0,i.jsx)(n.code,{children:"isAuthenticated"})," and call backend APIs for user-specific data as needed."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);
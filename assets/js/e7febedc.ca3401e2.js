"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9424],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(96540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}},82655:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"source_content/mcp_integration_external","title":"CRUD Service \xd7 MCP \u2013 External Overview","description":"This short brief explains what the Model-Context-Protocol (MCP) integration delivers, not the low-level implementation.  Use it to understand the value-prop and deployment shape when you consume CRUD Service as a platform or plug your own MCP-compatible services into it.","source":"@site/docs/source_content/mcp_integration_external.md","sourceDirName":"source_content","slug":"/source_content/mcp_integration_external","permalink":"/empowernow_docs/docs/source_content/mcp_integration_external","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/mcp_integration_external.md","tags":[],"version":"current","frontMatter":{}}');var s=r(74848),o=r(28453);const i={},a="CRUD Service \xd7 MCP \u2013 External Overview",c={},l=[{value:"1  Why MCP?",id:"1--why-mcp",level:2},{value:"2  What You Get Today",id:"2--what-you-get-today",level:2},{value:"3  High-Level Interaction",id:"3--high-level-interaction",level:2},{value:"Virtual views in practice",id:"virtual-views-in-practice",level:3},{value:"4  Security At A Glance",id:"4--security-at-a-glance",level:2},{value:"5  Deployment Notes",id:"5--deployment-notes",level:2}];function d(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"crud-service--mcp--external-overview",children:"CRUD Service \xd7 MCP \u2013 External Overview"})}),"\n",(0,s.jsxs)(n.p,{children:["This short brief explains ",(0,s.jsx)(n.em,{children:"what"})," the Model-Context-Protocol (MCP) integration delivers, not the low-level implementation.  Use it to understand the value-prop and deployment shape when you consume CRUD Service as a platform or plug your own MCP-compatible services into it."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1--why-mcp",children:"1  Why MCP?"}),"\n",(0,s.jsx)(n.p,{children:'MCP is an open JSON-over-HTTP protocol that lets AI agents discover, describe and invoke tools in a structured way.  By supporting MCP, CRUD Service becomes a "universal hub":'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Publish"})," \u2013 every command and workflow you already model in CRUD Service instantly shows up as an MCP tool."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consume"})," \u2013 CRUD Service can ingest any remote MCP server and treat its tools as if they were local connectors."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The result is a single, policy-controlled interface for cross-system automation \u2013 no custom SDKs or bespoke adapters."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2--what-you-get-today",children:"2  What You Get Today"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"MCP Gateway"}),(0,s.jsx)(n.br,{}),"\n","\u2022 Exposes CRUD Service commands & workflows as tools via HTTP or Server-Sent Events (streaming).",(0,s.jsx)(n.br,{}),"\n","\u2022 Includes simple ",(0,s.jsx)(n.code,{children:"GET /health"}),", ",(0,s.jsx)(n.code,{children:"/tools"}),", ",(0,s.jsx)(n.code,{children:"/discovery"})," endpoints for monitoring and service discovery.",(0,s.jsx)(n.br,{}),"\n",'\u2022 Supports "virtual views" \u2013 filtered catalogs on distinct paths: ',(0,s.jsx)(n.code,{children:"GET /mcp/{view}/tools/list"}),", ",(0,s.jsx)(n.code,{children:"POST /mcp/{view}/jsonrpc"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Deterministic naming & identity"}),(0,s.jsx)(n.br,{}),"\n","\u2022 Default namespaced strategy ",(0,s.jsx)(n.code,{children:"provider.instance.base"})," prevents collisions across providers/tenants.",(0,s.jsx)(n.br,{}),"\n","\u2022 Per-instance context via ",(0,s.jsx)(n.code,{children:"mcpInstance"})," in system YAML (provider, instance, instance_label, env).",(0,s.jsx)(n.br,{}),"\n","\u2022 Optional Router surface (short names with ",(0,s.jsx)(n.code,{children:"oneOf"}),") can be enabled separately for UX demos."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Unified Authorization & Observability"}),(0,s.jsx)(n.br,{}),"\n","\u2022 Every MCP call flows through CRUD Service's existing token validation, PDP authorization and OpenTelemetry tracing layers."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3--high-level-interaction",children:"3  High-Level Interaction"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant Remote as Remote MCP Server\r\n    participant Connector as CRUD Service MCP Connector\r\n    participant Gateway as CRUD Service MCP Gateway\r\n    participant Agent as External AI Agent\r\n\r\n    Remote--\x3e>Connector: metadata (tools, prompts, resources)\r\n    Connector->>Gateway: register tools\r\n    Agent->>Gateway: invoke Tool X\r\n    Gateway->>CRUD: execute / workflow\r\n    CRUD--\x3e>Gateway: result\r\n    Gateway--\x3e>Agent: streamed / JSON response"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"All traffic can run over plain HTTP 1.1 or HTTP/2; no WebSockets required."})}),"\n",(0,s.jsx)(n.h3,{id:"virtual-views-in-practice",children:"Virtual views in practice"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Define views in ",(0,s.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/mcp_virtual_servers.yaml"})," (override via ",(0,s.jsx)(n.code,{children:"MCP_VIRTUAL_SERVERS_FILE"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Views filter the catalog by provider, instance, tags, source, etc. Health tools are always included."}),"\n",(0,s.jsxs)(n.li,{children:["If the file is missing, defaults include a ",(0,s.jsx)(n.code,{children:"workflows"})," view and provider-based views derived from configured systems."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4--security-at-a-glance",children:"4  Security At A Glance"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 Accepts any OIDC-issued bearer or DPoP token.",(0,s.jsx)(n.br,{}),"\n","\u2022 External PDP strategies (AuthZen, EmpowerID, OPA\u2026) can allow/deny each tool call.",(0,s.jsx)(n.br,{}),"\n",'\u2022 Optional user-bound-agent checks prevent "runaway" AI agents.']}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5--deployment-notes",children:"5  Deployment Notes"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 Gateway & Connector can be shipped together (same pod) or split for scale.",(0,s.jsx)(n.br,{}),"\n","\u2022 Both are stateless; horizontal scaling works out-of-the-box.",(0,s.jsx)(n.br,{}),"\n","\u2022 Connector supports a ",(0,s.jsx)(n.strong,{children:"Cron-pull"})," mode (periodic discovery) or ",(0,s.jsx)(n.strong,{children:"watch"})," mode (long-poll-plus-ETag) for near real-time sync."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"For deeper API or schema questions please contact the CRUD Service engineering team."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
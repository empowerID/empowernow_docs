"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5549],{22925:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"services/crud-service/explanation/mcp_tool_catalogue_naming","title":"mcp_tool_catalogue_naming","description":"MCP Tool Catalogue & Naming","source":"@site/docs/services/crud-service/explanation/mcp_tool_catalogue_naming.md","sourceDirName":"services/crud-service/explanation","slug":"/services/crud-service/explanation/mcp_tool_catalogue_naming","permalink":"/empowernow_docs/docs/services/crud-service/explanation/mcp_tool_catalogue_naming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/explanation/mcp_tool_catalogue_naming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"mcp-overview","permalink":"/empowernow_docs/docs/services/crud-service/explanation/mcp-overview"},"next":{"title":"node-handlers","permalink":"/empowernow_docs/docs/services/crud-service/explanation/node-handlers"}}');var s=i(74848),o=i(28453);const t={},c=void 0,r={},l=[{value:"MCP Tool Catalogue &amp; Naming",id:"mcp-tool-catalogue--naming",level:2},{value:"Naming strategy",id:"naming-strategy",level:3},{value:"Router surface (optional)",id:"router-surface-optional",level:3},{value:"Catalogue merge",id:"catalogue-merge",level:3},{value:"Input schema derivation",id:"input-schema-derivation",level:3},{value:"Limits and pagination",id:"limits-and-pagination",level:3},{value:"Examples",id:"examples",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"mcp-tool-catalogue--naming",children:"MCP Tool Catalogue & Naming"}),"\n",(0,s.jsx)(n.p,{children:"Loopback MCP publishes tools with deterministic names and schemas, and merges them with built\u2011ins and any configured external MCP endpoints."}),"\n",(0,s.jsx)(n.h3,{id:"naming-strategy",children:"Naming strategy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["System tools: ",(0,s.jsx)(n.code,{children:"provider.instance.base"})," (e.g., ",(0,s.jsx)(n.code,{children:"entra.cont.account.get_by_id"}),", ",(0,s.jsx)(n.code,{children:"ldap.av.account.get_by_dn"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Workflow tools: ",(0,s.jsx)(n.code,{children:"workflow.<name>"})," (e.g., ",(0,s.jsx)(n.code,{children:"wf.entraid.user.view"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Cap at 50 characters and append a stable hash suffix only when necessary."}),"\n",(0,s.jsxs)(n.li,{children:["Pre\u2011cap and final collision checks fail fast (recommended policy: ",(0,s.jsx)(n.code,{children:"MCP_DUPLICATE_POLICY=fail"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Add per\u2011system identity via ",(0,s.jsx)(n.code,{children:"mcpInstance"})," in system YAML:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'mcpInstance:\r\n  provider: entra\r\n  instance: cont\r\n  instance_label: "Contoso Entra"\r\n  env: prod\n'})}),"\n",(0,s.jsx)(n.h3,{id:"router-surface-optional",children:"Router surface (optional)"}),"\n",(0,s.jsxs)(n.p,{children:["Publish short names with a ",(0,s.jsx)(n.code,{children:"oneOf"})," input schema to represent multiple providers behind one conceptual tool. Disabled by default; keep invocation routing on namespaced names."]}),"\n",(0,s.jsx)(n.h3,{id:"catalogue-merge",children:"Catalogue merge"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\r\n  A[config/tools.yaml<br/>(built-ins)] --\x3e C[ToolCatalogue]\r\n  B[Loopback MCP<br/>generated tools] --\x3e C\r\n  E[External MCP endpoints<br/>config/mcp_endpoints.yaml] --\x3e C\r\n  C --\x3e F[/tools/list\\n/tools/search/]"}),"\n",(0,s.jsx)(n.h3,{id:"input-schema-derivation",children:"Input schema derivation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Commands: use explicit ",(0,s.jsx)(n.code,{children:"input_schema"})," if provided; otherwise derive from ",(0,s.jsx)(n.code,{children:"required_params"})," and optional hints; fallback to ",(0,s.jsx)(n.code,{children:'{ "type": "object", "additionalProperties": true }'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Workflows: use top\u2011level ",(0,s.jsx)(n.code,{children:"inputs"})," JSON Schema when present; otherwise the same permissive fallback applies."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"limits-and-pagination",children:"Limits and pagination"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enforce hard cap with ",(0,s.jsx)(n.code,{children:"MCP_MAX_TOOLS"})," to keep catalogs consumable by UIs/agents."]}),"\n",(0,s.jsx)(n.li,{children:"Deterministic ordering and pagination remove jitter."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Entra account get by id \u2192 ",(0,s.jsx)(n.code,{children:"entra.cont.account.get_by_id"})," (args: ",(0,s.jsx)(n.code,{children:"SystemIdentifier"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Auth0 account get by id \u2192 ",(0,s.jsx)(n.code,{children:"auth0.core.account.get_by_id"})," (args: ",(0,s.jsx)(n.code,{children:"SystemIdentifier"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["OpenLDAP account get by DN \u2192 ",(0,s.jsx)(n.code,{children:"ldap.av.account.get_by_dn"})," (args: ",(0,s.jsx)(n.code,{children:"DistinguishedName"}),")"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var a=i(96540);const s={},o=a.createContext(s);function t(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);
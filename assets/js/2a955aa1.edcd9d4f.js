"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3186],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var i=n(96540);const c={},d=i.createContext(c);function r(e){const s=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),i.createElement(d.Provider,{value:s},e.children)}},93289:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"services/membership/reference/schema-and-endpoints","title":"Membership Service \u2014 Graph Schema and PIP Endpoints","description":"This page condenses and formalizes the schema and endpoint catalogue. It is sourced from docs/sourcecontent/membershipserviceschemaand_endpoints.md.","source":"@site/docs/services/membership/reference/schema-and-endpoints.md","sourceDirName":"services/membership/reference","slug":"/services/membership/reference/schema-and-endpoints","permalink":"/empowernow_docs/docs/services/membership/reference/schema-and-endpoints","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/membership/reference/schema-and-endpoints.md","tags":[],"version":"current","frontMatter":{}}');var c=n(74848),d=n(28453);const r={},o="Membership Service \u2014 Graph Schema and PIP Endpoints",l={},t=[{value:"System overview",id:"system-overview",level:2},{value:"Graph model (essentials)",id:"graph-model-essentials",level:2},{value:"Neo4j DDL (selected)",id:"neo4j-ddl-selected",level:3},{value:"PIP surface (stable v1)",id:"pip-surface-stable-v1",level:2},{value:"PDP x Membership call flow",id:"pdp-x-membership-call-flow",level:3},{value:"Reference queries (Cypher)",id:"reference-queries-cypher",level:2},{value:"MCP HTTP endpoints (summary)",id:"mcp-http-endpoints-summary",level:2},{value:"Health &amp; diagnostics",id:"health--diagnostics",level:2},{value:"Source",id:"source",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.header,{children:(0,c.jsx)(s.h1,{id:"membership-service--graph-schema-and-pip-endpoints",children:"Membership Service \u2014 Graph Schema and PIP Endpoints"})}),"\n",(0,c.jsxs)(s.p,{children:["This page condenses and formalizes the schema and endpoint catalogue. It is sourced from ",(0,c.jsx)(s.code,{children:"docs/source_content/membership_service_schema_and_endpoints.md"}),"."]}),"\n",(0,c.jsx)(s.h2,{id:"system-overview",children:"System overview"}),"\n",(0,c.jsx)(s.mermaid,{value:'graph TB\n  subgraph "Control Plane"\n    IDP["IdP<br/>OAuth TE, RAR, DPoP"]\n    PDP["PDP (AuthZEN)"]\n    MS["Membership<br/>Neo4j"]\n    TR["Tool Registry"]\n    RV["Receipt Vault"]\n  end\n\n  subgraph "Data Plane"\n    ARIA["ARIA Gateway (MCP PEP)"]\n    BFF["LLM BFF"]\n    Tools["MCP Tools / HTTP APIs"]\n  end\n\n  IDP --\x3e|"lookup delegation/budget"| MS\n  IDP --\x3e|"schema pins"| TR\n  ARIA --\x3e|"/access/v1/evaluation"| PDP\n  PDP --\x3e|"PIP lookups"| MS\n  ARIA --\x3e|"tool metadata"| TR\n  ARIA --\x3e|"receipts"| RV\n  BFF --\x3e|"/access/v1/evaluation"| PDP\n  ARIA --\x3e|"enforce constraints"| Tools\n  BFF --\x3e|"call models"| Tools'}),"\n",(0,c.jsx)(s.h2,{id:"graph-model-essentials",children:"Graph model (essentials)"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Nodes: ",(0,c.jsx)(s.code,{children:"Identity"})," (Person, Account, AIAgent, Service, MCPService), ",(0,c.jsx)(s.code,{children:"Group"}),", ",(0,c.jsx)(s.code,{children:"BusinessRole"}),", ",(0,c.jsx)(s.code,{children:"Location"}),", ",(0,c.jsx)(s.code,{children:"Resource"}),", ",(0,c.jsx)(s.code,{children:"RTR"}),", ",(0,c.jsx)(s.code,{children:"Tool"}),", ",(0,c.jsx)(s.code,{children:"Policy"}),", ",(0,c.jsx)(s.code,{children:"Tenant"}),", ",(0,c.jsx)(s.code,{children:"SaaSApp"}),", plus MCP nodes: ",(0,c.jsx)(s.code,{children:"MCPResource"}),", ",(0,c.jsx)(s.code,{children:"MCPPrompt"}),", ",(0,c.jsx)(s.code,{children:"MCPPolicyBinding"})]}),"\n",(0,c.jsxs)(s.li,{children:["Edges: ",(0,c.jsx)(s.code,{children:"BELONGS_TO"}),", ",(0,c.jsx)(s.code,{children:"MEMBER_OF"}),", ",(0,c.jsx)(s.code,{children:"DELEGATES_TO"}),", ",(0,c.jsx)(s.code,{children:"GRANTS_ACCESS"}),", ",(0,c.jsx)(s.code,{children:"HAS_RTR"}),", ",(0,c.jsx)(s.code,{children:"HAS_RTR_AT"}),", ",(0,c.jsx)(s.code,{children:"LOCATED_IN"}),", ",(0,c.jsx)(s.code,{children:"POLICY_REF"}),", ",(0,c.jsx)(s.code,{children:"PROVIDES"}),", ",(0,c.jsx)(s.code,{children:"HAS_CAPABILITY"}),", plus MCP: ",(0,c.jsx)(s.code,{children:"PROVIDES_RESOURCE"}),", ",(0,c.jsx)(s.code,{children:"OFFERS_PROMPT"}),"; recommended: ",(0,c.jsx)(s.code,{children:"CONTROLLED_BY"}),", ",(0,c.jsx)(s.code,{children:"OWNS_RESOURCE"}),", ",(0,c.jsx)(s.code,{children:"USES_TENANT"}),", ",(0,c.jsx)(s.code,{children:"REQUIRES"})]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"neo4j-ddl-selected",children:"Neo4j DDL (selected)"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-cypher",children:"CREATE CONSTRAINT unique_identity_id IF NOT EXISTS FOR (n:Identity) REQUIRE n.id IS UNIQUE;\nCREATE CONSTRAINT unique_delegation_id IF NOT EXISTS FOR ()-[d:DELEGATES_TO]-() REQUIRE d.id IS UNIQUE;\nCREATE CONSTRAINT tool_id_unique IF NOT EXISTS FOR (t:Tool) REQUIRE t.id IS UNIQUE;\nCREATE CONSTRAINT mcp_service_id_unique IF NOT EXISTS FOR (s:MCPService) REQUIRE s.id IS UNIQUE;\n\n// MCP Resources\nCREATE CONSTRAINT mcp_resource_id_unique IF NOT EXISTS FOR (r:MCPResource) REQUIRE r.id IS UNIQUE;\nCREATE INDEX mcp_resource_name_idx IF NOT EXISTS FOR (r:MCPResource) ON (r.name);\nCREATE INDEX mcp_resource_uri_idx IF NOT EXISTS FOR (r:MCPResource) ON (r.uri);\nCREATE INDEX mcp_resource_mime_idx IF NOT EXISTS FOR (r:MCPResource) ON (r.mime_type);\n\n// MCP Prompts\nCREATE CONSTRAINT mcp_prompt_id_unique IF NOT EXISTS FOR (p:MCPPrompt) REQUIRE p.id IS UNIQUE;\nCREATE INDEX mcp_prompt_name_idx IF NOT EXISTS FOR (p:MCPPrompt) ON (p.name);\nCREATE INDEX mcp_prompt_version_idx IF NOT EXISTS FOR (p:MCPPrompt) ON (p.version);\n\n// MCP Policy Binding (reference data for PDP)\nCREATE CONSTRAINT mcp_policy_binding_id_unique IF NOT EXISTS FOR (b:MCPPolicyBinding) REQUIRE b.id IS UNIQUE;\n\nCREATE CONSTRAINT tenant_id_unique IF NOT EXISTS FOR (t:Tenant) REQUIRE t.id IS UNIQUE;\nCREATE CONSTRAINT saasapp_id_unique IF NOT EXISTS FOR (a:SaaSApp) REQUIRE a.id IS UNIQUE;\n"})}),"\n",(0,c.jsx)(s.h2,{id:"pip-surface-stable-v1",children:"PIP surface (stable v1)"}),"\n",(0,c.jsxs)(s.p,{children:["Base prefix: ",(0,c.jsx)(s.code,{children:"/api/v1/pip/membership"})]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"GET /capabilities?user_id=&agent_id="})," \u2192 ",(0,c.jsx)(s.code,{children:'{"capabilities":["mcp:flights:search","mcp:flights:book"]}'})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"GET /delegations?user_id=&agent_id=&status=active"})," \u2192 ",(0,c.jsx)(s.code,{children:'[{"delegation_id":"...","status":"active","max_steps":20,"budget_usd":100.0,"expires_at":"..."}]'})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"GET /data-scope?subject_id=&resource_type="})," \u2192 ",(0,c.jsx)(s.code,{children:'{"tenant_ids":["acme"],"row_filter_sql":"tenant_id IN (\'acme\')","column_mask":{}}'})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"GET /step-up?subject_id="})," \u2192 ",(0,c.jsx)(s.code,{children:'{"mfa_required":false,"level":"strong"}'})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"GET /chain-eligibility?user_id=&agent_id=&tool_id="})," \u2192 ",(0,c.jsx)(s.code,{children:'[{"audience":"okta:app:crm","scopes":["contacts.read","contacts.write"]}]'})]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"pdp-x-membership-call-flow",children:"PDP x Membership call flow"}),"\n",(0,c.jsx)(s.mermaid,{value:"sequenceDiagram\n  participant PDP\n  participant MS as Membership (PIP)\n  PDP->>MS: GET /pip/membership/capabilities?user_id&agent_id\n  MS--\x3e>PDP: capabilities[]\n  PDP->>MS: GET /pip/membership/data-scope?subject_id&resource_type\n  MS--\x3e>PDP: tenant_ids[], row_filter_sql\n  PDP->>MS: GET /pip/membership/step-up?subject_id\n  MS--\x3e>PDP: {mfa_required, level}\n  PDP->>MS: GET /pip/membership/chain-eligibility?user_id&agent_id&tool_id\n  MS--\x3e>PDP: [{audience, scopes[]}]\n  PDP--\x3e>PDP: Merge with policy \u2192 constraints + obligations"}),"\n",(0,c.jsx)(s.h2,{id:"reference-queries-cypher",children:"Reference queries (Cypher)"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-cypher",children:"// Capabilities\nMATCH (u:Identity {id:$user_id})-[:DELEGATES_TO {status:'active'}]->(:AIAgent {id:$agent_id})-[:HAS_CAPABILITY]->(t:Tool)\nRETURN collect(DISTINCT t.id) AS capabilities;\n\n// Data scope\nMATCH (u:Identity {id:$subject_id})-[:BELONGS_TO]->(a:Account)-[:MEMBER_OF*0..2]->(ten:Tenant)\nWITH collect(DISTINCT ten.id) AS tids\nRETURN {tenant_ids: [x IN tids WHERE x IS NOT NULL],\n        row_filter_sql: CASE WHEN size(tids)>0\n            THEN 'tenant_id IN (''' + apoc.text.join(tids, ''',''') + ''')'\n            ELSE '1=0' END,\n        column_mask: {}} AS scope;\n\n// Chain eligibility\nMATCH (u:Identity {id:$user_id})-[:DELEGATES_TO {status:'active'}]->(:AIAgent {id:$agent_id})-[:HAS_CAPABILITY]->(tool:Tool {id:$tool_id})\nMATCH (tool)-[:REQUIRES]->(app:SaaSApp)\nRETURN collect({audience: app.audience, scopes: app.scopes}) AS elig;\n"})}),"\n",(0,c.jsx)(s.h2,{id:"mcp-http-endpoints-summary",children:"MCP HTTP endpoints (summary)"}),"\n",(0,c.jsxs)(s.p,{children:["Base: ",(0,c.jsx)(s.code,{children:"/api/v1/mcp"})]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"POST /services"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /services/{service_id}"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /services/by-name/{name}"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /services"})," \xb7 ",(0,c.jsx)(s.code,{children:"DELETE /services/{service_id}"})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"POST /services/{service_id}/tools"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /services/{service_id}/tools"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /tools/{tool_id}"})," \xb7 ",(0,c.jsx)(s.code,{children:"GET /tools/by-name/{tool_name}"})," \xb7 ",(0,c.jsx)(s.code,{children:"DELETE /tools/{tool_id}"})]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"POST /services/{service_id}/resources"})," \xb7 ",(0,c.jsx)(s.code,{children:"POST /services/{service_id}/prompts"})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"health--diagnostics",children:"Health & diagnostics"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsx)(s.li,{children:(0,c.jsx)(s.code,{children:"GET /api/v1/health"})}),"\n",(0,c.jsxs)(s.li,{children:["Counts and relationships: ",(0,c.jsx)(s.code,{children:"node-label-counts"}),", ",(0,c.jsx)(s.code,{children:"relationship-type-counts"}),", ",(0,c.jsx)(s.code,{children:"orphan-node-counts"})]}),"\n",(0,c.jsxs)(s.li,{children:["Graph utilities: ",(0,c.jsx)(s.code,{children:"relationship-connections"}),", ",(0,c.jsx)(s.code,{children:"related-nodes"}),", ",(0,c.jsx)(s.code,{children:"shortest-path"})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Full source copy: ",(0,c.jsx)(s.code,{children:"docs/source_content/membership_service_schema_and_endpoints.md"})]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);
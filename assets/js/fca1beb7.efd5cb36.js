"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4242],{2052:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"services/bff/how-to/health-readiness","title":"Health and Readiness Probes","description":"Implementation (from architecture docs)","source":"@site/docs/services/bff/how-to/health-readiness.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/health-readiness","permalink":"/empowernow_docs/docs/services/bff/how-to/health-readiness","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/health-readiness.md","tags":[],"version":"current","frontMatter":{"title":"Health and Readiness Probes"},"sidebar":"tutorialSidebar","previous":{"title":"FIPS startup guard","permalink":"/empowernow_docs/docs/services/bff/how-to/fips-startup-guard"},"next":{"title":"Incident Runbooks \u2014 Common Scenarios","permalink":"/empowernow_docs/docs/services/bff/how-to/incident-runbooks"}}');var o=n(74848),r=n(28453);const i={title:"Health and Readiness Probes"},c=void 0,a={},l=[];function d(e){const s={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:"Implementation (from architecture docs)"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"/health"})," endpoint returns component checks (Redis, IdP) and overall status with 200 or 503."]}),"\n",(0,o.jsxs)(s.li,{children:["Use as Kubernetes liveness/readiness probe; expose in Traefik ",(0,o.jsx)(s.code,{children:"bff-service"})," health check."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Example probe (K8s)"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"livenessProbe:\r\n  httpGet:\r\n    path: /health\r\n    port: 8000\r\n  initialDelaySeconds: 30\r\nreadinessProbe:\r\n  httpGet:\r\n    path: /health\r\n    port: 8000\r\n  initialDelaySeconds: 5\n"})}),"\n",(0,o.jsx)(s.p,{children:"Graceful shutdown"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"On shutdown, stop accepting new requests, allow inflight to complete, close Redis and HTTP clients."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const o={},r=t.createContext(o);function i(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);
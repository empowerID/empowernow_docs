"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[2057],{1377:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"services/nowconnect/how-to/premise-agent","title":"premise-agent","description":"NowConnect Premise Agent","source":"@site/docs/services/nowconnect/how-to/premise-agent.md","sourceDirName":"services/nowconnect/how-to","slug":"/services/nowconnect/how-to/premise-agent","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/premise-agent","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/how-to/premise-agent.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Operational validation & health","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/operational-validation-health"},"next":{"title":"testing-guide","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/testing-guide"}}');var s=r(74848),t=r(28453);const c={},i=void 0,l={},d=[{value:"NowConnect Premise Agent",id:"nowconnect-premise-agent",level:2},{value:"Configuration (environment)",id:"configuration-environment",level:3},{value:"Run with Docker",id:"run-with-docker",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"systemd (Linux)",id:"systemd-linux",level:3},{value:"Windows service (NSSM)",id:"windows-service-nssm",level:3},{value:"Kubernetes",id:"kubernetes",level:3},{value:"Observability",id:"observability",level:3},{value:"Security",id:"security",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"nowconnect-premise-agent",children:"NowConnect Premise Agent"}),"\n",(0,s.jsx)(n.p,{children:"Lightweight on\u2011prem agent that maintains an outbound WebSocket to the NowConnect Cloud Gateway and proxies traffic to local services identified as connectors."}),"\n",(0,s.jsx)(n.h3,{id:"configuration-environment",children:"Configuration (environment)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_AGENT_URL (required)"}),": ",(0,s.jsx)(n.code,{children:"wss://<gateway>/tunnel"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_AGENT_ID (required)"}),": unique agent identifier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_TOKEN_FILE (recommended)"}),": path to bearer token file (JWT); read at connect"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_CONNECTORS (required)"}),": comma list of connector names, e.g. ",(0,s.jsx)(n.code,{children:"ldap,db"})]}),"\n",(0,s.jsxs)(n.li,{children:["For each connector name:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NC_TARGET_<name>_HOST"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NC_TARGET_<name>_PORT"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_LOG_LEVEL (optional)"}),": ",(0,s.jsx)(n.code,{children:"DEBUG|INFO|WARNING|ERROR"})," (default ",(0,s.jsx)(n.code,{children:"INFO"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_LOG_FORMAT (optional)"}),": ",(0,s.jsx)(n.code,{children:"plain|json"})," (default ",(0,s.jsx)(n.code,{children:"plain"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_TRUST_ENV (optional)"}),": ",(0,s.jsx)(n.code,{children:"true"})," to allow system proxy settings via aiohttp (default ",(0,s.jsx)(n.code,{children:"false"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"NC_HEALTH_HOST/NC_HEALTH_PORT (optional)"}),": TCP health server bind (default ",(0,s.jsx)(n.code,{children:"0.0.0.0:8090"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"run-with-docker",children:"Run with Docker"}),"\n",(0,s.jsx)(n.p,{children:"Build:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t nowconnect-premise:0.1.0 .\n"})}),"\n",(0,s.jsx)(n.p,{children:"Agent Dockerfile:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'FROM python:3.11-slim\r\n\r\nWORKDIR /app\r\n\r\nCOPY pyproject.toml /app/pyproject.toml\r\nCOPY src /app/src\r\n\r\nRUN pip install --no-cache-dir -e .\r\n\r\nENV PYTHONUNBUFFERED=1\r\n\r\nENTRYPOINT ["python", "-m", "nowconnect_agent"]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run (Linux host networking example):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -d --name nowconnect-agent --restart=always \\\r\n  --network host \\\r\n  -v $(pwd)/secrets/agent.token:/secrets/token:ro \\\r\n  -e NC_AGENT_URL=wss://gateway.example.com/tunnel \\\r\n  -e NC_AGENT_ID=agent-foo-01 \\\r\n  -e NC_TOKEN_FILE=/secrets/token \\\r\n  -e NC_CONNECTORS=ldap \\\r\n  -e NC_TARGET_ldap_HOST=127.0.0.1 \\\r\n  -e NC_TARGET_ldap_PORT=389 \\\r\n  nowconnect-premise:0.1.0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note for Windows/macOS: without ",(0,s.jsx)(n.code,{children:"--network host"}),", use ",(0,s.jsx)(n.code,{children:"host.docker.internal"})," or the LAN IP for targets."]}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," and ",(0,s.jsx)(n.code,{children:"nowconnect.env.example"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example compose:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: "3.8"\r\nservices:\r\n  nowconnect-agent:\r\n    build: .\r\n    image: nowconnect-premise:0.1.0\r\n    restart: always\r\n    network_mode: host\r\n    env_file:\r\n      - nowconnect.env\r\n    volumes:\r\n      - ./secrets/agent.token:/secrets/token:ro\n'})}),"\n",(0,s.jsx)(n.p,{children:"Example env file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Core connection\r\nNC_AGENT_URL=wss://gateway.example.com/tunnel\r\nNC_AGENT_ID=agent-foo-01\r\n\r\n# Token file path inside container or on host depending on deployment\r\nNC_TOKEN_FILE=/secrets/token\r\n\r\n# Logging and proxy behavior\r\nNC_LOG_LEVEL=INFO\r\nNC_TRUST_ENV=false\r\nNC_LOG_FORMAT=plain\r\n\r\n# Health server\r\nNC_HEALTH_HOST=0.0.0.0\r\nNC_HEALTH_PORT=8090\r\n\r\n# Connectors definition\r\nNC_CONNECTORS=ldap\r\nNC_TARGET_ldap_HOST=127.0.0.1\r\nNC_TARGET_ldap_PORT=389\n"})}),"\n",(0,s.jsx)(n.h3,{id:"systemd-linux",children:"systemd (Linux)"}),"\n",(0,s.jsxs)(n.p,{children:["Install Python 3.11 and create ",(0,s.jsx)(n.code,{children:"/etc/nowconnect/agent.env"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"NC_AGENT_URL=wss://gateway.example.com/tunnel\r\nNC_AGENT_ID=agent-foo-01\r\nNC_TOKEN_FILE=/etc/nowconnect/agent.token\r\nNC_CONNECTORS=ldap\r\nNC_TARGET_ldap_HOST=127.0.0.1\r\nNC_TARGET_ldap_PORT=389\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Unit file ",(0,s.jsx)(n.code,{children:"/etc/systemd/system/nowconnect-agent.service"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"[Unit]\r\nDescription=NowConnect Premise Agent\r\nAfter=network-online.target\r\n\r\n[Service]\r\nEnvironmentFile=/etc/nowconnect/agent.env\r\nExecStart=/usr/bin/python3 -m nowconnect_agent\r\nRestart=always\r\nRestartSec=2\r\nWorkingDirectory=/var/lib/nowconnect\r\nUser=nowconnect\r\nGroup=nowconnect\r\n\r\n[Install]\r\nWantedBy=multi-user.target\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\r\nsudo systemctl enable --now nowconnect-agent\n"})}),"\n",(0,s.jsx)(n.h3,{id:"windows-service-nssm",children:"Windows service (NSSM)"}),"\n",(0,s.jsxs)(n.p,{children:["Assuming Python at ",(0,s.jsx)(n.code,{children:"C:\\\\Python311"})," and work dir ",(0,s.jsx)(n.code,{children:"C:\\\\nowconnect"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bat",children:'nssm install NowConnectAgent "C:\\\\Python311\\\\python.exe" "-m nowconnect_agent"\r\nnssm set NowConnectAgent AppDirectory "C:\\\\nowconnect"\r\nnssm set NowConnectAgent AppEnvironmentExtra "NC_AGENT_URL=wss://gateway.example.com/tunnel" "NC_AGENT_ID=agent-foo-01" "NC_TOKEN_FILE=C:\\\\nowconnect\\\\agent.token" "NC_CONNECTORS=ldap" "NC_TARGET_ldap_HOST=127.0.0.1" "NC_TARGET_ldap_PORT=389"\r\nnssm set NowConnectAgent Start SERVICE_AUTO_START\n'})}),"\n",(0,s.jsx)(n.h3,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,s.jsxs)(n.p,{children:["A minimal Deployment is provided in ",(0,s.jsx)(n.code,{children:"k8s/deployment.yaml"}),". For node\u2011local access, consider a DaemonSet and appropriate networking."]}),"\n",(0,s.jsx)(n.h3,{id:"observability",children:"Observability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Logs: stdout/stderr; control with ",(0,s.jsx)(n.code,{children:"NC_LOG_LEVEL"})," and ",(0,s.jsx)(n.code,{children:"NC_LOG_FORMAT"})," (",(0,s.jsx)(n.code,{children:"json"})," recommended for k8s)"]}),"\n",(0,s.jsxs)(n.li,{children:["Proxy: set ",(0,s.jsx)(n.code,{children:"NC_TRUST_ENV=true"})," and configure OS env (",(0,s.jsx)(n.code,{children:"HTTP_PROXY"}),", ",(0,s.jsx)(n.code,{children:"HTTPS_PROXY"}),", etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:["Health: TCP server on ",(0,s.jsx)(n.code,{children:"NC_HEALTH_HOST:NC_HEALTH_PORT"})," (defaults to ",(0,s.jsx)(n.code,{children:"0.0.0.0:8090"}),"). k8s probes use ",(0,s.jsx)(n.code,{children:"tcpSocket"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Restart behavior: the process reconnects on failure; supervise with container restart policies or service managers"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Always use ",(0,s.jsx)(n.code,{children:"wss://"})," for ",(0,s.jsx)(n.code,{children:"NC_AGENT_URL"})]}),"\n",(0,s.jsx)(n.li,{children:"Mount token file read\u2011only; rotate by replacing file and restarting"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var o=r(96540);const s={},t=o.createContext(s);function c(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);
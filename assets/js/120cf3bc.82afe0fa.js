"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8205],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(96540);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}},47274:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"services/bff/explanation/authorization","title":"Authorization Model (PDP, Mapping, Caching)","description":"What the BFF authorizes","source":"@site/docs/services/bff/explanation/authorization.md","sourceDirName":"services/bff/explanation","slug":"/services/bff/explanation/authorization","permalink":"/empowernow_docs/docs/services/bff/explanation/authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/explanation/authorization.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Authorization Model (PDP, Mapping, Caching)","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Visual Guide","permalink":"/empowernow_docs/docs/services/bff/explanation/bff-visual-guide"},"next":{"title":"Backend\u2011for\u2011Frontend (BFF) Design Pattern","permalink":"/empowernow_docs/docs/services/bff/explanation/bff-design-pattern"}}');var s=i(74848),o=i(28453);const t={title:"Authorization Model (PDP, Mapping, Caching)",sidebar_position:3},a=void 0,c={},d=[];function l(e){const n={code:"code",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"What the BFF authorizes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Protects API calls using a Policy Decision Point (PDP) following AuthZEN semantics"}),"\n",(0,s.jsx)(n.li,{children:"Maps incoming requests to resource/action using config rules"}),"\n",(0,s.jsx)(n.li,{children:"Caches allow/deny decisions with separate TTLs to reduce latency and load"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"High\u2011level flow"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  autonumber\r\n  participant Client\r\n  participant BFF\r\n  participant Mapper as PathMapper\r\n  participant PDP as PDP Service\r\n  Client->>BFF: GET /api/crud/forms/123\r\n  BFF->>Mapper: map path \u2192 (resource=form, id=123, action=read)\r\n  alt cached decision\r\n    BFF--\x3e>Client: 200 (cached allow)\r\n  else cache miss\r\n    BFF->>PDP: POST /v1/evaluation {subject, resource, action, context}\r\n    PDP--\x3e>BFF: {decision: true, context: {...}}\r\n    BFF--\x3e>Client: 200 and caches decision\r\n  end"}),"\n",(0,s.jsx)(n.p,{children:"Where it\u2019s implemented"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Mapping: ",(0,s.jsx)(n.code,{children:"services/path_mapper.py"})," reads ",(0,s.jsx)(n.code,{children:"endpoint_map"})," from ",(0,s.jsx)(n.code,{children:"ServiceConfigs/BFF/config/pdp.yaml"}),", compiles regex rules, and extracts URL params and JSON body fields (via simple ",(0,s.jsx)(n.code,{children:"$.field"})," JSONPath) into ",(0,s.jsx)(n.code,{children:"props"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Decision: ",(0,s.jsx)(n.code,{children:"services/pdp_client.py"})," builds an AuthZEN request, retrieves a bearer token, calls PDP, handles errors, and caches results in Redis when configured."]}),"\n",(0,s.jsxs)(n.li,{children:["Enforcement: ",(0,s.jsx)(n.code,{children:"core/permissions.py"})," provides dependencies (",(0,s.jsx)(n.code,{children:"has_permission"}),", ",(0,s.jsx)(n.code,{children:"requires_auth"}),") and helpers to assemble the authorization context (headers, query, body subset, roles/permissions, correlation ID)."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Caching"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Allow and deny decisions are cached with separate TTLs from ",(0,s.jsx)(n.code,{children:"pdp.yaml"})," (",(0,s.jsx)(n.code,{children:"cache.ttl_allow"}),", ",(0,s.jsx)(n.code,{children:"cache.ttl_deny"}),")."]}),"\n",(0,s.jsx)(n.li,{children:"Keys include subject, subject type, resource type/ID, and action; special characters are base64\u2011encoded."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Examples (mapping snippets)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'endpoint_map:\r\n  /api/crud/workflow/start:\r\n    POST:\r\n      resource: workflow\r\n      action: execute\r\n      props:\r\n        workflow_name: "$.workflow_name"\r\n\r\n  /api/crud/workflow/status/{execution_id}:\r\n    GET:\r\n      resource: workflow_execution\r\n      id_from: "{execution_id}"\r\n      action: read\n'})}),"\n",(0,s.jsx)(n.p,{children:"Quick validate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -I --cookie "_eid_sid=..." https://.../api/crud/workflow/status/abc-123\r\n# Expect 200/403 depending on PDP decision; see How\u2011to \u2192 endpoint-map-validation\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);
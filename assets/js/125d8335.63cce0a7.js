"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3394],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}},39082:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"services/nowconnect/how-to/testing-guide","title":"testing-guide","description":"Testing Guide (Matrix, Fault Injection, Acceptance)","source":"@site/docs/services/nowconnect/how-to/testing-guide.md","sourceDirName":"services/nowconnect/how-to","slug":"/services/nowconnect/how-to/testing-guide","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/testing-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/how-to/testing-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"premise-agent","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/premise-agent"},"next":{"title":"upgrade-rollback","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/upgrade-rollback"}}');var r=t(74848),s=t(28453);const c={},o=void 0,d={},l=[{value:"Testing Guide (Matrix, Fault Injection, Acceptance)",id:"testing-guide-matrix-fault-injection-acceptance",level:2},{value:"Test matrix",id:"test-matrix",level:3},{value:"Acceptance criteria",id:"acceptance-criteria",level:3},{value:"Fault injection scenarios",id:"fault-injection-scenarios",level:3},{value:"Perf pipeline (example)",id:"perf-pipeline-example",level:3},{value:"Repro kits",id:"repro-kits",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"testing-guide-matrix-fault-injection-acceptance",children:"Testing Guide (Matrix, Fault Injection, Acceptance)"}),"\n",(0,r.jsx)(n.p,{children:"This guide defines a test matrix, acceptance criteria, and fault-injection scenarios for NowConnect Cloud and Premise Agent."}),"\n",(0,r.jsx)(n.h3,{id:"test-matrix",children:"Test matrix"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Dimension"}),(0,r.jsx)(n.th,{children:"Values"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Platforms"}),(0,r.jsx)(n.td,{children:"Linux containers (cloud/agent), Windows/macOS agent where applicable"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TLS versions"}),(0,r.jsx)(n.td,{children:"1.2, 1.3 (prefer 1.3 where supported)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Proxies"}),(0,r.jsxs)(n.td,{children:["None, corporate proxy (",(0,r.jsx)(n.code,{children:"NC_TRUST_ENV=true"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Loss/latency"}),(0,r.jsx)(n.td,{children:"0\u20132% loss; 5\u2013100ms RTT; jitter \xb120ms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HA modes"}),(0,r.jsx)(n.td,{children:"off, shadow, active"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"IdP"}),(0,r.jsx)(n.td,{children:"JWKS online/offline; key rotation; invalid aud"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PDP (optional)"}),(0,r.jsx)(n.td,{children:"allow, deny, timeout (fail-open/off)"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"acceptance-criteria",children:"Acceptance criteria"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Latency: added overhead \u2264 configurable SLO (e.g., LDAP p95 < 20ms intra-region)."}),"\n",(0,r.jsx)(n.li,{children:"Error budget: < 0.1% connection failures under nominal load."}),"\n",(0,r.jsx)(n.li,{children:"Reconnect behavior: agent recovers within 5s median after network flap."}),"\n",(0,r.jsx)(n.li,{children:"HA active: cross-replica delivery succeeds with no data loss; FIN/RST handled correctly."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"fault-injection-scenarios",children:"Fault injection scenarios"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Mesh partition: drop ",(0,r.jsx)(n.code,{children:"/mesh"})," path at ingress.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Expect: local-only flows succeed; cross-replica fail; ",(0,r.jsx)(n.code,{children:"/readyz"})," degraded in active mode."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Redis outage: stop Redis or block port.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Expect: local-only mode; ",(0,r.jsx)(n.code,{children:"/readyz"})," degraded in active; registry sweeper resumes after restore."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["TLS failure: present wrong CA or expired cert for ",(0,r.jsx)(n.code,{children:"/mesh"}),".","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Expect: TLS errors; mesh reconnect loops; alerts fire."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["JWT issues: wrong ",(0,r.jsx)(n.code,{children:"aud"}),", expired token, revoked key.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Expect: WS upgrade rejects; agent retries; alert on auth failures."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["PDP timeout/deny (if enabled): return 500ms timeout or explicit deny.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Expect: default deny unless ",(0,r.jsx)(n.code,{children:"fail_open=true"}),"; log decision."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"perf-pipeline-example",children:"Perf pipeline (example)"}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart LR\r\n  LG[Load Gen (LDAP)] --\x3e NC[NowConnect]\r\n  NC --\x3e MET[Prometheus]\r\n  MET --\x3e EVA[SLO Eval]\r\n  EVA --\x3e REP[Report]"}),"\n",(0,r.jsx)(n.h3,{id:"repro-kits",children:"Repro kits"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sample IdP: provide JWKS and token generator."}),"\n",(0,r.jsx)(n.li,{children:"Synthetic connectors: echo TCP and mock LDAP."}),"\n",(0,r.jsxs)(n.li,{children:["Packet capture: run ",(0,r.jsx)(n.code,{children:"tcpdump"}),"/",(0,r.jsx)(n.code,{children:"wireshark"})," on agent host for troubleshooting."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
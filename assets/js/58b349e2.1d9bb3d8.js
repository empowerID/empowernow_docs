"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8053],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var a=r(96540);const t={},o=a.createContext(t);function i(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(o.Provider,{value:n},e.children)}},97443:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"services/nowconnect/explanation/visual-guide","title":"visual-guide","description":"NowConnect \u2014 Visual Guide","source":"@site/docs/services/nowconnect/explanation/visual-guide.md","sourceDirName":"services/nowconnect/explanation","slug":"/services/nowconnect/explanation/visual-guide","permalink":"/empowernow_docs/docs/services/nowconnect/explanation/visual-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/explanation/visual-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Metrics and reliability","permalink":"/empowernow_docs/docs/services/nowconnect/explanation/metrics-and-reliability"},"next":{"title":"compliance-mapping","permalink":"/empowernow_docs/docs/services/nowconnect/reference/compliance-mapping"}}');var t=r(74848),o=r(28453);const i={},c=void 0,s={},l=[{value:"NowConnect \u2014 Visual Guide",id:"nowconnect--visual-guide",level:2},{value:"Components and Data Flow",id:"components-and-data-flow",level:3},{value:"Tunnel Establishment (Auth + HELLO)",id:"tunnel-establishment-auth--hello",level:3},{value:"Handling a New TCP Connection (Multiplexed stream)",id:"handling-a-new-tcp-connection-multiplexed-stream",level:3},{value:"Connection Lifecycle (per <code>cid</code>)",id:"connection-lifecycle-per-cid",level:3},{value:"Mapping Many Backends (example: LDAPS)",id:"mapping-many-backends-example-ldaps",level:3},{value:"Health and Readiness",id:"health-and-readiness",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"nowconnect--visual-guide",children:"NowConnect \u2014 Visual Guide"}),"\n",(0,t.jsx)(n.p,{children:"This page gives a visual overview of how NowConnect works, from tunnel setup to data flow and connection lifecycle."}),"\n",(0,t.jsx)(n.h3,{id:"components-and-data-flow",children:"Components and Data Flow"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart LR\r\n  CH[Cloud Hub]\r\n  L[Connector listeners]\r\n  MET[Prometheus metrics]\r\n  PDP[PDP optional]\r\n  IDP[IdP JWKS]\r\n  AG[Premise Agent]\r\n  TGT[On-prem targets]\r\n  CLI[Client]\r\n\r\n  CLI --\x3e|TCP ports| L\r\n  L --\x3e CH\r\n  AG -- wss tunnel --\x3e CH\r\n  CH --\x3e|JWT verify| IDP\r\n  CH --\x3e|authorize?| PDP\r\n  CH --\x3e MET\r\n  AG --\x3e|TCP| TGT"}),"\n",(0,t.jsx)(n.h3,{id:"tunnel-establishment-auth--hello",children:"Tunnel Establishment (Auth + HELLO)"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant AG as Agent\r\n  participant CH as Cloud Hub\r\n  participant IDP as IdP (JWKS)\r\n\r\n  AG->>CH: WS upgrade (Authorization: Bearer JWT)\r\n  CH--\x3e>IDP: Fetch JWKS (cached)\r\n  IDP--\x3e>CH: JWKS keys\r\n  CH->>CH: Validate JWT (aud, signature)\r\n  CH--\x3e>AG: 101 Switching Protocols\r\n  AG->>CH: HELLO {agent_id, connectors, ver}\r\n  CH->>CH: Reconcile agent_id with JWT claim\r\n  CH--\x3e>AG: HELLO_ACK"}),"\n",(0,t.jsx)(n.h3,{id:"handling-a-new-tcp-connection-multiplexed-stream",children:"Handling a New TCP Connection (Multiplexed stream)"}),"\n",(0,t.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant CLI as Client\r\n  participant CH as Cloud Hub\r\n  participant AG as Agent\r\n  participant TGT as Target (on-prem)\r\n\r\n  CLI->>CH: TCP connect to listener (e.g., 389)\r\n  CH->>AG: OPEN {cid, connector}\r\n  AG->>TGT: TCP connect host:port (from connector map)\r\n  alt connect ok\r\n    CH->>AG: DATA {cid, seq}\r\n    AG->>CH: DATA {cid, seq}\r\n    CH->>CLI: bytes\r\n    opt Half-close\r\n      CLI--\x3e>CH: EOF\r\n      CH->>AG: FIN {cid, dir=c2a}\r\n      AG--\x3e>TGT: write EOF\r\n    end\r\n    opt Target EOF\r\n      TGT--\x3e>AG: EOF\r\n      AG->>CH: FIN {cid, dir=a2c}\r\n    end\r\n    CH->>CH: Close when both FINs observed\r\n  else connect failed\r\n    AG->>CH: RST {cid, err=connect_failed}\r\n    CH--\x3e>CLI: close socket\r\n  end"}),"\n",(0,t.jsxs)(n.h3,{id:"connection-lifecycle-per-cid",children:["Connection Lifecycle (per ",(0,t.jsx)(n.code,{children:"cid"}),")"]}),"\n",(0,t.jsx)(n.mermaid,{value:"stateDiagram-v2\r\n  [*] --\x3e Open\r\n  Open --\x3e Data: OPEN sent/acknowledged\r\n  Data --\x3e HalfC2A: FIN(dir=c2a)\r\n  Data --\x3e HalfA2C: FIN(dir=a2c)\r\n  HalfC2A --\x3e Closed: FIN(dir=a2c)\r\n  HalfA2C --\x3e Closed: FIN(dir=c2a)\r\n  Data --\x3e Closed: RST or error\r\n  Data --\x3e Closed: Idle sweeper triggers FIN(dir=c2a) \u2192 peer FIN"}),"\n",(0,t.jsx)(n.h3,{id:"mapping-many-backends-example-ldaps",children:"Mapping Many Backends (example: LDAPS)"}),"\n",(0,t.jsx)(n.mermaid,{value:"flowchart TB\r\n  subgraph Cloud Hub\r\n    L1[listener 6361 \u2192 connector ldaps_dc1]\r\n    L2[listener 6362 \u2192 connector ldaps_dc2]\r\n    L3[listener 6363 \u2192 connector ldaps_dc3]\r\n  end\r\n\r\n  subgraph Agent targets\r\n    C1[ldaps_dc1 \u2192 dc1.corp.local:636]\r\n    C2[ldaps_dc2 \u2192 dc2.corp.local:636]\r\n    C3[ldaps_dc3 \u2192 dc3.corp.local:636]\r\n  end\r\n\r\n  L1 --\x3e C1\r\n  L2 --\x3e C2\r\n  L3 --\x3e C3"}),"\n",(0,t.jsx)(n.h3,{id:"health-and-readiness",children:"Health and Readiness"}),"\n",(0,t.jsx)(n.mermaid,{value:'flowchart LR\r\n  AG[Agent] -- TCP health --\x3e H[(NC_HEALTH_HOST:PORT)]\r\n  H --\x3e|"OK (pre\u2011ACK) / READY (post\u2011ACK)"| AG\r\n  CH[Cloud Hub] --\x3e /healthz\r\n  CH --\x3e /readyz\r\n  CH --\x3e /metrics'}),"\n",(0,t.jsx)(n.p,{children:"Tips:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Keep ",(0,t.jsx)(n.code,{children:"max_ws_payload"})," modest (e.g., 8KB) and queues bounded for stable memory."]}),"\n",(0,t.jsx)(n.li,{children:"Enable connector scopes and PDP only when needed; both are feature\u2011flagged."}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"NC_CA_BUNDLE"})," and ",(0,t.jsx)(n.code,{children:"NC_TRUST_ENV=true"})," for corporate proxy/TLS interception environments."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
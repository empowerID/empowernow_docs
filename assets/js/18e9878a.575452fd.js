"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[108],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var t=r(96540);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}},37801:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"services/crud-service/explanation/user-interaction-resume","title":"user-interaction-resume","description":"User interaction and resume","source":"@site/docs/services/crud-service/explanation/user-interaction-resume.md","sourceDirName":"services/crud-service/explanation","slug":"/services/crud-service/explanation/user-interaction-resume","permalink":"/empowernow_docs/docs/services/crud-service/explanation/user-interaction-resume","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/explanation/user-interaction-resume.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"security","permalink":"/empowernow_docs/docs/services/crud-service/explanation/security"},"next":{"title":"Reference","permalink":"/empowernow_docs/docs/category/reference"}}');var s=r(74848),i=r(28453);const c={},a=void 0,o={},u=[{value:"User interaction and resume",id:"user-interaction-and-resume",level:3},{value:"Sequence",id:"sequence",level:4}];function d(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"user-interaction-and-resume",children:"User interaction and resume"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"WAITING"}),": ",(0,s.jsx)(n.code,{children:"USER_INTERACTION"})," nodes create a task and set status to WAITING; the workflow returns a payload instructing the client how to proceed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Resume"}),": submit data to the resume endpoint, the engine restores state (via checkpoint), processes the input, clears WAITING, and continues execution."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"sequence",children:"Sequence"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant Exec as Executor\r\n  participant DB as Task Store\r\n  participant UI as Client/UI\r\n\r\n  Exec->>DB: Create task (form/approval/LLM)\r\n  Exec--\x3e>UI: WAITING payload (task details)\r\n  UI->>DB: User submits input\r\n  UI->>Exec: Resume(node_id, data)\r\n  Exec->>DB: Restore from checkpoint\r\n  Exec->>Exec: Apply input, activate edges\r\n  Exec--\x3e>UI: Next WAITING or final result"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Task types: FORM, APPROVAL, LLM, BULK."}),"\n",(0,s.jsx)(n.li,{children:"Transition manager keeps DB task state and node status in sync."}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5542],{15852:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"source_content/mcp_opt_in_annotations","title":"mcp_opt_in_annotations","description":"MCP opt-in annotations for CRUDService systems and workflows","source":"@site/docs/source_content/mcp_opt_in_annotations.md","sourceDirName":"source_content","slug":"/source_content/mcp_opt_in_annotations","permalink":"/empowernow_docs/docs/source_content/mcp_opt_in_annotations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/mcp_opt_in_annotations.md","tags":[],"version":"current","frontMatter":{}}');var i=r(74848),o=r(28453);const t={},c=void 0,l={},a=[{value:"MCP opt-in annotations for CRUDService systems and workflows",id:"mcp-opt-in-annotations-for-crudservice-systems-and-workflows",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"mcp-opt-in-annotations-for-crudservice-systems-and-workflows",children:"MCP opt-in annotations for CRUDService systems and workflows"}),"\n",(0,i.jsxs)(n.p,{children:["This guide shows how to expose selected commands and workflows as MCP Tools with a tiny ",(0,i.jsx)(n.code,{children:"mcp"})," block, without duplicating schemas. It also shows how to advertise read-only GET endpoints as MCP Resources via a simple ",(0,i.jsx)(n.code,{children:"resource"})," sub-block."]}),"\n",(0,i.jsx)(n.p,{children:"Key principles"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Minimal annotations only when you want a command/workflow to be published"}),"\n",(0,i.jsxs)(n.li,{children:["No schema duplication: inputSchema is derived from your existing YAML (required_params, templated path variables, and Jinja ",(0,i.jsx)(n.code,{children:"params.*"})," usage)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For workflows, inputSchema is taken from the workflow's ",(0,i.jsx)(n.code,{children:"inputs"})," object when present; otherwise a permissive object is used."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Short names: the generator enforces a \u226450 character tool name with stable hash suffix when needed"}),"\n",(0,i.jsxs)(n.li,{children:["Publish cap: set ",(0,i.jsx)(n.code,{children:"MCP_MAX_TOOLS"})," (default 80) to avoid huge catalogs","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Health tool is always listed as both ",(0,i.jsx)(n.code,{children:"system.health"})," and ",(0,i.jsx)(n.code,{children:"system_health"})," for client compatibility"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Virtual views: tools can be discovered within filtered catalogs defined in ",(0,i.jsx)(n.code,{children:"mcp_virtual_servers.yaml"}),"; use annotations like ",(0,i.jsx)(n.code,{children:"provider"}),", ",(0,i.jsx)(n.code,{children:"instance"}),", and ",(0,i.jsx)(n.code,{children:"tags"})," to control inclusion."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"MCP block fields"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"enabled: true|false (required to publish)"}),"\n",(0,i.jsx)(n.li,{children:"name: short, stable tool name (optional; a compact fallback is derived)"}),"\n",(0,i.jsx)(n.li,{children:"description: overrides the command/workflow description (optional)"}),"\n",(0,i.jsx)(n.li,{children:"annotations: arbitrary metadata (e.g., tags)"}),"\n",(0,i.jsxs)(n.li,{children:["resource: optional block to publish an MCP Resource or Resource Template for GET-style reads","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["uriTemplate: template with variables (e.g., ",(0,i.jsx)(n.code,{children:".../users/{SystemIdentifier}"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"or uri: fixed URI"}),"\n",(0,i.jsx)(n.li,{children:"name, description, mimeType: resource metadata"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"What the server derives automatically"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["inputSchema: built from ",(0,i.jsx)(n.code,{children:"required_params"}),", path placeholders in ",(0,i.jsx)(n.code,{children:"endpoint"}),", and all ",(0,i.jsx)(n.code,{children:"params.*"})," references found in the command. All properties default to ",(0,i.jsx)(n.code,{children:"string"}),", and the schema allows additionalProperties to remain permissive."]}),"\n",(0,i.jsxs)(n.li,{children:["description: from ",(0,i.jsx)(n.code,{children:"mcp.description"})," or the command/workflow ",(0,i.jsx)(n.code,{children:"description"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["name: from ",(0,i.jsx)(n.code,{children:"mcp.name"}),", otherwise ",(0,i.jsx)(n.code,{children:"<system>.<object>.<action>"})," compacted and capped to \u226450 chars."]}),"\n",(0,i.jsxs)(n.li,{children:["annotations: allowlisted keys like ",(0,i.jsx)(n.code,{children:"provider"}),", ",(0,i.jsx)(n.code,{children:"instance"}),", ",(0,i.jsx)(n.code,{children:"env"}),", and ",(0,i.jsx)(n.code,{children:"tags"})," are used by virtual view filters."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Environment variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"MCP_MAX_TOOLS: hard cap for number of published tools (default: 80)"}),"\n",(0,i.jsxs)(n.li,{children:["MCP_LOOPBACK_ONLY_HEALTH: set to ",(0,i.jsx)(n.code,{children:"true"})," to publish only the built-in ",(0,i.jsx)(n.code,{children:"system.health"})," tool"]}),"\n",(0,i.jsx)(n.li,{children:"MCP_TOOL_NAME_CAP: override name cap to satisfy client UI limits"}),"\n",(0,i.jsxs)(n.li,{children:["MCP_DUPLICATE_POLICY: duplicate handling for final names (",(0,i.jsx)(n.code,{children:"fail|keep_first|keep_last|drop"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"MCP_ENABLE_ROUTER: include optional short-name router tools (some views may enable this explicitly)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Examples using real command definitions"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Entra: account.get_user_by_id (Tool + Resource Template)\r\nAdd this under ",(0,i.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/system_types/azure_system.yaml"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'object_types:\r\n  account:\r\n    commands:\r\n      get_user_by_id:\r\n        endpoint: "/users/{{ params.SystemIdentifier }}"\r\n        method: GET\r\n        # Publish as MCP Tool (opt-in)\r\n        mcp:\r\n          enabled: true\r\n          name: "entra.account.get_by_id"\r\n          description: "Get a user by ID"\r\n          annotations:\r\n            tags: ["read","directory","account"]\r\n          # Also publish a Resource Template for HTTP views\r\n          resource:\r\n            uriTemplate: "https://api.ocg.labs.empowernow.ai/users/{SystemIdentifier}"\r\n            name: "User by ID"\r\n            description: "HTTP view of the user object"\r\n            mimeType: "application/json"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Entra: group.get_group_by_id (Resource Template only)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'object_types:\r\n  group:\r\n    commands:\r\n      get_group_by_id:\r\n        endpoint: "/groups/{{ params.SystemIdentifier }}"\r\n        method: GET\r\n        mcp:\r\n          enabled: true\r\n          name: "entra.group.get_by_id"\r\n          description: "Get a group by ID"\r\n          annotations:\r\n            tags: ["read","directory","group"]\r\n          resource:\r\n            uriTemplate: "https://api.ocg.labs.empowernow.ai/groups/{SystemIdentifier}"\r\n            name: "Group by ID"\r\n            description: "HTTP view of the group object"\r\n            mimeType: "application/json"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Entra: device.get_device_by_id (Tool only)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'object_types:\r\n  device:\r\n    commands:\r\n      get_device_by_id:\r\n        endpoint: "/devices/{{ params.device_id }}"\r\n        method: GET\r\n        mcp:\r\n          enabled: true\r\n          name: "entra.device.get_by_id"\r\n          description: "Get a device by ID"\r\n          annotations:\r\n            tags: ["read","device"]\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Auth0: account.GetUserByID (Tool + Resource Template)\r\nAdd this under ",(0,i.jsx)(n.code,{children:"ServiceConfigs/CRUDService/config/system_types/auth0.yaml"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'object_types:\r\n  account:\r\n    commands:\r\n      GetUserByID:\r\n        endpoint: "/users/{{ params.SystemIdentifier }}"\r\n        method: GET\r\n        description: "Retrieve detailed account information for a specific user"\r\n        mcp:\r\n          enabled: true\r\n          name: "auth0.account.get_by_id"\r\n          description: "Get Auth0 user by ID"\r\n          annotations:\r\n            tags: ["read","auth0","account"]\r\n          resource:\r\n            uriTemplate: "https://dev-zfvv8yp5jcpjdmpf.us.auth0.com/api/v2/users/{SystemIdentifier}"\r\n            name: "Auth0 User by ID"\r\n            description: "HTTP view of the Auth0 user"\r\n            mimeType: "application/json"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Workflows (opt-in)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The workflow schema now allows a top-level ",(0,i.jsx)(n.code,{children:"mcp"})," object. The generator uses ",(0,i.jsx)(n.code,{children:"inputs"})," as the tool ",(0,i.jsx)(n.code,{children:"inputSchema"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Entra user view (published)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'name: "av_entraid_ocg_view_user"\r\ndescription: >\r\n  A workflow that retrieves account information for an EntraID account and displays all of its fields in a form.\r\n\r\n# MCP opt-in\r\nmcp:\r\n  enabled: true\r\n  name: "wf.entraid.user.view"\r\n  description: "View an Entra user by ID"\r\n  annotations:\r\n    tags: ["workflow", "read", "entra"]\r\n  resource:\r\n    uriTemplate: "https://graph.microsoft.com/v1.0/users/{SystemIdentifier}"\r\n    name: "User by ID (workflow)"\r\n    description: "HTTP view of the user object"\r\n    mimeType: "application/json"\r\n\r\ninputs:\r\n  type: object\r\n  required: ["SystemIdentifier"]\r\n  properties:\r\n    SystemIdentifier: { type: string, description: "The unique identifier of the EntraID user" }\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Entra group view (published)"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'name: "av_entraid_ocg_view_group"\r\ndescription: >\r\n  A workflow that retrieves group information for an EntraID group and displays all of its fields in a form.\r\n\r\n# MCP opt-in\r\nmcp:\r\n  enabled: true\r\n  name: "wf.entraid.group.view"\r\n  description: "View an Entra group by ID"\r\n  annotations:\r\n    tags: ["workflow", "read", "entra"]\r\n  resource:\r\n    uriTemplate: "https://graph.microsoft.com/v1.0/groups/{SystemIdentifier}"\r\n    name: "Group by ID (workflow)"\r\n    description: "HTTP view of the group object"\r\n    mimeType: "application/json"\r\n\r\ninputs:\r\n  type: object\r\n  required: ["SystemIdentifier"]\r\n  properties:\r\n    SystemIdentifier: { type: string, description: "The unique identifier of the EntraID group" }\n'})}),"\n",(0,i.jsx)(n.p,{children:"How tools are listed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["REST discovery: ",(0,i.jsx)(n.code,{children:"GET /mcp/tools/list"})," (BFF proxy: ",(0,i.jsx)(n.code,{children:"GET /api/crud/mcp/tools/list"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["JSON-RPC discovery: ",(0,i.jsx)(n.code,{children:"POST /mcp/jsonrpc"})," with ",(0,i.jsx)(n.code,{children:'{ "method": "tools/list" }'})," (BFF proxy: ",(0,i.jsx)(n.code,{children:"POST /api/crud/mcp/jsonrpc"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["The server always includes ",(0,i.jsx)(n.code,{children:"system.health"}),"; other tools appear only when ",(0,i.jsx)(n.code,{children:"mcp.enabled: true"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add ",(0,i.jsx)(n.code,{children:"mcpInstance"})," to each system to label provider/instance (",(0,i.jsx)(n.code,{children:"provider"}),", ",(0,i.jsx)(n.code,{children:"instance"}),", ",(0,i.jsx)(n.code,{children:"instance_label"}),", ",(0,i.jsx)(n.code,{children:"env"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Names are namespaced by default to avoid collisions across providers/instances. Fallback uses suffix ",(0,i.jsx)(n.code,{children:"@system"})," when identity is missing."]}),"\n",(0,i.jsx)(n.li,{children:"Only safe, read\u2011only operations should be exposed as MCP Resources; tools can represent any action."}),"\n",(0,i.jsxs)(n.li,{children:["The workflow JSON schema allows an optional top\u2011level ",(0,i.jsx)(n.code,{children:"mcp"})," block."]}),"\n",(0,i.jsx)(n.li,{children:"Verify"}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"List tools and confirm your tool appears"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["REST: ",(0,i.jsx)(n.code,{children:"GET /mcp/tools/list"})," or JSON\u2011RPC ",(0,i.jsx)(n.code,{children:"tools/list"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Call health via JSON\u2011RPC ",(0,i.jsx)(n.code,{children:"tools/call"})," with ",(0,i.jsx)(n.code,{children:'{ name: "system.health", arguments: { verbose: true } }'})," (or ",(0,i.jsx)(n.code,{children:"system_health"}),")."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Invoke one enabled Azure/Auth0 tool with required params."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Cursor quick test"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "mcpServers": {\r\n    "crud-mcp": {\r\n      "type": "streamable-http",\r\n      "url": "https://api.ocg.labs.empowernow.ai/api/crud/mcp/jsonrpc",\r\n      "headers": {\r\n        "Authorization": "Bearer <ACCESS_TOKEN_WITH_scopes_mcp.tools.discovery_mcp.tools.invoke>",\r\n        "Content-Type": "application/json"\r\n      }\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In Cursor, enable ",(0,i.jsx)(n.code,{children:"crud-mcp"}),", then ask: \u201cRun the CRUD MCP health check.\u201d"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Keep tool names stable across releases; if you must rename, consider leaving the old name enabled for one release with a deprecated tag in ",(0,i.jsx)(n.code,{children:"annotations"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(96540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[9549],{11408:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"marketing/authzen-pdp","title":"AuthZEN PDP \u2013 The Control Plane for Decisions","description":"What is OpenID AuthZEN, how we implement PDP decisions at the BFF, migration from OPA/Cedar, and evidence.","source":"@site/docs/marketing/authzen-pdp.md","sourceDirName":"marketing","slug":"/marketing/authzen-pdp","permalink":"/empowernow_docs/docs/marketing/authzen-pdp","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/marketing/authzen-pdp.md","tags":[],"version":"current","frontMatter":{"title":"AuthZEN PDP \u2013 The Control Plane for Decisions","description":"What is OpenID AuthZEN, how we implement PDP decisions at the BFF, migration from OPA/Cedar, and evidence."},"sidebar":"tutorialSidebar","previous":{"title":"Naming Service One\u2011Pager","permalink":"/empowernow_docs/docs/marketing/naming-service"},"next":{"title":"Automation Studio vs Zapier, Make, and n8n","permalink":"/empowernow_docs/docs/marketing/automation-vs-zapier-make-n8n"}}');var r=i(74848),a=i(28453);const s={title:"AuthZEN PDP \u2013 The Control Plane for Decisions",description:"What is OpenID AuthZEN, how we implement PDP decisions at the BFF, migration from OPA/Cedar, and evidence."},o=void 0,c={},d=[{value:"What is OpenID AuthZEN?",id:"what-is-openid-authzen",level:2},{value:"Fabric architecture: PDP at the BFF",id:"fabric-architecture-pdp-at-the-bff",level:2},{value:"Migrating from OPA/Cedar",id:"migrating-from-opacedar",level:2},{value:"Evidence checklist",id:"evidence-checklist",level:2},{value:"When to use which",id:"when-to-use-which",level:2}];function l(e){const n={a:"a",h2:"h2",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"what-is-openid-authzen",children:"What is OpenID AuthZEN?"}),"\n",(0,r.jsx)(n.p,{children:"OpenID AuthZEN standardizes authorization decisions: discovery, request/response semantics, and interoperability between Policy Enforcement Points (PEPs) and Policy Decision Points (PDPs). It aims to do for authorization what OIDC did for authentication."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Read more: ",(0,r.jsx)(n.a,{href:"https://www.aserto.com/lp/authzen",children:"Aserto AuthZEN overview"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fabric-architecture-pdp-at-the-bff",children:"Fabric architecture: PDP at the BFF"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Every API call passes through the BFF (session terminator). The BFF is the PEP, calling our AuthZEN\u2011compliant PDP for subject/resource/action decisions."}),"\n",(0,r.jsx)(n.li,{children:"Zero\u2011token SPA: no access tokens in the browser; policies are enforced server\u2011side."}),"\n",(0,r.jsx)(n.li,{children:"CAEP/Shared\u2011Signals\u2011style events emitted for audit and analytics."}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  autonumber\r\n  participant SPA as SPA (Studio)\r\n  participant BFF as BFF (PEP)\r\n  participant PDP as PDP (AuthZEN)\r\n  participant SVC as Service (CRUD/Data)\r\n\r\n  SPA->>BFF: GET /api/things (cookie)\r\n  BFF->>PDP: evaluate(subject, resource, action)\r\n  PDP--\x3e>BFF: permit/deny (+explain)\r\n  alt permit\r\n    BFF->>SVC: Proxy + DPoP (audience token)\r\n    SVC--\x3e>BFF: 200 JSON\r\n    BFF--\x3e>SPA: 200 JSON\r\n  else deny\r\n    BFF--\x3e>SPA: 403\r\n  end"}),"\n",(0,r.jsx)(n.h2,{id:"migrating-from-opacedar",children:"Migrating from OPA/Cedar"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Map inputs to AuthZEN schema; keep policy logic semantically equivalent while gaining standardized discovery and decision responses."}),"\n",(0,r.jsx)(n.li,{children:"Keep existing OPA/Cedar where appropriate; use PDP bridges for gradual migration."}),"\n",(0,r.jsxs)(n.li,{children:["See also: ",(0,r.jsx)(n.a,{href:"https://www.openpolicyagent.org/",children:"Open Policy Agent"}),", ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/cedar/latest/userguide/what-is-cedar.html",children:"AWS Cedar"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"evidence-checklist",children:"Evidence checklist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"AuthZEN discovery document exposed by PDP"}),"\n",(0,r.jsx)(n.li,{children:"BFF logs show per\u2011request decision ids with allow/deny and explanations"}),"\n",(0,r.jsx)(n.li,{children:"CAEP events emitted and consumed by analytics"}),"\n",(0,r.jsx)(n.li,{children:"p95 PDP latency dashboard"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"when-to-use-which",children:"When to use which"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Centralize application authorization decisions via AuthZEN PDP when you want interoperable, explainable, and observable policy at runtime."}),"\n",(0,r.jsx)(n.li,{children:"Keep governance (reviews, SoD) in IGA; let the Fabric enforce runtime policy."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(96540);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
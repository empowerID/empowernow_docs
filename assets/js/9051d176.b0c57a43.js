"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[5195],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(96540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}},63689:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"services/bff/explanation/bff-for-spa-overview","title":"BFF for React SPAs \u2014 How It Works","description":"The right mental model","source":"@site/docs/services/bff/explanation/bff-for-spa-overview.md","sourceDirName":"services/bff/explanation","slug":"/services/bff/explanation/bff-for-spa-overview","permalink":"/empowernow_docs/docs/services/bff/explanation/bff-for-spa-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/explanation/bff-for-spa-overview.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"BFF for React SPAs \u2014 How It Works","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Authentication Options and Flow","permalink":"/empowernow_docs/docs/services/bff/explanation/authentication"},"next":{"title":"Visual Guide","permalink":"/empowernow_docs/docs/services/bff/explanation/bff-visual-guide"}}');var r=s(74848),o=s(28453);const t={title:"BFF for React SPAs \u2014 How It Works",sidebar_position:2},c=void 0,a={},d=[{value:"The right mental model",id:"the-right-mental-model",level:2},{value:"How SPA-local paths route",id:"how-spa-local-paths-route",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"the-right-mental-model",children:"The right mental model"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The SPA never handles OAuth tokens. The BFF terminates OAuth/OIDC, derives the user identity from ",(0,r.jsx)(n.code,{children:"id_token.sub"}),", creates a secure session cookie, and proxies ",(0,r.jsx)(n.code,{children:"/api/..."})," requests using server-held service tokens."]}),"\n",(0,r.jsx)(n.li,{children:"Service tokens (client-credential or token-exchange) identify the BFF as a client to backends; they are not the user identity and are never exposed to the browser."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Who this is for"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"React SPA developers new to the Backend\u2011for\u2011Frontend (BFF) model."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"What the BFF does"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Terminates OAuth in the backend; the browser never sees access tokens"}),"\n",(0,r.jsxs)(n.li,{children:["Issues a secure session cookie; SPAs call the BFF at ",(0,r.jsx)(n.code,{children:"/api/..."})]}),"\n",(0,r.jsxs)(n.li,{children:["Enforces authZ per request via PDP (AuthZEN) using ",(0,r.jsx)(n.code,{children:"pdp.yaml"})," + path mapping"]}),"\n",(0,r.jsxs)(n.li,{children:["Proxies requests to backend services defined in ",(0,r.jsx)(n.code,{children:"routes.yaml"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"End\u2011to\u2011end flow"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n  autonumber\n  participant UI as React SPA\n  participant BFF\n  participant IdP\n  participant PDP\n  participant SVC as Backend Services\n  rect rgb(30,30,50)\n    note over UI,BFF: Login\n    UI->>BFF: GET /auth/login\n    BFF->>IdP: Redirect to authorize\n    IdP--\x3e>BFF: Callback with code\n    BFF->>IdP: Token exchange (server-side)\n    BFF--\x3e>UI: Set session cookie (httpOnly, secure)\n  end\n  rect rgb(20,40,60)\n    note over UI,BFF: API call\n    UI->>BFF: GET /api/crud/forms/123\n    BFF->>PDP: evaluate(subject, resource=form, id=123, action=read)\n    alt decision cached\n      BFF--\x3e>UI: 200 JSON\n    else cache miss\n      PDP--\x3e>BFF: allow/deny\n      BFF->>SVC: GET /forms/123\n      SVC--\x3e>BFF: 200 JSON\n      BFF--\x3e>UI: 200 JSON\n    end\n  end"}),"\n",(0,r.jsx)(n.h3,{id:"how-spa-local-paths-route",children:"How SPA-local paths route"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Think of ",(0,r.jsx)(n.code,{children:"/api"})," as the BFF\u2019s front door. The SPA never talks directly to backend services."]}),"\n",(0,r.jsxs)(n.li,{children:["Traefik routes ",(0,r.jsx)(n.code,{children:"/api/**"})," to the BFF. The BFF reads ",(0,r.jsx)(n.code,{children:"routes.yaml"})," and translates the client path to a backend path."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example translation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"GET /api/crud/forms/123  \u2192  BFF \u2192 GET http://crud_service/forms/123\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In dev, ",(0,r.jsx)(n.code,{children:"VITE_BFF_BASE_URL"})," can be an absolute BFF origin; in prod, it\u2019s usually same\u2011origin ",(0,r.jsx)(n.code,{children:"/api"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Automation Studio (Visual Designer) specifics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Front end for CRUDService."}),"\n",(0,r.jsxs)(n.li,{children:["SPA calls:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/crud/..."})," (CRUD + SSE)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/access/v1/evaluation"})," and ",(0,r.jsx)(n.code,{children:"/access/v1/evaluations"})," (PDP, preserved path to ",(0,r.jsx)(n.code,{children:"pdp_service"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Traefik forwards to the BFF; BFF proxies per ",(0,r.jsx)(n.code,{children:"routes.yaml"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Include cookies: fetch ",(0,r.jsx)(n.code,{children:"credentials: 'include'"}),", axios ",(0,r.jsx)(n.code,{children:"withCredentials: true"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Reference \u2192 ",(0,r.jsx)(n.code,{children:"SPA PDP usage"})," for which SPAs call the PDP, where, and with what payloads."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Where things are configured"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["App API surface: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/routes.yaml"})]}),"\n",(0,r.jsxs)(n.li,{children:["PDP mapping + performance: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/pdp.yaml"})]}),"\n",(0,r.jsxs)(n.li,{children:["SPA wiring: ",(0,r.jsx)(n.code,{children:"src/main.tsx"})," uses ",(0,r.jsx)(n.code,{children:"AuthProvider"})," and ",(0,r.jsx)(n.code,{children:"setBaseUrl"})," from ",(0,r.jsx)(n.code,{children:"@empowernow/bff-auth-react"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Key properties for SPAs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No Authorization header needed for same\u2011origin calls; auth is cookie\u2011based"}),"\n",(0,r.jsxs)(n.li,{children:["Use canonical ",(0,r.jsx)(n.code,{children:"/api/..."})," paths; BFF routes to services and checks permissions"]}),"\n",(0,r.jsx)(n.li,{children:"401 = not logged in; 403 = PDP denied"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);
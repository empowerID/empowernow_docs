"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4053],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}},84852:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"services/crud-service/secrets/canonical-uris-and-policy","title":"Canonical URIs and policy model","description":"URI schemes, tenant guards, resource refs, and PDP purposes","source":"@site/docs/services/crud-service/secrets/03-canonical-uris-and-policy.md","sourceDirName":"services/crud-service/secrets","slug":"/services/crud-service/secrets/canonical-uris-and-policy","permalink":"/empowernow_docs/docs/services/crud-service/secrets/canonical-uris-and-policy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/secrets/03-canonical-uris-and-policy.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Canonical URIs and policy model","description":"URI schemes, tenant guards, resource refs, and PDP purposes"},"sidebar":"tutorialSidebar","previous":{"title":"Architecture and design","permalink":"/empowernow_docs/docs/services/crud-service/secrets/architecture-design"},"next":{"title":"Providers","permalink":"/empowernow_docs/docs/services/crud-service/secrets/providers"}}');var r=s(74848),c=s(28453);const o={title:"Canonical URIs and policy model",description:"URI schemes, tenant guards, resource refs, and PDP purposes"},l=void 0,a={},d=[{value:"Why Canonical URIs",id:"why-canonical-uris",level:2},{value:"Canonical Secret URIs",id:"canonical-secret-uris",level:2},{value:"Components",id:"components",level:3},{value:"Guards",id:"guards",level:2},{value:"Policy model",id:"policy-model",level:2},{value:"How purposes map to operations",id:"how-purposes-map-to-operations",level:3},{value:"Resource references",id:"resource-references",level:2},{value:"Default\u2011deny posture and lifecycle",id:"defaultdeny-posture-and-lifecycle",level:2},{value:"Examples and migration",id:"examples-and-migration",level:2},{value:"Common mistakes",id:"common-mistakes",level:2},{value:"Normalization rules (what the parser fixes)",id:"normalization-rules-what-the-parser-fixes",level:2},{value:"Decision flow with Canonical URIs",id:"decision-flow-with-canonical-uris",level:2},{value:"Test matrix (QA)",id:"test-matrix-qa",level:2}];function t(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"why-canonical-uris",children:"Why Canonical URIs"}),"\n",(0,r.jsx)(n.p,{children:"Canonical Secret URIs give us a single, unambiguous way to identify secrets across providers and environments. They let the PEP parse intent, apply tenant/mount guards, ask the PDP for a purpose\u2011based decision, and then route to the right provider strategy. Because the URI itself carries provider, engine, mount, path, and an optional fragment, the same application code works against OpenBao, HashiCorp Vault, or dev YAML."}),"\n",(0,r.jsx)(n.h2,{id:"canonical-secret-uris",children:"Canonical Secret URIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["YAML: ",(0,r.jsx)(n.code,{children:"yaml://secret/<path>#<key>"})]}),"\n",(0,r.jsxs)(n.li,{children:["OpenBao KVv2: ",(0,r.jsx)(n.code,{children:"openbao+kv2://<mount>/<path>#<key>[?version=N]"})]}),"\n",(0,r.jsxs)(n.li,{children:["HashiCorp KVv2: ",(0,r.jsx)(n.code,{children:"hashicorp+kv2://<mount>/<path>#<key>[?version=N]"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"provider[+engine]"})," \u2014 which backing store and engine to use (e.g., ",(0,r.jsx)(n.code,{children:"openbao+kv2"}),", ",(0,r.jsx)(n.code,{children:"hashicorp+kv2"}),", ",(0,r.jsx)(n.code,{children:"yaml"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mount"})," \u2014 top\u2011level namespace in the provider (e.g., ",(0,r.jsx)(n.code,{children:"secret"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"path"})," \u2014 nested path segments under the mount (e.g., ",(0,r.jsx)(n.code,{children:"app/api"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fragment"})," \u2014 a specific key within a KV map (e.g., ",(0,r.jsx)(n.code,{children:"#token"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"version"})," \u2014 optional version pin for KVv2 reads (e.g., ",(0,r.jsx)(n.code,{children:"?version=3"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Examples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fragment value: ",(0,r.jsx)(n.code,{children:"openbao+kv2://secret/app/api#token"})]}),"\n",(0,r.jsxs)(n.li,{children:["Whole map at a path: ",(0,r.jsx)(n.code,{children:"openbao+kv2://secret/app/api"})]}),"\n",(0,r.jsxs)(n.li,{children:["Version\u2011pinned read: ",(0,r.jsx)(n.code,{children:"openbao+kv2://secret/app/api#token?version=3"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"guards",children:"Guards"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Tenant guard: ",(0,r.jsx)(n.code,{children:"TENANT_ID"}),", ",(0,r.jsx)(n.code,{children:"TENANT_ALLOWED_MOUNTS"})]}),"\n",(0,r.jsx)(n.li,{children:"Normalization strips ambiguous forms; invalid URIs yield structured errors"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"policy-model",children:"Policy model"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Purposes: ",(0,r.jsx)(n.code,{children:"read"}),", ",(0,r.jsx)(n.code,{children:"write"}),", ",(0,r.jsx)(n.code,{children:"delete"}),", ",(0,r.jsx)(n.code,{children:"undelete"}),", ",(0,r.jsx)(n.code,{children:"destroy_versions"}),", ",(0,r.jsx)(n.code,{children:"rotate"}),", ",(0,r.jsx)(n.code,{children:"read_metadata"})]}),"\n",(0,r.jsx)(n.li,{children:"Batch authorization with mixed required/optional sets"}),"\n",(0,r.jsx)(n.li,{children:"Obligations: TTL, max uses, binding hints"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-purposes-map-to-operations",children:"How purposes map to operations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["SDK read via PEP: purpose ",(0,r.jsx)(n.code,{children:"execute"})," (PDP enforced inside ",(0,r.jsx)(n.code,{children:"VaultService"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["API endpoints map to admin/CRUD purposes (see ",(0,r.jsx)(n.code,{children:"09-api-reference.md"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"resource-references",children:"Resource references"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"resource_ref = HMAC(tenant_salt, canonical_uri)"})," used in audits (non\u2011leaky)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Why this matters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Audits are useful without revealing sensitive paths; the UI/Analytics can still correlate by ",(0,r.jsx)(n.code,{children:"resource_ref"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"defaultdeny-posture-and-lifecycle",children:"Default\u2011deny posture and lifecycle"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Policies default to deny unless explicitly allowed for purpose"}),"\n",(0,r.jsx)(n.li,{children:"Owners: Security approves policy changes; periodic reviews (quarterly)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples-and-migration",children:"Examples and migration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["With fragment: ",(0,r.jsx)(n.code,{children:"openbao+kv2://secret/app/api#token"})]}),"\n",(0,r.jsxs)(n.li,{children:["Without fragment (path object): ",(0,r.jsx)(n.code,{children:"openbao+kv2://secret/app/api"})]}),"\n",(0,r.jsxs)(n.li,{children:["Version pin: ",(0,r.jsx)(n.code,{children:"...?version=3"})]}),"\n",(0,r.jsxs)(n.li,{children:["Migration: ENV var ",(0,r.jsx)(n.code,{children:"MY_KEY"})," \u2192 pointer ",(0,r.jsx)(n.code,{children:"MY_KEY_POINTER=openbao+kv2://secret/app#MY_KEY"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Migration tips"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep the same logical names; swap the value for a pointer and use the SDK/API to resolve."}),"\n",(0,r.jsxs)(n.li,{children:["Start with YAML in dev, then replace ",(0,r.jsx)(n.code,{children:"yaml://"})," with ",(0,r.jsx)(n.code,{children:"openbao+kv2://"})," for higher environments."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-mistakes",children:"Common mistakes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Missing fragment when provider expects KV map \u2192 400"}),"\n",(0,r.jsx)(n.li,{children:"Wrong mount (not in TENANT_ALLOWED_MOUNTS) \u2192 400"}),"\n",(0,r.jsx)(n.li,{children:"Using YAML in prod \u2192 blocked by environment guard"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"normalization-rules-what-the-parser-fixes",children:"Normalization rules (what the parser fixes)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Collapses duplicate slashes, trims whitespace"}),"\n",(0,r.jsx)(n.li,{children:"Lowercases provider/engine scheme"}),"\n",(0,r.jsx)(n.li,{children:"Ensures fragment and version query are in the correct positions"}),"\n",(0,r.jsx)(n.li,{children:"Produces a canonical string that\u2019s stable for HMAC and audits"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"decision-flow-with-canonical-uris",children:"Decision flow with Canonical URIs"}),"\n",(0,r.jsx)(n.mermaid,{value:'flowchart TD\r\n  A["Canonical URI provided"] --\x3e B{"Parse & normalize"}\r\n  B -- "invalid" --\x3e E1["400 with structured error code"]\r\n  B -- "ok" --\x3e C{"Tenant/mount guard"}\r\n  C -- "fail" --\x3e E2["400 Bad Request"]\r\n  C -- "ok" --\x3e D["PDP authorize(subject, tenant, resource, purpose)"]\r\n  D --\x3e F{"Decision"}\r\n  F -- "Permit" --\x3e G["PEP enforces obligations/binding"]\r\n  G --\x3e H["Provider strategy by scheme"]\r\n  H --\x3e I["Audit (resource_ref), metrics, traces"]\r\n  F -- "Deny" --\x3e E3["403 with reason"]'}),"\n",(0,r.jsx)(n.h2,{id:"test-matrix-qa",children:"Test matrix (QA)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Valid/invalid URI forms; fuzz path/fragment; ensure normalization is idempotent"}),"\n",(0,r.jsx)(n.li,{children:"Purposes map to expected provider actions and responses"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Authorization model and purposes: ",(0,r.jsx)(n.code,{children:"./11-authorization-model-authzen.md"})]}),"\n",(0,r.jsxs)(n.li,{children:["PDP enrichment (exact context fields): ",(0,r.jsx)(n.code,{children:"./SECRETS_PDP_ENRICHMENT.md"})]}),"\n",(0,r.jsxs)(n.li,{children:["Providers and capabilities: ",(0,r.jsx)(n.code,{children:"./04-providers.md"})]}),"\n",(0,r.jsxs)(n.li,{children:["Security model (binding/anti\u2011replay): ",(0,r.jsx)(n.code,{children:"./05-security-model.md"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[744],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var i=r(96540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},73772:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"services/crud-service/how-to/mcp-opt-in-authors-guide","title":"mcp-opt-in-authors-guide","description":"Opt\u2011in MCP annotations for systems and workflows","source":"@site/docs/services/crud-service/how-to/mcp-opt-in-authors-guide.md","sourceDirName":"services/crud-service/how-to","slug":"/services/crud-service/how-to/mcp-opt-in-authors-guide","permalink":"/empowernow_docs/docs/services/crud-service/how-to/mcp-opt-in-authors-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/crud-service/how-to/mcp-opt-in-authors-guide.md","tags":[],"version":"current","frontMatter":{}}');var s=r(74848),t=r(28453);const o={},c=void 0,a={},d=[{value:"Opt\u2011in MCP annotations for systems and workflows",id:"optin-mcp-annotations-for-systems-and-workflows",level:2},{value:"Principles",id:"principles",level:3},{value:"Command example (Entra account get by id)",id:"command-example-entra-account-get-by-id",level:3},{value:"Workflow example (view user)",id:"workflow-example-view-user",level:3},{value:"Naming and identity",id:"naming-and-identity",level:3},{value:"Limits",id:"limits",level:3},{value:"Verify",id:"verify",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"optin-mcp-annotations-for-systems-and-workflows",children:"Opt\u2011in MCP annotations for systems and workflows"}),"\n",(0,s.jsxs)(n.p,{children:["Publish selected commands and workflows as MCP tools with minimal ",(0,s.jsx)(n.code,{children:"mcp"})," blocks in your YAML. Avoid schema duplication\u2014input schemas are derived from existing definitions."]}),"\n",(0,s.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Opt\u2011in only: add ",(0,s.jsx)(n.code,{children:"mcp.enabled: true"})," to publish"]}),"\n",(0,s.jsxs)(n.li,{children:["No schema duplication: inputs derived from ",(0,s.jsx)(n.code,{children:"required_params"})," or workflow ",(0,s.jsx)(n.code,{children:"inputs"})]}),"\n",(0,s.jsx)(n.li,{children:"Short, stable names with deterministic compacting when needed"}),"\n",(0,s.jsx)(n.li,{children:"Cap publication to keep client catalogues small"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"command-example-entra-account-get-by-id",children:"Command example (Entra account get by id)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'object_types:\r\n  account:\r\n    commands:\r\n      get_user_by_id:\r\n        endpoint: "/users/{{ params.SystemIdentifier }}"\r\n        method: GET\r\n        mcp:\r\n          enabled: true\r\n          name: "entra.account.get_by_id"\r\n          description: "Get a user by ID"\r\n          annotations:\r\n            tags: ["read","directory","account"]\r\n          resource:\r\n            uriTemplate: "https://api.ocg.labs.empowernow.ai/users/{SystemIdentifier}"\r\n            name: "User by ID"\r\n            description: "HTTP view of the user"\r\n            mimeType: "application/json"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"workflow-example-view-user",children:"Workflow example (view user)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: "av_entraid_ocg_view_user"\r\ndescription: >\r\n  View Entra user details.\r\nmcp:\r\n  enabled: true\r\n  name: "wf.entraid.user.view"\r\n  description: "View an Entra user by ID"\r\n  annotations:\r\n    tags: ["workflow","read","entra"]\r\n  resource:\r\n    uriTemplate: "https://graph.microsoft.com/v1.0/users/{SystemIdentifier}"\r\n    name: "User by ID (workflow)"\r\n    mimeType: "application/json"\r\ninputs:\r\n  type: object\r\n  required: ["SystemIdentifier"]\r\n  properties:\r\n    SystemIdentifier: { type: string, description: "Entra user id" }\n'})}),"\n",(0,s.jsx)(n.h3,{id:"naming-and-identity",children:"Naming and identity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Add per\u2011system ",(0,s.jsx)(n.code,{children:"mcpInstance"})," to label provider/instance/env and drive namespacing"]}),"\n",(0,s.jsxs)(n.li,{children:["System tools \u2192 ",(0,s.jsx)(n.code,{children:"provider.instance.base"}),"; workflows \u2192 ",(0,s.jsx)(n.code,{children:"workflow.<name>"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"limits",children:"Limits"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MCP_MAX_TOOLS"})," \u2013 hard cap"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MCP_LOOPBACK_ONLY_HEALTH=true"})," \u2013 publish only health tool (debug)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"verify",children:"Verify"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["List tools via BFF ",(0,s.jsx)(n.code,{children:"/api/crud/mcp/tools/list"})]}),"\n",(0,s.jsxs)(n.li,{children:["Call health via JSON\u2011RPC ",(0,s.jsx)(n.code,{children:"tools/call"})," with ",(0,s.jsx)(n.code,{children:'{ name: "system.health", arguments: { verbose: true } }'})]}),"\n",(0,s.jsx)(n.li,{children:"Invoke your new tool with required params"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);
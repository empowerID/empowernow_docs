"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[1211],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var s=i(96540);const r={},l=s.createContext(r);function c(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(l.Provider,{value:n},e.children)}},72003:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"services/bff/devops/bff_to_crud_mtls","title":"bff_to_crud_mtls","description":"BFF \u2192 CRUD TLS Enablement (Config\u2011Only) Guide","source":"@site/docs/services/bff/devops/bff_to_crud_mtls.md","sourceDirName":"services/bff/devops","slug":"/services/bff/devops/bff_to_crud_mtls","permalink":"/empowernow_docs/docs/services/bff/devops/bff_to_crud_mtls","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/devops/bff_to_crud_mtls.md","tags":[],"version":"current","frontMatter":{}}');var r=i(74848),l=i(28453);const c={},o=void 0,t={},d=[{value:"BFF \u2192 CRUD TLS Enablement (Config\u2011Only) Guide",id:"bff--crud-tls-enablement-configonly-guide",level:3},{value:"Audience",id:"audience",level:3},{value:"Goal",id:"goal",level:3},{value:"Scope",id:"scope",level:3},{value:"Current state and constraints",id:"current-state-and-constraints",level:3},{value:"The non\u2011overengineered approach",id:"the-nonoverengineered-approach",level:3},{value:"Configuration changes (no code edits)",id:"configuration-changes-no-code-edits",level:3},{value:"Deployment steps",id:"deployment-steps",level:3},{value:"Validation",id:"validation",level:3},{value:"Rollback plan",id:"rollback-plan",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Optional hardening (future, only if required)",id:"optional-hardening-future-only-if-required",level:3},{value:"Change control checklist",id:"change-control-checklist",level:3},{value:"FAQ",id:"faq",level:3}];function a(e){const n={code:"code",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"bff--crud-tls-enablement-configonly-guide",children:"BFF \u2192 CRUD TLS Enablement (Config\u2011Only) Guide"}),"\n",(0,r.jsx)(n.h3,{id:"audience",children:"Audience"}),"\n",(0,r.jsx)(n.p,{children:"DevOps and platform engineers"}),"\n",(0,r.jsx)(n.h3,{id:"goal",children:"Goal"}),"\n",(0,r.jsx)(n.p,{children:"Make BFF call CRUD over TLS in prod/stage with zero code changes, keeping dev simple."}),"\n",(0,r.jsx)(n.h3,{id:"scope",children:"Scope"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"In scope: Switching BFF\u2019s upstream to CRUD over HTTPS via Traefik, config-only."}),"\n",(0,r.jsx)(n.li,{children:"Not in scope: App-level TLS on CRUD, mutual TLS (mTLS) between BFF and CRUD, CA pinning (documented as optional)."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"current-state-and-constraints",children:"Current state and constraints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["CRUD is externally fronted by Traefik: ",(0,r.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"})," and exposes ",(0,r.jsx)(n.code,{children:"/health"})," over HTTPS."]}),"\n",(0,r.jsxs)(n.li,{children:["BFF reads CRUD base URL from ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["BFF\u2019s ",(0,r.jsx)(n.code,{children:"httpx"})," client verifies TLS by default; no code changes are needed for HTTPS."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"the-nonoverengineered-approach",children:"The non\u2011overengineered approach"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prod/Stage: BFF calls CRUD via ",(0,r.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai/api"})," (through Traefik). Rely on standard TLS verification."]}),"\n",(0,r.jsxs)(n.li,{children:["Dev: Keep ",(0,r.jsx)(n.code,{children:"http://crud-service:8000/api"})," (internal Docker network) to minimize local friction."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"configuration-changes-no-code-edits",children:"Configuration changes (no code edits)"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Prod/Stage config"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["File: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"})]}),"\n",(0,r.jsx)(n.li,{children:"Set CRUD to HTTPS:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    token_audience: "https://crud.ocg.labs.empowernow.ai"\r\n    # retain existing timeouts/caching as-is\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Dev config"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep the internal container URL:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "http://crud-service:8000/api"\r\n    token_audience: "https://crud.ocg.labs.empowernow.ai"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token_audience"})," should already match the HTTPS host. Confirm it remains ",(0,r.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"deployment-steps",children:"Deployment steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Commit the updated ",(0,r.jsx)(n.code,{children:"service_settings.yaml"})," in ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config"})," (per your environment branching or overlays)."]}),"\n",(0,r.jsxs)(n.li,{children:["Restart or redeploy the BFF service:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Docker Compose: restart only the BFF container."}),"\n",(0,r.jsx)(n.li,{children:"Kubernetes: roll the BFF deployment to pick up the mounted config/ConfigMap."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Environment variable overrides"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ensure the BFF loads settings from the mounted config path (default in compose: ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config \u2192 /app/config"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["If your BFF supports ",(0,r.jsx)(n.code,{children:"SETTINGS_FILE"}),", make sure it points to ",(0,r.jsx)(n.code,{children:"/app/config/service_settings.yaml"})," where appropriate."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"validation",children:"Validation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"From a client (or test harness) perform a BFF call that triggers a CRUD upstream request (e.g., an endpoint that lists workflows/forms)."}),"\n",(0,r.jsxs)(n.li,{children:["Check BFF logs for the upstream base to confirm HTTPS usage. You should see references to the CRUD host with ",(0,r.jsx)(n.code,{children:"https://crud.ocg.labs.empowernow.ai"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Optional quick check (connectivity only): ",(0,r.jsx)(n.code,{children:"curl -I https://crud.ocg.labs.empowernow.ai/health"})," should return 200."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Common success indicators"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"BFF responses remain 2xx for routes backed by CRUD."}),"\n",(0,r.jsx)(n.li,{children:"No TLS verification errors in BFF logs."}),"\n",(0,r.jsx)(n.li,{children:"No change required for dev/local workflows."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"rollback-plan",children:"Rollback plan"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Revert ",(0,r.jsx)(n.code,{children:"crud_service.base_url"})," to the previous HTTP value:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "http://crud-service:8000/api"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Redeploy the BFF."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["404 after change:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify you called a BFF endpoint that actually proxies to CRUD."}),"\n",(0,r.jsx)(n.li,{children:"Ensure Traefik has the CRUD router and the host resolves (DNS/hosts entry if needed)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["TLS certificate errors:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Confirm that the container can resolve and reach ",(0,r.jsx)(n.code,{children:"crud.ocg.labs.empowernow.ai"})," and that system CA trusts the cert chain used by Traefik."]}),"\n",(0,r.jsx)(n.li,{children:"If you use a private CA in front of Traefik (uncommon here), consider optional CA pinning (see below)."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["The BFF still calls HTTP:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Confirm the running BFF picked up ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Ensure you didn\u2019t override ",(0,r.jsx)(n.code,{children:"crud_service.base_url"})," with environment variables."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"optional-hardening-future-only-if-required",children:"Optional hardening (future, only if required)"}),"\n",(0,r.jsx)(n.p,{children:"CA pinning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add (config + minimal code) to use a specific CA bundle if your Traefik uses a private CA."}),"\n",(0,r.jsx)(n.li,{children:"Config example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    tls_verify: "/app/config/ca/prod-ca.crt"   # Mounted CA bundle\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Mount the CA bundle into the BFF container at ",(0,r.jsx)(n.code,{children:"/app/config/ca/prod-ca.crt"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mutual TLS (mTLS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Only if mandated by security policy. You\u2019ll need:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["BFF client cert/key mounted as secrets: ",(0,r.jsx)(n.code,{children:"/app/config/certs/bff.crt"}),", ",(0,r.jsx)(n.code,{children:"/app/config/certs/bff.key"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Traefik (or CRUD app) to require and validate client certs."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Config example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  crud_service:\r\n    base_url: "https://crud.ocg.labs.empowernow.ai/api"\r\n    client_cert_path: "/app/config/certs/bff.crt"\r\n    client_key_path: "/app/config/certs/bff.key"\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Keep this off by default to avoid developer friction."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Operational guardrails"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Do not set ",(0,r.jsx)(n.code,{children:"verify: false"})," in production."]}),"\n",(0,r.jsx)(n.li,{children:"Keep dev simple and isolate extra security knobs behind environment-specific settings."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"change-control-checklist",children:"Change control checklist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Config updated in ",(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/service_settings.yaml"})]}),"\n",(0,r.jsx)(n.li,{children:"Dev environment left unchanged (internal HTTP)"}),"\n",(0,r.jsx)(n.li,{children:"BFF redeployed (config loaded)"}),"\n",(0,r.jsx)(n.li,{children:"Validation completed (BFF calling CRUD over HTTPS; logs clean)"}),"\n",(0,r.jsx)(n.li,{children:"Rollback plan documented"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"faq",children:"FAQ"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Do we need code changes for Phase 1?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["No. ",(0,r.jsx)(n.code,{children:"httpx"})," verifies TLS by default. This is purely a config change."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Will this break dev?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No. Dev continues to use the internal HTTP URL."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Can we later enforce stricter security?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Yes. Optional CA pinning and mTLS are outlined above and can be toggled per environment without impacting dev."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Why route through Traefik instead of direct in-cluster TLS?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It\u2019s the simplest, least risky path now. If desired later, we can add app-level TLS or internal ingress with a private CA + mTLS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This plan enables TLS between BFF and CRUD in prod/stage with a single configuration change, zero code edits, minimal operational risk, and a straightforward rollback."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
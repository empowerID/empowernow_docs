"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4330],{28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>a});var t=n(96540);const o={},i=t.createContext(o);function s(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:r},e.children)}},91947:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"services/experience/error-loading-patterns","title":"Error & Loading Patterns (Plugins)","description":"Recommended UX patterns for denied PDP decisions, failed imports, and network errors; with sample code.","source":"@site/docs/services/experience/error-loading-patterns.md","sourceDirName":"services/experience","slug":"/services/experience/error-loading-patterns","permalink":"/empowernow_docs/docs/services/experience/error-loading-patterns","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/experience/error-loading-patterns.md","tags":[],"version":"current","frontMatter":{"title":"Error & Loading Patterns (Plugins)","sidebar_label":"Error & Loading Patterns","description":"Recommended UX patterns for denied PDP decisions, failed imports, and network errors; with sample code."},"sidebar":"tutorialSidebar","previous":{"title":"TypeScript Types","permalink":"/empowernow_docs/docs/services/experience/developer-types"},"next":{"title":"Executive Overview","permalink":"/empowernow_docs/docs/services/experience/executive-overview"}}');var o=n(74848),i=n(28453);const s={title:"Error & Loading Patterns (Plugins)",sidebar_label:"Error & Loading Patterns",description:"Recommended UX patterns for denied PDP decisions, failed imports, and network errors; with sample code."},a=void 0,d={},c=[{value:"Patterns",id:"patterns",level:2},{value:"Samples",id:"samples",level:2}];function l(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"patterns",children:"Patterns"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"PDP deny \u2192 hide affordance or show disabled with tooltip; log decision id for audit"}),"\n",(0,o.jsxs)(r.li,{children:["Import failure \u2192 render ",(0,o.jsx)(r.code,{children:"PluginErrorBoundary"})," fallback; show retry and link to status"]}),"\n",(0,o.jsx)(r.li,{children:"Network error \u2192 exponential backoff; show toast with correlation id; log"}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"samples",children:"Samples"}),"\n",(0,o.jsx)(r.p,{children:"Denied affordance (button):"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:"const { authorized, loading } = useAuthorization('plugin.widget', 'view');\r\nif (loading) return <Skeleton />;\r\nreturn (\r\n  <Tooltip title={!authorized ? 'Not authorized' : ''}>\r\n    <Button disabled={!authorized}>Run</Button>\r\n  </Tooltip>\r\n);\n"})}),"\n",(0,o.jsx)(r.p,{children:"Error boundary for plugin routes:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:'function PluginErrorBoundary({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <ErrorBoundary fallbackRender={({ error, resetErrorBoundary }) => (\r\n      <div className="glass-card p-4">\r\n        <h4>We couldn\'t load this plugin.</h4>\r\n        <div className="text-dim">{String(error)}</div>\r\n        <Button onClick={resetErrorBoundary}>Retry</Button>\r\n      </div>\r\n    )}>\r\n      {children}\r\n    </ErrorBoundary>\r\n  );\r\n}\n'})}),"\n",(0,o.jsx)(r.p,{children:"Import with backoff:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ts",children:"async function importWithBackoff(url: string, attempts = 3) {\r\n  let delay = 500;\r\n  for (let i = 0; i < attempts; i++) {\r\n    try { return await import(/* @vite-ignore */ url); } catch (e) {\r\n      if (i === attempts - 1) throw e;\r\n      await new Promise(r => setTimeout(r, delay));\r\n      delay *= 2;\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,o.jsxs)(r.p,{children:["See also: Quickstart ",(0,o.jsx)(r.code,{children:"./quickstart"}),", Primer ",(0,o.jsx)(r.code,{children:"./plugins"}),", Canonical reference ",(0,o.jsx)(r.code,{children:"./experience_plugins"}),"."]})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[8034],{28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(96540);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}},63978:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"services/experience/authorization","title":"Experience Authorization Model","description":"How the Experience app enforces authorization across nav, routes, pages, widgets, and plugins using OpenID AuthZEN via the BFF.","source":"@site/docs/services/experience/authorization.md","sourceDirName":"services/experience","slug":"/services/experience/authorization","permalink":"/empowernow_docs/docs/services/experience/authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/experience/authorization.md","tags":[],"version":"current","frontMatter":{"title":"Experience Authorization Model","sidebar_label":"Authorization","description":"How the Experience app enforces authorization across nav, routes, pages, widgets, and plugins using OpenID AuthZEN via the BFF."},"sidebar":"tutorialSidebar","previous":{"title":"Authorization (AuthZEN)","permalink":"/empowernow_docs/docs/services/experience/authorization-authzen"},"next":{"title":"CI/CD Cookbook","permalink":"/empowernow_docs/docs/services/experience/cicd-cookbook"}}');var r=i(74848),a=i(28453);const t={title:"Experience Authorization Model",sidebar_label:"Authorization",description:"How the Experience app enforces authorization across nav, routes, pages, widgets, and plugins using OpenID AuthZEN via the BFF."},l=void 0,c={},o=[{value:"Overview",id:"overview",level:2},{value:"Client\u2011side mechanisms",id:"clientside-mechanisms",level:2},{value:"PDP endpoints (via BFF)",id:"pdp-endpoints-via-bff",level:2},{value:"What is protected",id:"what-is-protected",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"BFF configuration (PDP batch support)",id:"bff-configuration-pdp-batch-support",level:2},{value:"Enrichment semantics",id:"enrichment-semantics",level:2},{value:"Batch utility (hook)",id:"batch-utility-hook",level:2},{value:"Operations and tests",id:"operations-and-tests",level:2},{value:"See also",id:"see-also",level:2},{value:"Appendix: Policy examples (illustrative)",id:"appendix-policy-examples-illustrative",level:2},{value:"1) Pages: readers can view by tag; owners can always view",id:"1-pages-readers-can-view-by-tag-owners-can-always-view",level:3},{value:"2) Page widgets: restrict actions to approvers",id:"2-page-widgets-restrict-actions-to-approvers",level:3},{value:"3) Plugins: per\u2011plugin route and widget gates",id:"3-plugins-perplugin-route-and-widget-gates",level:3},{value:"4) Workflows (coarse nav)",id:"4-workflows-coarse-nav",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Experience enforces authorization end\u2011to\u2011end through the BFF using OpenID AuthZEN. No PDP calls are made directly from the browser; all requests go to the BFF under preserved ",(0,r.jsx)(n.code,{children:"/access/v1/*"})," paths using session cookies and CSRF headers."]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TB\r\n  subgraph UI[Experience SPA]\r\n    NAV[Top Nav]\r\n    ROUTE[Routes]\r\n    PAGE[Page Runner]\r\n    WIDGET[Page Widgets]\r\n    PWDG[Plugin Widgets]\r\n  end\r\n  subgraph BFF[BFF]\r\n    EVAL[/POST /access/v1/evaluation/]\r\n    EVALS[/POST /access/v1/evaluations/]\r\n  end\r\n  subgraph PDP[AuthZEN PDP]\r\n    DEC[Decision]\r\n  end\r\n  UI --\x3e|single/batch| EVAL\r\n  UI --\x3e|batch| EVALS\r\n  EVAL --\x3e DEC\r\n  EVALS --\x3e DEC\r\n  DEC --\x3e UI"}),"\n",(0,r.jsx)(n.h2,{id:"clientside-mechanisms",children:"Client\u2011side mechanisms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"useAuthorization(resourceType, actionName, eager)"})," \u2014 single decision with a short cache (e.g., 60s)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PDPStrategy.authorize(type, action, id?, context?)"})," \u2014 direct single evaluate with optional attributes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"useBatchAuthorization(requests[])"})," \u2014 batch evaluate multiple decisions with a short cache"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pdp-endpoints-via-bff",children:"PDP endpoints (via BFF)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Single decision: ",(0,r.jsx)(n.code,{children:"POST /access/v1/evaluation"})]}),"\n",(0,r.jsxs)(n.li,{children:["Batch decisions: ",(0,r.jsx)(n.code,{children:"POST /access/v1/evaluations"})]}),"\n",(0,r.jsx)(n.li,{children:"Paths are preserved exactly; the BFF forwards session cookies and requires CSRF headers for stateful calls."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-protected",children:"What is protected"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Top navigation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Workflows link: ",(0,r.jsx)(n.code,{children:"useAuthorization('workflows','view_all')"})]}),"\n",(0,r.jsxs)(n.li,{children:["Pages link: ",(0,r.jsx)(n.code,{children:"useAuthorization('pages','view_all')"})]}),"\n",(0,r.jsx)(n.li,{children:"Data, IdP, PDP links: module toggle only (not PDP\u2011gated)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Route access"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Workflows list/runner: ",(0,r.jsx)(n.code,{children:"useAuthorization('workflows','view_all')"})]}),"\n",(0,r.jsxs)(n.li,{children:["Tasks page: ",(0,r.jsx)(n.code,{children:"useAuthorization('tasks','view_all')"})]}),"\n",(0,r.jsxs)(n.li,{children:["Pages list and page runner: ",(0,r.jsx)(n.code,{children:"useAuthorization('pages','view_all')"})," for route; per\u2011page decision enforced in ",(0,r.jsx)(n.code,{children:"PageRunner"})]}),"\n",(0,r.jsxs)(n.li,{children:["Dynamic plugin routes: ",(0,r.jsx)(n.code,{children:"useAuthorization('plugin.route','view')"})," plus batch pre\u2011gating via ",(0,r.jsx)(n.code,{children:"/access/v1/evaluations"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Pages list (row\u2011level)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses batch authorization to decide which pages appear (per id): ",(0,r.jsx)(n.code,{children:"pages:view"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Page runner (per\u2011page)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Enforces ",(0,r.jsx)(n.code,{children:"pages:view"})," for the specific page id before rendering, with enriched ",(0,r.jsx)(n.code,{children:"resource.properties"})," and ",(0,r.jsx)(n.code,{children:"context"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Page widgets (per\u2011widget)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Grids and Actions batch\u2011evaluated as ",(0,r.jsx)(n.code,{children:"page.widget:view"})," with widget metadata; unauthorized widgets are hidden"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dashboard and plugin widgets"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Core widgets: ",(0,r.jsx)(n.code,{children:"tasks:view_summary"}),", ",(0,r.jsx)(n.code,{children:"workflows:execute_quick"})]}),"\n",(0,r.jsxs)(n.li,{children:["Plugin widgets: batch pre\u2011gated via ",(0,r.jsx)(n.code,{children:"/access/v1/evaluations"})," using ",(0,r.jsx)(n.code,{children:"plugin.widget:<pluginId>:<widgetName>"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart TD\r\n  A[PagesList] --\x3e B[Build batch requests]\r\n  B --\x3e C[/POST /access/v1/evaluations/]\r\n  C --\x3e D{Allowed?}\r\n  D --\x3e|no| H[Filter out]\r\n  D --\x3e|yes| S[Show]"}),"\n",(0,r.jsx)(n.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,r.jsx)(n.p,{children:"Nav/route gating (workflows top\u2011level):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const response = await fetch('/access/v1/evaluation', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'X-CSRF-Token': csrf,\r\n    'X-CSRFToken': csrf,\r\n    'X-Requested-With': 'XMLHttpRequest'\r\n  },\r\n  credentials: 'include',\r\n  body: JSON.stringify({ resource: { type: res }, action: { name: act }, context: {} })\r\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Pages list (batch per\u2011id visibility):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const batch = useBatchAuthorization(\r\n  items.map((p: any) => ({\r\n    key: String(p.id),\r\n    resource: { type: 'pages', id: String(p.id) },\r\n    action: { name: 'view' },\r\n    context: { ui: { app: 'experience', module: 'pages' }, resourceAttributes: { title: p.title, name: p.name } }\r\n  }))\r\n);\n"})}),"\n",(0,r.jsx)(n.p,{children:"Page runner (per\u2011page enforcement with enrichment):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const resp = await fetch('/access/v1/evaluation', {\r\n  method: 'POST',\r\n  credentials: 'include',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'X-CSRF-Token': csrf,\r\n    'X-CSRFToken': csrf,\r\n    'X-Requested-With': 'XMLHttpRequest'\r\n  },\r\n  body: JSON.stringify({\r\n    resource: {\r\n      type: 'pages',\r\n      id: String(pageId),\r\n      properties: { title: page?.title, name: page?.name, tags: page?.tags }\r\n    },\r\n    action: { name: 'view' },\r\n    context: { ui: { app: 'experience', module: 'pages', pageId: String(pageId) } }\r\n  })\r\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Page widgets (batch per\u2011widget enforcement):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const reqs = [\r\n  {\r\n    key: `grid:${g.id || 'idx'}`,\r\n    resource: {\r\n      type: 'page.widget',\r\n      id: `${pageId}:grid:${g.id || 'idx'}`,\r\n      properties: { widgetType: 'grid', gridId: g.id, name: g.name }\r\n    },\r\n    action: { name: 'view' },\r\n    context: { ui: { app: 'experience', module: 'pages', pageId, widgetId: `grid:${g.id || 'idx'}` } }\r\n  },\r\n  {\r\n    key: `action:${a?.id || a?.label || 'idx'}`,\r\n    resource: {\r\n      type: 'page.widget',\r\n      id: `${pageId}:action:${a?.id || a?.label || 'idx'}`,\r\n      properties: { widgetType: 'action', actionId: a?.id, label: a?.label }\r\n    },\r\n    action: { name: 'view' },\r\n    context: { ui: { app: 'experience', module: 'pages', pageId, widgetId: `action:${a?.id || a?.label || 'idx'}` } }\r\n  }\r\n];\n"})}),"\n",(0,r.jsx)(n.p,{children:"Plugin widgets (batch pre\u2011gate):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const res = await fetch('/access/v1/evaluations', {\r\n  method: 'POST',\r\n  credentials: 'include',\r\n  headers: { 'Content-Type': 'application/json' },\r\n  body: JSON.stringify({ evaluations: evals })\r\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"bff-configuration-pdp-batch-support",children:"BFF configuration (PDP batch support)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ServiceConfigs/BFF/config/routes.yaml"})," should include:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'- id: "authzen-evaluation"\r\n  path: "/access/v1/evaluation"\r\n  upstream_path: "/access/v1/evaluation"\r\n  methods: ["POST", "OPTIONS"]\r\n  auth: "session"\r\n  preserve_path: true\r\n- id: "authzen-evaluations"\r\n  path: "/access/v1/evaluations"\r\n  upstream_path: "/access/v1/evaluations"\r\n  methods: ["POST", "OPTIONS"]\r\n  auth: "session"\r\n  preserve_path: true\n'})}),"\n",(0,r.jsx)(n.h2,{id:"enrichment-semantics",children:"Enrichment semantics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Subject: derived from session by the BFF/PDP; not sent explicitly by the client"}),"\n",(0,r.jsxs)(n.li,{children:["Resource: always includes ",(0,r.jsx)(n.code,{children:"type"}),"; often includes ",(0,r.jsx)(n.code,{children:"id"})," (pages, widgets, plugins) and ",(0,r.jsx)(n.code,{children:"properties"})," for pages/widgets"]}),"\n",(0,r.jsxs)(n.li,{children:["Context: UI envelope ",(0,r.jsx)(n.code,{children:"{ ui: { app, module, pageId, widgetId } }"})," added where available"]}),"\n",(0,r.jsxs)(n.li,{children:["Decision compatibility: client accepts ",(0,r.jsx)(n.code,{children:"decision"}),", ",(0,r.jsx)(n.code,{children:"allowed"}),", or ",(0,r.jsx)(n.code,{children:"allow"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"batch-utility-hook",children:"Batch utility (hook)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// useBatchAuthorization.ts \u2014 POST /access/v1/evaluations with { evaluations: [...] }\r\nexport function useBatchAuthorization(requests) {\r\n  // 60s cache; returns { decisions, loading, error, refresh }\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"operations-and-tests",children:"Operations and tests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Restart the BFF to load updated ",(0,r.jsx)(n.code,{children:"routes.yaml"}),"; build/reload the Experience app"]}),"\n",(0,r.jsxs)(n.li,{children:["Policies should handle:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pages:view"})," (by id/tags/owner/etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"page.widget:view"})," (by widget type/slot/action)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"plugin.widget:view"})," and ",(0,r.jsx)(n.code,{children:"plugin.route:view"})]}),"\n",(0,r.jsxs)(n.li,{children:["coarse ",(0,r.jsx)(n.code,{children:"view_all"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Tests:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pages list filters unauthorized rows (batch)"}),"\n",(0,r.jsx)(n.li,{children:"PageRunner denies unauthorized page"}),"\n",(0,r.jsx)(n.li,{children:"Widgets hidden unless allowed (batch)"}),"\n",(0,r.jsx)(n.li,{children:"Batch route reachable in BFF"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Experience \u2192 Plugins: ./plugins.md"}),"\n",(0,r.jsx)(n.li,{children:"BFF \u2192 Configure PDP: ../bff/how-to/configure-pdp.md"}),"\n",(0,r.jsx)(n.li,{children:"BFF \u2192 PDP cache tuning: ../bff/how-to/pdp-cache-tuning.md"}),"\n",(0,r.jsx)(n.li,{children:"BFF \u2192 Security model: ../bff/explanation/security-model.md"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"appendix-policy-examples-illustrative",children:"Appendix: Policy examples (illustrative)"}),"\n",(0,r.jsx)(n.p,{children:"These examples show common policy patterns the PDP can implement using the attributes provided in Experience requests. They are illustrative and not tied to a specific policy language."}),"\n",(0,r.jsx)(n.h3,{id:"1-pages-readers-can-view-by-tag-owners-can-always-view",children:"1) Pages: readers can view by tag; owners can always view"}),"\n",(0,r.jsx)(n.p,{children:"Intent:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allow ",(0,r.jsx)(n.code,{children:"pages:view"})," when the page ",(0,r.jsx)(n.code,{children:"properties.tags"})," intersects the caller's ",(0,r.jsx)(n.code,{children:"subject.tags"})," (e.g., department or project)."]}),"\n",(0,r.jsxs)(n.li,{children:["Always allow when the caller is the ",(0,r.jsx)(n.code,{children:"owner"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Evaluation request shape (from Page Runner):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "resource": {\r\n    "type": "pages",\r\n    "id": "123",\r\n    "properties": { "title": "HR Handbook", "name": "hr_handbook", "tags": ["hr", "internal"], "owner": "user:42" }\r\n  },\r\n  "action": { "name": "view" },\r\n  "context": { "ui": { "app": "experience", "module": "pages", "pageId": "123" } }\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Illustrative policy logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'permit if action == "view" and resource.type == "pages" and (\r\n  subject.id == resource.properties.owner or\r\n  intersect(subject.tags, resource.properties.tags).size > 0\r\n)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-page-widgets-restrict-actions-to-approvers",children:"2) Page widgets: restrict actions to approvers"}),"\n",(0,r.jsx)(n.p,{children:"Intent:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allow ",(0,r.jsx)(n.code,{children:"page.widget:view"})," for action widgets only if the caller has role ",(0,r.jsx)(n.code,{children:"approver"})," for the page's domain."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Evaluation request (from PreviewMode):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "resource": {\r\n    "type": "page.widget",\r\n    "id": "123:action:approve_user",\r\n    "properties": { "widgetType": "action", "actionId": "approve_user", "label": "Approve" }\r\n  },\r\n  "action": { "name": "view" },\r\n  "context": { "ui": { "app": "experience", "module": "pages", "pageId": "123", "widgetId": "action:approve_user" } }\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Illustrative policy logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'permit if action == "view" and resource.type == "page.widget" and\r\n  resource.properties.widgetType == "action" and\r\n  "approver" in subject.roles\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-plugins-perplugin-route-and-widget-gates",children:"3) Plugins: per\u2011plugin route and widget gates"}),"\n",(0,r.jsx)(n.p,{children:"Intent:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Only allow ",(0,r.jsx)(n.code,{children:"plugin.route:view"})," and ",(0,r.jsx)(n.code,{children:"plugin.widget:view"})," for plugins assigned to the tenant and enabled for the user."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Batch evaluation example (from Dashboard for widgets):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "evaluations": [\r\n    {\r\n      "key": "hello:HelloWidget",\r\n      "resource": { "type": "plugin.widget", "id": "hello:HelloWidget" },\r\n      "action": { "name": "view" },\r\n      "context": { "ui": { "app": "experience", "module": "dashboard" } }\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Illustrative policy logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'permit if resource.type startsWith "plugin." and\r\n  resource.id in tenant.assigned_plugins and\r\n  (subject.id in plugin.allowed_users or any(subject.groups in plugin.allowed_groups))\n'})}),"\n",(0,r.jsx)(n.h3,{id:"4-workflows-coarse-nav",children:"4) Workflows (coarse nav)"}),"\n",(0,r.jsx)(n.p,{children:"Intent:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Show Workflows nav and pages to users with a coarse ",(0,r.jsx)(n.code,{children:"workflows:view_all"})," right."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Evaluation request (from nav guard):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{ "resource": { "type": "workflows" }, "action": { "name": "view_all" } }\n'})}),"\n",(0,r.jsx)(n.p,{children:"Illustrative policy logic:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:'permit if action == "view_all" and resource.type == "workflows" and\r\n  ("workflow.viewer" in subject.roles or "workflow.admin" in subject.roles)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3855],{23575:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"source_content/virtualization_phase2","title":"virtualization_phase2","description":"Virtualization Phase 2 \u2014 Data Shaping, Merging, and Projection","source":"@site/docs/source_content/virtualization_phase2.md","sourceDirName":"source_content","slug":"/source_content/virtualization_phase2","permalink":"/empowernow_docs/docs/source_content/virtualization_phase2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/source_content/virtualization_phase2.md","tags":[],"version":"current","frontMatter":{}}');var r=i(74848),t=i(28453);const l={},a=void 0,o={},c=[{value:"Virtualization Phase 2 \u2014 Data Shaping, Merging, and Projection",id:"virtualization-phase-2--data-shaping-merging-and-projection",level:3},{value:"What\u2019s new",id:"whats-new",level:3},{value:"Design goals",id:"design-goals",level:3},{value:"Configuration overview",id:"configuration-overview",level:3},{value:"Merge rules",id:"merge-rules",level:3},{value:"Projection profiles",id:"projection-profiles",level:3},{value:"PDP attribute gating",id:"pdp-attribute-gating",level:3},{value:"Aggregator behavior and paging",id:"aggregator-behavior-and-paging",level:3},{value:"End-to-end flow",id:"end-to-end-flow",level:3},{value:"Validation and safety",id:"validation-and-safety",level:3},{value:"Operational guidance",id:"operational-guidance",level:3},{value:"Examples",id:"examples",level:3},{value:"Backwards compatibility",id:"backwards-compatibility",level:3},{value:"Testing summary",id:"testing-summary",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"virtualization-phase-2--data-shaping-merging-and-projection",children:"Virtualization Phase 2 \u2014 Data Shaping, Merging, and Projection"}),"\n",(0,r.jsx)(n.p,{children:"This document describes the new core virtualization features added in Phase 2: merge rules, projection profiles, PDP attribute gating, and aggregator behavior. It covers design intent, configuration, and usage patterns to help authors and operators configure VDS safely and predictably."}),"\n",(0,r.jsx)(n.h3,{id:"whats-new",children:"What\u2019s new"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Merge rules"}),": deterministic attribute unification across sources, with precedence and per-attribute policies."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Projection profiles"}),": reusable attribute sets per object; used by default when a client doesn\u2019t request attributes explicitly."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PDP attribute gate"}),": optional allow-list gate applied after projection to enforce attribute-level authorization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aggregator enhancements"}),": stable multi-source merge with churn-safe composite cursor."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"design-goals",children:"Design goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Deterministic outcomes under churn: no duplicates/holes, stable ordering by ",(0,r.jsx)(n.code,{children:"(subject.casefold(), id)"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Configuration-as-code with JSONSchema validation and safe defaults."}),"\n",(0,r.jsx)(n.li,{children:"Separation of concerns: correlation/joins are deterministic; fuzzy logic lives only in simulators."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-overview",children:"Configuration overview"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mapping.yaml"})," \u2014 objects, projection profiles, and merge rules"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'objects:\r\n  person:\r\n    base_dn: "ou=people,dc=ldap,dc=internal"\r\n    rdn: uid\r\n    objectClasses: [inetOrgPerson, organizationalPerson, person, top]\r\n    projection_profiles:\r\n      default: [uid, cn, mail, objectClass]\r\n    attributes:\r\n      uid: "$.subject"\r\n      cn:\r\n        func: concat\r\n        args: ["$.profile.given_name", " ", "$.profile.family_name"]\r\n      mail: "$.emails.primary"\r\n\r\nmerge_rules:\r\n  precedence: [sys_ad1, sys_ad2, sys_ldap, sys_rest]\r\n  attributes:\r\n    mail:\r\n      pick: first_present\r\n      sources: ["sys_ad1.mail", "sys_rest.email"]\r\n    memberOf:\r\n      merge_unique:\r\n        sources: ["sys_ad1.memberOf", "sys_rest.groups"]\r\n        sort: ci\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filters.yaml"})," \u2014 filter allow-list, matching rules, and default limits (mapping limits take precedence)"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"filters:\r\n  allow_attrs: [uid, cn, mail, objectClass]\r\n  matching:\r\n    uid: caseIgnore\r\n    cn: caseIgnore\r\n    mail: caseIgnore\r\n  limits:\r\n    defaultPageSize: 200\r\n    sizeLimit: 0\r\n    timeLimitMs: 0\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Providers (e.g., ",(0,r.jsx)(n.code,{children:"connectors.yaml"}),") \u2014 directories and sources used by the aggregator"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"directories:\r\n  person:\r\n    sources:\r\n      - system: sys_ad1\r\n      - system: sys_ad2\r\n      - system: sys_ldap\r\n      - system: sys_rest\n"})}),"\n",(0,r.jsx)(n.h3,{id:"merge-rules",children:"Merge rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Top-level ",(0,r.jsx)(n.code,{children:"precedence"}),": global order of systems for scalar picks (earlier wins)."]}),"\n",(0,r.jsxs)(n.li,{children:["Per-attribute policies:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pick: first_present"})," with an ordered ",(0,r.jsx)(n.code,{children:'sources: ["sys.attr", ...]'})," list."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"merge_unique"}),": coalesce values from multiple sources; optional ",(0,r.jsx)(n.code,{children:"sort: ci|cs"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Behavioral notes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Empty values (",(0,r.jsx)(n.code,{children:"None"}),", empty string, empty list) are ignored for ",(0,r.jsx)(n.code,{children:"first_present"})," fallback."]}),"\n",(0,r.jsxs)(n.li,{children:["Lists are deduplicated preserving determinism; when ",(0,r.jsx)(n.code,{children:"sort"})," is set, output is sorted case-insensitively (",(0,r.jsx)(n.code,{children:"ci"}),") or case-sensitively (",(0,r.jsx)(n.code,{children:"cs"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Subject de-duplication groups by ",(0,r.jsx)(n.code,{children:"subject.casefold()"}),"; ",(0,r.jsx)(n.code,{children:"id"})," is used as tiebreaker only for ordering."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"projection-profiles",children:"Projection profiles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Define per-object reusable attribute sets."}),"\n",(0,r.jsxs)(n.li,{children:["When a client does not request ",(0,r.jsx)(n.code,{children:"attributes"}),", the executor applies ",(0,r.jsx)(n.code,{children:"projection_profiles.default"})," (if present) and always includes ",(0,r.jsx)(n.code,{children:"dn"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Example:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"objects:\r\n  person:\r\n    projection_profiles:\r\n      default: [uid, cn, mail]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pdp-attribute-gating",children:"PDP attribute gating"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Optional per-object toggle: ",(0,r.jsx)(n.code,{children:"objects.<name>.pdp.attribute_gate: true|false"})," (default true)."]}),"\n",(0,r.jsx)(n.li,{children:"Applied after projection. The PDP returns an allowed attribute set; any projected attribute not allowed is dropped."}),"\n",(0,r.jsxs)(n.li,{children:["Deny-by-default stance on PDP errors: if the PDP call fails and the gate is enabled, attributes are filtered to none (only ",(0,r.jsx)(n.code,{children:"dn"})," remains)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example toggle:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"objects:\r\n  person:\r\n    pdp:\r\n      attribute_gate: true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"aggregator-behavior-and-paging",children:"Aggregator behavior and paging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Per-source fetches are merged into groups by ",(0,r.jsx)(n.code,{children:"subject.casefold()"})," with stable ordering ",(0,r.jsx)(n.code,{children:"(subject_cf, id)"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Composite cursor contains ",(0,r.jsx)(n.code,{children:'{"subject_cf": <last>, "source_offsets": { <system>: <offset or next> }}'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Under churn, if a source still has rows > last consumed key, the cursor records ",(0,r.jsx)(n.code,{children:"{subject_cf, id}"})," for that source instead of blindly advancing to provider\u2019s next token, preventing duplicates and holes."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"end-to-end-flow",children:"End-to-end flow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Filter normalization via allow-list and matching rules."}),"\n",(0,r.jsxs)(n.li,{children:["Aggregator fetch \u2192 merge by subject with ",(0,r.jsx)(n.code,{children:"merge_rules"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Mapping engine renders object attributes (JSONPath/built-ins/pipelines)."}),"\n",(0,r.jsxs)(n.li,{children:["Projection profile (or requested attributes) applied; ",(0,r.jsx)(n.code,{children:"dn"})," always included."]}),"\n",(0,r.jsx)(n.li,{children:"PDP attribute gate filters projected attributes when enabled."}),"\n",(0,r.jsx)(n.li,{children:"Next-page cookie is generated from the composite cursor, with HMAC rotation and size enforcement."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"validation-and-safety",children:"Validation and safety"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JSONSchema validates mapping and filters; CI should run validation before deployment."}),"\n",(0,r.jsx)(n.li,{children:"Cookie size is enforced; oversize cookies increment a metric and are rejected at signing time."}),"\n",(0,r.jsxs)(n.li,{children:["Plugin functions register via ",(0,r.jsx)(n.code,{children:"plugins:"})," entries; mapping evaluation runs with argument validation and safe fallbacks."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"operational-guidance",children:"Operational guidance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Prefer explicit ",(0,r.jsx)(n.code,{children:"merge_rules"})," when consolidating attributes across systems; list multi-source attributes under ",(0,r.jsx)(n.code,{children:"merge_unique"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Keep ",(0,r.jsx)(n.code,{children:"projection_profiles.default"})," lean for common reads; define additional profiles for heavy attributes."]}),"\n",(0,r.jsxs)(n.li,{children:["Start with ",(0,r.jsx)(n.code,{children:"attribute_gate: true"})," and authorize attributes via PDP policies."]}),"\n",(0,r.jsx)(n.li,{children:"Monitor metrics: search/aggregator latencies, mapping computed/dropped counts, cookie oversize totals."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"Minimal person object with projection and merge rules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'objects:\r\n  person:\r\n    base_dn: "ou=people,dc=ldap,dc=internal"\r\n    rdn: uid\r\n    objectClasses: [inetOrgPerson, organizationalPerson, person, top]\r\n    projection_profiles:\r\n      default: [uid, cn, mail]\r\n    attributes:\r\n      uid: "$.subject"\r\n      cn: { func: concat, args: ["$.profile.given_name", " ", "$.profile.family_name"] }\r\n      mail: "$.emails.primary"\r\n\r\nmerge_rules:\r\n  precedence: [sys_ad1, sys_rest]\r\n  attributes:\r\n    mail: { pick: first_present, sources: ["sys_ad1.mail", "sys_rest.email"] }\r\n    memberOf: { merge_unique: { sources: ["sys_ad1.memberOf", "sys_rest.groups"], sort: ci } }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"backwards-compatibility",children:"Backwards compatibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"projection_profiles.default"})," is not defined, the executor includes all computed attributes (plus ",(0,r.jsx)(n.code,{children:"dn"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"merge_rules"})," is omitted, the aggregator defaults to source order for scalar selection and merges list attributes naively when provided by a single system."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing-summary",children:"Testing summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Unit tests validate:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Projection profiles default + PDP gating behavior."}),"\n",(0,r.jsx)(n.li,{children:"First-present fallback ignoring empty values."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"merge_unique"})," case-insensitive sorting and uniqueness."]}),"\n",(0,r.jsx)(n.li,{children:"Composite cursor records last consumed per-source offsets when rows remain."}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
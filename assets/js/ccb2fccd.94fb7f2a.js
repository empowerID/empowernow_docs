"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[1897],{28121:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"services/pdp/explanation/overview","title":"PDP Overview","description":"What the PDP does, how decisions flow, and where to integrate.","source":"@site/docs/services/pdp/explanation/overview.md","sourceDirName":"services/pdp/explanation","slug":"/services/pdp/explanation/overview","permalink":"/empowernow_docs/docs/services/pdp/explanation/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/pdp/explanation/overview.md","tags":[],"version":"current","frontMatter":{"id":"overview","title":"PDP Overview","description":"What the PDP does, how decisions flow, and where to integrate."}}');var r=i(74848),t=i(28453);const o={id:"overview",title:"PDP Overview",description:"What the PDP does, how decisions flow, and where to integrate."},c=void 0,a={},l=[{value:"Decision sequence (high level)",id:"decision-sequence-high-level",level:3},{value:"Secrets policy integration",id:"secrets-policy-integration",level:3},{value:"Batch authorization example",id:"batch-authorization-example",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The Policy Decision Point (PDP) evaluates authorization policies and returns allow/deny decisions along with obligations/advices as needed. Integrate via the BFF or directly from services that require centralized authorization."}),"\n",(0,r.jsx)(n.h3,{id:"decision-sequence-high-level",children:"Decision sequence (high level)"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\r\n  participant C as Client (SPA/Service)\r\n  participant B as BFF / PEP\r\n  participant P as PDP\r\n  C->>B: API call\r\n  B->>P: Authorize(subject, resource, action, ctx)\r\n  P--\x3e>B: Decision + obligations\r\n  B--\x3e>C: Enforce result, emit logs/metrics"}),"\n",(0,r.jsx)(n.h3,{id:"secrets-policy-integration",children:"Secrets policy integration"}),"\n",(0,r.jsxs)(n.p,{children:["The CRUDService\u2019s ",(0,r.jsx)(n.code,{children:"VaultService"})," acts as a PEP for secrets. It:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Normalizes pointers into Canonical Secret URIs and computes non\u2011leaky ",(0,r.jsx)(n.code,{children:"resource_ref"})," identifiers"]}),"\n",(0,r.jsx)(n.li,{children:"Obtains short\u2011lived, sender\u2011bound grants from the Secret Policy Service (PDP client)"}),"\n",(0,r.jsxs)(n.li,{children:["Enforces anti\u2011replay (",(0,r.jsx)(n.code,{children:"jti"}),") and DPoP/mTLS binding"]}),"\n",(0,r.jsx)(n.li,{children:"Honors provider semantics (KVv2 version pins; deleted/destroyed mapping; leases)"}),"\n",(0,r.jsx)(n.li,{children:"Emits non\u2011leaky audits and integrates with egress secret slots"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"See CRUD Service \u2192 Secrets enforcement for architecture, flows, and error codes."}),"\n",(0,r.jsx)(n.h3,{id:"batch-authorization-example",children:"Batch authorization example"}),"\n",(0,r.jsx)(n.p,{children:"Request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "subject": {"sub":"auth:acct:github:octocat"},\r\n  "tenant_id":"t-123",\r\n  "aud":["crud.secrets"],\r\n  "jti":"1a2b3c",\r\n  "resources":[\r\n    {"type":"secret","action":"use","id":"auth:v1:resource:secret:openbao-X:abc"},\r\n    {"type":"secret","action":"use","id":"auth:v1:resource:secret:openbao-X:def"}\r\n  ]\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Response"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "decisions":[\r\n    {"id":"auth:v1:resource:secret:openbao-X:abc","effect":"Permit","obligations":{"ttl_s":300,"max_uses":1}},\r\n    {"id":"auth:v1:resource:secret:openbao-X:def","effect":"Deny"}\r\n  ],\r\n  "decision_id":"d-789",\r\n  "policy_version":"p-42"\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Decision flow at a glance:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["SPA \u2192 BFF ",(0,r.jsx)(n.code,{children:"/api/..."})," \u2192 BFF maps path/method \u2192 ",(0,r.jsx)(n.code,{children:"resource"}),"/",(0,r.jsx)(n.code,{children:"action"})," (+ optional ",(0,r.jsx)(n.code,{children:"id"}),"/",(0,r.jsx)(n.code,{children:"props"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"BFF calls PDP with subject, resource, action, context"}),"\n",(0,r.jsx)(n.li,{children:"PDP returns allow/deny (+ obligations) \u2192 BFF enforces and logs/metrics"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Read next:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure PDP: ",(0,r.jsx)(n.code,{children:"/docs/services/pdp/how-to/configure"})]}),"\n",(0,r.jsxs)(n.li,{children:["PDP route mapping in BFF: ",(0,r.jsx)(n.code,{children:"/docs/services/bff/reference/pdp-mapping"})]}),"\n",(0,r.jsxs)(n.li,{children:["Observability: ",(0,r.jsx)(n.code,{children:"/docs/services/pdp/how-to/observability"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3120],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var o=s(96540);const i={},t=o.createContext(i);function r(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(t.Provider,{value:n},e.children)}},75962:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"services/bff/how-to/incident-runbooks","title":"Incident Runbooks \u2014 Common Scenarios","description":"401 storm on /api/","source":"@site/docs/services/bff/how-to/incident-runbooks.md","sourceDirName":"services/bff/how-to","slug":"/services/bff/how-to/incident-runbooks","permalink":"/empowernow_docs/docs/services/bff/how-to/incident-runbooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/bff/how-to/incident-runbooks.md","tags":[],"version":"current","frontMatter":{"title":"Incident Runbooks \u2014 Common Scenarios"},"sidebar":"tutorialSidebar","previous":{"title":"Health and Readiness Probes","permalink":"/empowernow_docs/docs/services/bff/how-to/health-readiness"},"next":{"title":"Configure Budgets and Receipts","permalink":"/empowernow_docs/docs/services/bff/how-to/llm-routing-budgets"}}');var i=s(74848),t=s(28453);const r={title:"Incident Runbooks \u2014 Common Scenarios"},c=void 0,l={},d=[];function a(e){const n={code:"code",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"401 storm on /api/**"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Symptom: sharp rise in 401s, SPAs stuck on login"}),"\n",(0,i.jsxs)(n.li,{children:["Checks: cookie domain/scope, ",(0,i.jsx)(n.code,{children:"/auth/session"})," truth, CORS allowlist; ForwardAuth headers present"]}),"\n",(0,i.jsx)(n.li,{children:"Action: fix cookie domain or allowlist; redeploy; verify 200s resume"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"PDP degraded"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Symptom: 5xx/latency in PDP client logs; 403s increase"}),"\n",(0,i.jsx)(n.li,{children:"Checks: PDP health, network path, PDP caches"}),"\n",(0,i.jsx)(n.li,{children:"Action: fail open only if policy allows; otherwise communicate outage; consider increasing deny TTLs temporarily"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"IdP down"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Symptom: login/callback failures; refresh errors"}),"\n",(0,i.jsx)(n.li,{children:"Checks: IdP health; retry/backoff metrics; edge routes"}),"\n",(0,i.jsx)(n.li,{children:"Action: keep existing sessions; disable features requiring fresh tokens; escalate"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Redis unavailable"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Symptom: session lookups fail; 401s"}),"\n",(0,i.jsx)(n.li,{children:"Checks: Redis health; persistence; memory policy"}),"\n",(0,i.jsx)(n.li,{children:"Action: restore Redis; consider rolling session TTL; communicate re\u2011login requirement"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);
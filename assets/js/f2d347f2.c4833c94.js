"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[4371],{28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>l});var c=o(96540);const r={},s=c.createContext(r);function t(e){const n=c.useContext(s);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),c.createElement(s.Provider,{value:n},e.children)}},82467:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"services/nowconnect/how-to/ldaps-multi-backend","title":"ldaps-multi-backend","description":"LDAPS: Multiple Backends (one listener per backend)","source":"@site/docs/services/nowconnect/how-to/ldaps-multi-backend.md","sourceDirName":"services/nowconnect/how-to","slug":"/services/nowconnect/how-to/ldaps-multi-backend","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/ldaps-multi-backend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/nowconnect/how-to/ldaps-multi-backend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"kubernetes-deploy","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/kubernetes-deploy"},"next":{"title":"Operational validation & health","permalink":"/empowernow_docs/docs/services/nowconnect/how-to/operational-validation-health"}}');var r=o(74848),s=o(28453);const t={},l=void 0,i={},d=[{value:"LDAPS: Multiple Backends (one listener per backend)",id:"ldaps-multiple-backends-one-listener-per-backend",level:2},{value:"Yes \u2014 define one cloud listener per LDAPS backend; premise dials each target on 636",id:"yes--define-one-cloud-listener-per-ldaps-backend-premise-dials-each-target-on-636",level:3},{value:"Cloud config (one port per backend \u2192 unique connector names)",id:"cloud-config-one-port-per-backend--unique-connector-names",level:3},{value:"Premise config (all backends use port 636 locally)",id:"premise-config-all-backends-use-port-636-locally",level:3},{value:"Client/system configuration",id:"clientsystem-configuration",level:3},{value:"How the flow works",id:"how-the-flow-works",level:3},{value:"Important note on TLS certificates (LDAPS)",id:"important-note-on-tls-certificates-ldaps",level:3},{value:"Summary of what to configure",id:"summary-of-what-to-configure",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"ldaps-multiple-backends-one-listener-per-backend",children:"LDAPS: Multiple Backends (one listener per backend)"}),"\n",(0,r.jsx)(n.h3,{id:"yes--define-one-cloud-listener-per-ldaps-backend-premise-dials-each-target-on-636",children:"Yes \u2014 define one cloud listener per LDAPS backend; premise dials each target on 636"}),"\n",(0,r.jsx)(n.p,{children:"You\u2019ll give each backend its own connector and its own cloud listener port. The premise agent exports those connectors and maps each to the correct on\u2011prem host:636. No code changes are needed."}),"\n",(0,r.jsx)(n.h3,{id:"cloud-config-one-port-per-backend--unique-connector-names",children:"Cloud config (one port per backend \u2192 unique connector names)"}),"\n",(0,r.jsxs)(n.p,{children:["Add per\u2011backend listeners in ",(0,r.jsx)(n.code,{children:"ServiceConfigs/NowConnect/config/cloud.yaml"}),". Example for 3 servers; scale to 10."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# ServiceConfigs/NowConnect/config/cloud.yaml\r\nlisteners:\r\n  - { name: ldaps_dc1, bind: "0.0.0.0:6361", connector: "ldaps_dc1" }\r\n  - { name: ldaps_dc2, bind: "0.0.0.0:6362", connector: "ldaps_dc2" }\r\n  - { name: ldaps_dc3, bind: "0.0.0.0:6363", connector: "ldaps_dc3" }\r\n\r\n# other cloud settings unchanged...\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Docker/compose: expose 6361..636N on the cloud container."}),"\n",(0,r.jsx)(n.li,{children:"Kubernetes: create a Service exposing 6361..636N (one Service with multiple ports or one per listener)."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example k8s Service (multi\u2011port):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: nowconnect-cloud-tcp\r\nspec:\r\n  selector: { app: nowconnect-cloud }\r\n  type: LoadBalancer\r\n  ports:\r\n    - { name: ldaps-dc1, port: 6361, targetPort: 6361 }\r\n    - { name: ldaps-dc2, port: 6362, targetPort: 6362 }\r\n    - { name: ldaps-dc3, port: 6363, targetPort: 6363 }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"premise-config-all-backends-use-port-636-locally",children:"Premise config (all backends use port 636 locally)"}),"\n",(0,r.jsx)(n.p,{children:"Export the same connectors and map them to each on\u2011prem LDAPS host at port 636:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-env",children:"# nowconnect/premise/nowconnect.env\r\nNC_CONNECTORS=ldaps_dc1,ldaps_dc2,ldaps_dc3\r\n\r\nNC_TARGET_ldaps_dc1_HOST=dc1.corp.local\r\nNC_TARGET_ldaps_dc1_PORT=636\r\n\r\nNC_TARGET_ldaps_dc2_HOST=dc2.corp.local\r\nNC_TARGET_ldaps_dc2_PORT=636\r\n\r\nNC_TARGET_ldaps_dc3_HOST=dc3.corp.local\r\nNC_TARGET_ldaps_dc3_PORT=636\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clientsystem-configuration",children:"Client/system configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Point your client or consuming service to the cloud host and the listener port for the desired backend. Example adapting ",(0,r.jsx)(n.code,{children:"CRUDService/config/systems/av_openldap.yaml"})," to use ",(0,r.jsx)(n.code,{children:"ldaps_dc2"})," via port 6362:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'connection:\r\n  credentials:\r\n    username: "cn=admin,dc=example,dc=org"\r\n    password: "${{ENV:LDAP_ADMIN_PASSWORD}}"\r\n  server:\r\n    base_url: "nowconnect-cloud"   # if same Docker network: use cloud service name\r\n    # or use your LB DNS/IP, e.g. "nc-cloud.example.com"\r\n    port: 6362                     # maps to connector ldaps_dc2 on the cloud\r\n    use_ssl: true                  # LDAPS\r\n  base_dn: "dc=example,dc=org"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If running in Kubernetes, use the Service DNS name of the cloud component plus the listener port, e.g. ",(0,r.jsx)(n.code,{children:"nowconnect-cloud-tcp.nowconnect.svc.cluster.local:6362"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"how-the-flow-works",children:"How the flow works"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Client connects to the cloud on the listener port (e.g., 6362)."}),"\n",(0,r.jsxs)(n.li,{children:["Cloud listener for 6362 is configured with ",(0,r.jsx)(n.code,{children:'connector: "ldaps_dc2"'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cloud sends ",(0,r.jsx)(n.code,{children:'OPEN{connector:"ldaps_dc2"}'})," over the WS tunnel to the agent."]}),"\n",(0,r.jsxs)(n.li,{children:["Premise agent looks up ",(0,r.jsx)(n.code,{children:"ldaps_dc2"})," in its target map and dials ",(0,r.jsx)(n.code,{children:"dc2.corp.local:636"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Bytes move both ways (DATA frames). FIN/RST close semantics are handled."}),"\n",(0,r.jsxs)(n.li,{children:["TLS remains end\u2011to\u2011end between the client and ",(0,r.jsx)(n.code,{children:"dc2.corp.local"})," (the tunnel doesn\u2019t terminate TLS)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"important-note-on-tls-certificates-ldaps",children:"Important note on TLS certificates (LDAPS)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The server certificate presented is for ",(0,r.jsx)(n.code,{children:"dcX.corp.local"}),". If clients connect using the cloud\u2019s hostname, strict hostname verification may fail."]}),"\n",(0,r.jsxs)(n.li,{children:["Recommended mitigations:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Client uses the backend FQDN in its connection string (e.g., ",(0,r.jsx)(n.code,{children:"ldaps://dc2.corp.local:6362"}),"), with DNS for ",(0,r.jsx)(n.code,{children:"dc2.corp.local"})," pointing to the cloud LB IP. Hostname matches the cert; non\u2011standard port is fine."]}),"\n",(0,r.jsx)(n.li,{children:"Or assign separate load balancer IPs/DNS names per backend so clients can still use port 636."}),"\n",(0,r.jsx)(n.li,{children:"Avoid disabling certificate verification where possible."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"summary-of-what-to-configure",children:"Summary of what to configure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cloud"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add one listener per backend with unique bind port and unique ",(0,r.jsx)(n.code,{children:"connector"})," name."]}),"\n",(0,r.jsx)(n.li,{children:"Expose those ports via your LB/Service."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Premise"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Include all connector names in ",(0,r.jsx)(n.code,{children:"NC_CONNECTORS"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Map each ",(0,r.jsx)(n.code,{children:"NC_TARGET_<connector>_HOST"})," to the correct on\u2011prem LDAPS server; ",(0,r.jsx)(n.code,{children:"NC_TARGET_<connector>_PORT=636"})," for all."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This pattern generalizes to any TCP service (LDAP/LDAPS/ODBC/SSH/Telnet): unique cloud port per backend connector; premise always dials the real on\u2011prem port for that protocol."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);
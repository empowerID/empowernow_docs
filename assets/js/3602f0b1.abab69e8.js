"use strict";(self.webpackChunkempowernow_docs=self.webpackChunkempowernow_docs||[]).push([[3931],{1050:e=>{e.exports=JSON.parse('{"tag":{"label":"roles:admin","permalink":"/empowernow_docs/docs/tags/roles-admin","allTagsPath":"/empowernow_docs/docs/tags","count":5,"items":[{"id":"services/bff/reference/empowerid-direct","title":"EmpowerID direct API","description":"Purpose: call EmpowerID workflows and WebUI API directly via the BFF with OAuth token injection and PDP-aware context.","permalink":"/empowernow_docs/docs/services/bff/reference/empowerid-direct"},{"id":"services/bff/reference/idp-admin-proxy","title":"IdP admin proxy","description":"Purpose: route IdP admin API calls through the BFF with session enforcement and token injection.","permalink":"/empowernow_docs/docs/services/bff/reference/idp-admin-proxy"},{"id":"services/bff/reference/legacy-proxy","title":"Legacy services proxy","description":"Purpose: stable fa\xe7ade to legacy C# microservices with circuit breaker, caching, limits, and metrics.","permalink":"/empowernow_docs/docs/services/bff/reference/legacy-proxy"},{"id":"services/bff/how-to/run-empowerid-workflow","title":"Run an EmpowerID workflow via BFF","description":"Goal: execute a configured EmpowerID workflow through the BFF.","permalink":"/empowernow_docs/docs/services/bff/how-to/run-empowerid-workflow"},{"id":"services/bff/how-to/secure-idp-admin-proxy","title":"Secure the IdP admin proxy","description":"Goal: harden /api/v1/admin/* routes proxied to IdP.","permalink":"/empowernow_docs/docs/services/bff/how-to/secure-idp-admin-proxy"}],"unlisted":false}}')}}]);